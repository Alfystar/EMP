
STM_EMP_usb.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008b0c  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a4  08008c94  08008c94  00018c94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008d38  08008d38  000201e8  2**0
                  CONTENTS
  4 .ARM          00000008  08008d38  08008d38  00018d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008d40  08008d40  000201e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08008d40  08008d40  00018d40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08008d48  08008d48  00018d48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08008d50  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001f84  200001e8  08008f38  000201e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000216c  08008f38  0002216c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001e9b8  00000000  00000000  00020218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000043d5  00000000  00000000  0003ebd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001458  00000000  00000000  00042fa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000012e0  00000000  00000000  00044400  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00027c41  00000000  00000000  000456e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000199ec  00000000  00000000  0006d321  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cfad9  00000000  00000000  00086d0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  001567e6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005734  00000000  00000000  0015683c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001e8 	.word	0x200001e8
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08008c7c 	.word	0x08008c7c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001ec 	.word	0x200001ec
 80001c4:	08008c7c 	.word	0x08008c7c

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80001dc:	f000 b96e 	b.w	80004bc <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	9d08      	ldr	r5, [sp, #32]
 80001fe:	4604      	mov	r4, r0
 8000200:	468c      	mov	ip, r1
 8000202:	2b00      	cmp	r3, #0
 8000204:	f040 8083 	bne.w	800030e <__udivmoddi4+0x116>
 8000208:	428a      	cmp	r2, r1
 800020a:	4617      	mov	r7, r2
 800020c:	d947      	bls.n	800029e <__udivmoddi4+0xa6>
 800020e:	fab2 f282 	clz	r2, r2
 8000212:	b142      	cbz	r2, 8000226 <__udivmoddi4+0x2e>
 8000214:	f1c2 0020 	rsb	r0, r2, #32
 8000218:	fa24 f000 	lsr.w	r0, r4, r0
 800021c:	4091      	lsls	r1, r2
 800021e:	4097      	lsls	r7, r2
 8000220:	ea40 0c01 	orr.w	ip, r0, r1
 8000224:	4094      	lsls	r4, r2
 8000226:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800022a:	0c23      	lsrs	r3, r4, #16
 800022c:	fbbc f6f8 	udiv	r6, ip, r8
 8000230:	fa1f fe87 	uxth.w	lr, r7
 8000234:	fb08 c116 	mls	r1, r8, r6, ip
 8000238:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800023c:	fb06 f10e 	mul.w	r1, r6, lr
 8000240:	4299      	cmp	r1, r3
 8000242:	d909      	bls.n	8000258 <__udivmoddi4+0x60>
 8000244:	18fb      	adds	r3, r7, r3
 8000246:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 800024a:	f080 8119 	bcs.w	8000480 <__udivmoddi4+0x288>
 800024e:	4299      	cmp	r1, r3
 8000250:	f240 8116 	bls.w	8000480 <__udivmoddi4+0x288>
 8000254:	3e02      	subs	r6, #2
 8000256:	443b      	add	r3, r7
 8000258:	1a5b      	subs	r3, r3, r1
 800025a:	b2a4      	uxth	r4, r4
 800025c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000260:	fb08 3310 	mls	r3, r8, r0, r3
 8000264:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000268:	fb00 fe0e 	mul.w	lr, r0, lr
 800026c:	45a6      	cmp	lr, r4
 800026e:	d909      	bls.n	8000284 <__udivmoddi4+0x8c>
 8000270:	193c      	adds	r4, r7, r4
 8000272:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000276:	f080 8105 	bcs.w	8000484 <__udivmoddi4+0x28c>
 800027a:	45a6      	cmp	lr, r4
 800027c:	f240 8102 	bls.w	8000484 <__udivmoddi4+0x28c>
 8000280:	3802      	subs	r0, #2
 8000282:	443c      	add	r4, r7
 8000284:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000288:	eba4 040e 	sub.w	r4, r4, lr
 800028c:	2600      	movs	r6, #0
 800028e:	b11d      	cbz	r5, 8000298 <__udivmoddi4+0xa0>
 8000290:	40d4      	lsrs	r4, r2
 8000292:	2300      	movs	r3, #0
 8000294:	e9c5 4300 	strd	r4, r3, [r5]
 8000298:	4631      	mov	r1, r6
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	b902      	cbnz	r2, 80002a2 <__udivmoddi4+0xaa>
 80002a0:	deff      	udf	#255	; 0xff
 80002a2:	fab2 f282 	clz	r2, r2
 80002a6:	2a00      	cmp	r2, #0
 80002a8:	d150      	bne.n	800034c <__udivmoddi4+0x154>
 80002aa:	1bcb      	subs	r3, r1, r7
 80002ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002b0:	fa1f f887 	uxth.w	r8, r7
 80002b4:	2601      	movs	r6, #1
 80002b6:	fbb3 fcfe 	udiv	ip, r3, lr
 80002ba:	0c21      	lsrs	r1, r4, #16
 80002bc:	fb0e 331c 	mls	r3, lr, ip, r3
 80002c0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80002c4:	fb08 f30c 	mul.w	r3, r8, ip
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d907      	bls.n	80002dc <__udivmoddi4+0xe4>
 80002cc:	1879      	adds	r1, r7, r1
 80002ce:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 80002d2:	d202      	bcs.n	80002da <__udivmoddi4+0xe2>
 80002d4:	428b      	cmp	r3, r1
 80002d6:	f200 80e9 	bhi.w	80004ac <__udivmoddi4+0x2b4>
 80002da:	4684      	mov	ip, r0
 80002dc:	1ac9      	subs	r1, r1, r3
 80002de:	b2a3      	uxth	r3, r4
 80002e0:	fbb1 f0fe 	udiv	r0, r1, lr
 80002e4:	fb0e 1110 	mls	r1, lr, r0, r1
 80002e8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80002ec:	fb08 f800 	mul.w	r8, r8, r0
 80002f0:	45a0      	cmp	r8, r4
 80002f2:	d907      	bls.n	8000304 <__udivmoddi4+0x10c>
 80002f4:	193c      	adds	r4, r7, r4
 80002f6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80002fa:	d202      	bcs.n	8000302 <__udivmoddi4+0x10a>
 80002fc:	45a0      	cmp	r8, r4
 80002fe:	f200 80d9 	bhi.w	80004b4 <__udivmoddi4+0x2bc>
 8000302:	4618      	mov	r0, r3
 8000304:	eba4 0408 	sub.w	r4, r4, r8
 8000308:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800030c:	e7bf      	b.n	800028e <__udivmoddi4+0x96>
 800030e:	428b      	cmp	r3, r1
 8000310:	d909      	bls.n	8000326 <__udivmoddi4+0x12e>
 8000312:	2d00      	cmp	r5, #0
 8000314:	f000 80b1 	beq.w	800047a <__udivmoddi4+0x282>
 8000318:	2600      	movs	r6, #0
 800031a:	e9c5 0100 	strd	r0, r1, [r5]
 800031e:	4630      	mov	r0, r6
 8000320:	4631      	mov	r1, r6
 8000322:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000326:	fab3 f683 	clz	r6, r3
 800032a:	2e00      	cmp	r6, #0
 800032c:	d14a      	bne.n	80003c4 <__udivmoddi4+0x1cc>
 800032e:	428b      	cmp	r3, r1
 8000330:	d302      	bcc.n	8000338 <__udivmoddi4+0x140>
 8000332:	4282      	cmp	r2, r0
 8000334:	f200 80b8 	bhi.w	80004a8 <__udivmoddi4+0x2b0>
 8000338:	1a84      	subs	r4, r0, r2
 800033a:	eb61 0103 	sbc.w	r1, r1, r3
 800033e:	2001      	movs	r0, #1
 8000340:	468c      	mov	ip, r1
 8000342:	2d00      	cmp	r5, #0
 8000344:	d0a8      	beq.n	8000298 <__udivmoddi4+0xa0>
 8000346:	e9c5 4c00 	strd	r4, ip, [r5]
 800034a:	e7a5      	b.n	8000298 <__udivmoddi4+0xa0>
 800034c:	f1c2 0320 	rsb	r3, r2, #32
 8000350:	fa20 f603 	lsr.w	r6, r0, r3
 8000354:	4097      	lsls	r7, r2
 8000356:	fa01 f002 	lsl.w	r0, r1, r2
 800035a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800035e:	40d9      	lsrs	r1, r3
 8000360:	4330      	orrs	r0, r6
 8000362:	0c03      	lsrs	r3, r0, #16
 8000364:	fbb1 f6fe 	udiv	r6, r1, lr
 8000368:	fa1f f887 	uxth.w	r8, r7
 800036c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000370:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000374:	fb06 f108 	mul.w	r1, r6, r8
 8000378:	4299      	cmp	r1, r3
 800037a:	fa04 f402 	lsl.w	r4, r4, r2
 800037e:	d909      	bls.n	8000394 <__udivmoddi4+0x19c>
 8000380:	18fb      	adds	r3, r7, r3
 8000382:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8000386:	f080 808d 	bcs.w	80004a4 <__udivmoddi4+0x2ac>
 800038a:	4299      	cmp	r1, r3
 800038c:	f240 808a 	bls.w	80004a4 <__udivmoddi4+0x2ac>
 8000390:	3e02      	subs	r6, #2
 8000392:	443b      	add	r3, r7
 8000394:	1a5b      	subs	r3, r3, r1
 8000396:	b281      	uxth	r1, r0
 8000398:	fbb3 f0fe 	udiv	r0, r3, lr
 800039c:	fb0e 3310 	mls	r3, lr, r0, r3
 80003a0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003a4:	fb00 f308 	mul.w	r3, r0, r8
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d907      	bls.n	80003bc <__udivmoddi4+0x1c4>
 80003ac:	1879      	adds	r1, r7, r1
 80003ae:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80003b2:	d273      	bcs.n	800049c <__udivmoddi4+0x2a4>
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d971      	bls.n	800049c <__udivmoddi4+0x2a4>
 80003b8:	3802      	subs	r0, #2
 80003ba:	4439      	add	r1, r7
 80003bc:	1acb      	subs	r3, r1, r3
 80003be:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003c2:	e778      	b.n	80002b6 <__udivmoddi4+0xbe>
 80003c4:	f1c6 0c20 	rsb	ip, r6, #32
 80003c8:	fa03 f406 	lsl.w	r4, r3, r6
 80003cc:	fa22 f30c 	lsr.w	r3, r2, ip
 80003d0:	431c      	orrs	r4, r3
 80003d2:	fa20 f70c 	lsr.w	r7, r0, ip
 80003d6:	fa01 f306 	lsl.w	r3, r1, r6
 80003da:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80003de:	fa21 f10c 	lsr.w	r1, r1, ip
 80003e2:	431f      	orrs	r7, r3
 80003e4:	0c3b      	lsrs	r3, r7, #16
 80003e6:	fbb1 f9fe 	udiv	r9, r1, lr
 80003ea:	fa1f f884 	uxth.w	r8, r4
 80003ee:	fb0e 1119 	mls	r1, lr, r9, r1
 80003f2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80003f6:	fb09 fa08 	mul.w	sl, r9, r8
 80003fa:	458a      	cmp	sl, r1
 80003fc:	fa02 f206 	lsl.w	r2, r2, r6
 8000400:	fa00 f306 	lsl.w	r3, r0, r6
 8000404:	d908      	bls.n	8000418 <__udivmoddi4+0x220>
 8000406:	1861      	adds	r1, r4, r1
 8000408:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 800040c:	d248      	bcs.n	80004a0 <__udivmoddi4+0x2a8>
 800040e:	458a      	cmp	sl, r1
 8000410:	d946      	bls.n	80004a0 <__udivmoddi4+0x2a8>
 8000412:	f1a9 0902 	sub.w	r9, r9, #2
 8000416:	4421      	add	r1, r4
 8000418:	eba1 010a 	sub.w	r1, r1, sl
 800041c:	b2bf      	uxth	r7, r7
 800041e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000422:	fb0e 1110 	mls	r1, lr, r0, r1
 8000426:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800042a:	fb00 f808 	mul.w	r8, r0, r8
 800042e:	45b8      	cmp	r8, r7
 8000430:	d907      	bls.n	8000442 <__udivmoddi4+0x24a>
 8000432:	19e7      	adds	r7, r4, r7
 8000434:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000438:	d22e      	bcs.n	8000498 <__udivmoddi4+0x2a0>
 800043a:	45b8      	cmp	r8, r7
 800043c:	d92c      	bls.n	8000498 <__udivmoddi4+0x2a0>
 800043e:	3802      	subs	r0, #2
 8000440:	4427      	add	r7, r4
 8000442:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000446:	eba7 0708 	sub.w	r7, r7, r8
 800044a:	fba0 8902 	umull	r8, r9, r0, r2
 800044e:	454f      	cmp	r7, r9
 8000450:	46c6      	mov	lr, r8
 8000452:	4649      	mov	r1, r9
 8000454:	d31a      	bcc.n	800048c <__udivmoddi4+0x294>
 8000456:	d017      	beq.n	8000488 <__udivmoddi4+0x290>
 8000458:	b15d      	cbz	r5, 8000472 <__udivmoddi4+0x27a>
 800045a:	ebb3 020e 	subs.w	r2, r3, lr
 800045e:	eb67 0701 	sbc.w	r7, r7, r1
 8000462:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000466:	40f2      	lsrs	r2, r6
 8000468:	ea4c 0202 	orr.w	r2, ip, r2
 800046c:	40f7      	lsrs	r7, r6
 800046e:	e9c5 2700 	strd	r2, r7, [r5]
 8000472:	2600      	movs	r6, #0
 8000474:	4631      	mov	r1, r6
 8000476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800047a:	462e      	mov	r6, r5
 800047c:	4628      	mov	r0, r5
 800047e:	e70b      	b.n	8000298 <__udivmoddi4+0xa0>
 8000480:	4606      	mov	r6, r0
 8000482:	e6e9      	b.n	8000258 <__udivmoddi4+0x60>
 8000484:	4618      	mov	r0, r3
 8000486:	e6fd      	b.n	8000284 <__udivmoddi4+0x8c>
 8000488:	4543      	cmp	r3, r8
 800048a:	d2e5      	bcs.n	8000458 <__udivmoddi4+0x260>
 800048c:	ebb8 0e02 	subs.w	lr, r8, r2
 8000490:	eb69 0104 	sbc.w	r1, r9, r4
 8000494:	3801      	subs	r0, #1
 8000496:	e7df      	b.n	8000458 <__udivmoddi4+0x260>
 8000498:	4608      	mov	r0, r1
 800049a:	e7d2      	b.n	8000442 <__udivmoddi4+0x24a>
 800049c:	4660      	mov	r0, ip
 800049e:	e78d      	b.n	80003bc <__udivmoddi4+0x1c4>
 80004a0:	4681      	mov	r9, r0
 80004a2:	e7b9      	b.n	8000418 <__udivmoddi4+0x220>
 80004a4:	4666      	mov	r6, ip
 80004a6:	e775      	b.n	8000394 <__udivmoddi4+0x19c>
 80004a8:	4630      	mov	r0, r6
 80004aa:	e74a      	b.n	8000342 <__udivmoddi4+0x14a>
 80004ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80004b0:	4439      	add	r1, r7
 80004b2:	e713      	b.n	80002dc <__udivmoddi4+0xe4>
 80004b4:	3802      	subs	r0, #2
 80004b6:	443c      	add	r4, r7
 80004b8:	e724      	b.n	8000304 <__udivmoddi4+0x10c>
 80004ba:	bf00      	nop

080004bc <__aeabi_idiv0>:
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop

080004c0 <main>:
 * @retval int
 */

MP_ST_usb<packLinux2Ard, packArd2Linux, STM32MP_templateDefault()> MP_St;

int main(void) {
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b08a      	sub	sp, #40	; 0x28
 80004c4:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80004c6:	f001 fb95 	bl	8001bf4 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80004ca:	f000 f82b 	bl	8000524 <_Z18SystemClock_Configv>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80004ce:	f000 f95d 	bl	800078c <_ZL12MX_GPIO_Initv>
	MX_I2C1_Init();
 80004d2:	f000 f8b7 	bl	8000644 <_ZL12MX_I2C1_Initv>
	MX_I2S3_Init();
 80004d6:	f000 f8e9 	bl	80006ac <_ZL12MX_I2S3_Initv>
	MX_SPI1_Init();
 80004da:	f000 f91b 	bl	8000714 <_ZL12MX_SPI1_Initv>
	MX_USB_DEVICE_Init();
 80004de:	f007 fe05 	bl	80080ec <MX_USB_DEVICE_Init>

	/* USER CODE END 2 */

	/* Infinite loop */

	packArd2Linux pWrite { 0, "Hi sys" };
 80004e2:	4a0e      	ldr	r2, [pc, #56]	; (800051c <main+0x5c>)
 80004e4:	f107 031c 	add.w	r3, r7, #28
 80004e8:	ca07      	ldmia	r2, {r0, r1, r2}
 80004ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	packLinux2Ard pRead;
	HAL_Delay(1000);
 80004ee:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004f2:	f001 fbf1 	bl	8001cd8 <HAL_Delay>

	while (1) {
		MP_St.getData_wait(&pRead);
 80004f6:	1d3b      	adds	r3, r7, #4
 80004f8:	4619      	mov	r1, r3
 80004fa:	4809      	ldr	r0, [pc, #36]	; (8000520 <main+0x60>)
 80004fc:	f000 fa6b 	bl	80009d6 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE12getData_waitEPS1_>
		pWrite.num = pRead.num+1;
 8000500:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000504:	b29b      	uxth	r3, r3
 8000506:	3301      	adds	r3, #1
 8000508:	b29b      	uxth	r3, r3
 800050a:	b21b      	sxth	r3, r3
 800050c:	83bb      	strh	r3, [r7, #28]
		MP_St.packSend(&pWrite);
 800050e:	f107 031c 	add.w	r3, r7, #28
 8000512:	4619      	mov	r1, r3
 8000514:	4802      	ldr	r0, [pc, #8]	; (8000520 <main+0x60>)
 8000516:	f000 fa7c 	bl	8000a12 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_>
		MP_St.getData_wait(&pRead);
 800051a:	e7ec      	b.n	80004f6 <main+0x36>
 800051c:	08008c94 	.word	0x08008c94
 8000520:	200002f8 	.word	0x200002f8

08000524 <_Z18SystemClock_Configv>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8000524:	b580      	push	{r7, lr}
 8000526:	b098      	sub	sp, #96	; 0x60
 8000528:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 800052a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800052e:	2230      	movs	r2, #48	; 0x30
 8000530:	2100      	movs	r1, #0
 8000532:	4618      	mov	r0, r3
 8000534:	f008 fb56 	bl	8008be4 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8000538:	f107 031c 	add.w	r3, r7, #28
 800053c:	2200      	movs	r2, #0
 800053e:	601a      	str	r2, [r3, #0]
 8000540:	605a      	str	r2, [r3, #4]
 8000542:	609a      	str	r2, [r3, #8]
 8000544:	60da      	str	r2, [r3, #12]
 8000546:	611a      	str	r2, [r3, #16]
	RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = { 0 };
 8000548:	f107 030c 	add.w	r3, r7, #12
 800054c:	2200      	movs	r2, #0
 800054e:	601a      	str	r2, [r3, #0]
 8000550:	605a      	str	r2, [r3, #4]
 8000552:	609a      	str	r2, [r3, #8]
 8000554:	60da      	str	r2, [r3, #12]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8000556:	2300      	movs	r3, #0
 8000558:	60bb      	str	r3, [r7, #8]
 800055a:	4b38      	ldr	r3, [pc, #224]	; (800063c <_Z18SystemClock_Configv+0x118>)
 800055c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800055e:	4a37      	ldr	r2, [pc, #220]	; (800063c <_Z18SystemClock_Configv+0x118>)
 8000560:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000564:	6413      	str	r3, [r2, #64]	; 0x40
 8000566:	4b35      	ldr	r3, [pc, #212]	; (800063c <_Z18SystemClock_Configv+0x118>)
 8000568:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800056a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800056e:	60bb      	str	r3, [r7, #8]
 8000570:	68bb      	ldr	r3, [r7, #8]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000572:	2300      	movs	r3, #0
 8000574:	607b      	str	r3, [r7, #4]
 8000576:	4b32      	ldr	r3, [pc, #200]	; (8000640 <_Z18SystemClock_Configv+0x11c>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a31      	ldr	r2, [pc, #196]	; (8000640 <_Z18SystemClock_Configv+0x11c>)
 800057c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000580:	6013      	str	r3, [r2, #0]
 8000582:	4b2f      	ldr	r3, [pc, #188]	; (8000640 <_Z18SystemClock_Configv+0x11c>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800058a:	607b      	str	r3, [r7, #4]
 800058c:	687b      	ldr	r3, [r7, #4]
	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800058e:	2301      	movs	r3, #1
 8000590:	633b      	str	r3, [r7, #48]	; 0x30
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000592:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000596:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000598:	2302      	movs	r3, #2
 800059a:	64bb      	str	r3, [r7, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800059c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80005a0:	64fb      	str	r3, [r7, #76]	; 0x4c
	RCC_OscInitStruct.PLL.PLLM = 8;
 80005a2:	2308      	movs	r3, #8
 80005a4:	653b      	str	r3, [r7, #80]	; 0x50
	RCC_OscInitStruct.PLL.PLLN = 336;
 80005a6:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80005aa:	657b      	str	r3, [r7, #84]	; 0x54
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80005ac:	2302      	movs	r3, #2
 80005ae:	65bb      	str	r3, [r7, #88]	; 0x58
	RCC_OscInitStruct.PLL.PLLQ = 7;
 80005b0:	2307      	movs	r3, #7
 80005b2:	65fb      	str	r3, [r7, #92]	; 0x5c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80005b4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80005b8:	4618      	mov	r0, r3
 80005ba:	f003 fde1 	bl	8004180 <HAL_RCC_OscConfig>
 80005be:	4603      	mov	r3, r0
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	bf14      	ite	ne
 80005c4:	2301      	movne	r3, #1
 80005c6:	2300      	moveq	r3, #0
 80005c8:	b2db      	uxtb	r3, r3
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d001      	beq.n	80005d2 <_Z18SystemClock_Configv+0xae>
		Error_Handler();
 80005ce:	f000 f9db 	bl	8000988 <Error_Handler>
	}
	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80005d2:	230f      	movs	r3, #15
 80005d4:	61fb      	str	r3, [r7, #28]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80005d6:	2302      	movs	r3, #2
 80005d8:	623b      	str	r3, [r7, #32]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80005da:	2300      	movs	r3, #0
 80005dc:	627b      	str	r3, [r7, #36]	; 0x24
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80005de:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80005e2:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80005e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80005e8:	62fb      	str	r3, [r7, #44]	; 0x2c

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 80005ea:	f107 031c 	add.w	r3, r7, #28
 80005ee:	2105      	movs	r1, #5
 80005f0:	4618      	mov	r0, r3
 80005f2:	f004 f83d 	bl	8004670 <HAL_RCC_ClockConfig>
 80005f6:	4603      	mov	r3, r0
 80005f8:	2b00      	cmp	r3, #0
 80005fa:	bf14      	ite	ne
 80005fc:	2301      	movne	r3, #1
 80005fe:	2300      	moveq	r3, #0
 8000600:	b2db      	uxtb	r3, r3
 8000602:	2b00      	cmp	r3, #0
 8000604:	d001      	beq.n	800060a <_Z18SystemClock_Configv+0xe6>
		Error_Handler();
 8000606:	f000 f9bf 	bl	8000988 <Error_Handler>
	}
	PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 800060a:	2301      	movs	r3, #1
 800060c:	60fb      	str	r3, [r7, #12]
	PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 800060e:	23c0      	movs	r3, #192	; 0xc0
 8000610:	613b      	str	r3, [r7, #16]
	PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 8000612:	2302      	movs	r3, #2
 8000614:	617b      	str	r3, [r7, #20]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK) {
 8000616:	f107 030c 	add.w	r3, r7, #12
 800061a:	4618      	mov	r0, r3
 800061c:	f004 fa10 	bl	8004a40 <HAL_RCCEx_PeriphCLKConfig>
 8000620:	4603      	mov	r3, r0
 8000622:	2b00      	cmp	r3, #0
 8000624:	bf14      	ite	ne
 8000626:	2301      	movne	r3, #1
 8000628:	2300      	moveq	r3, #0
 800062a:	b2db      	uxtb	r3, r3
 800062c:	2b00      	cmp	r3, #0
 800062e:	d001      	beq.n	8000634 <_Z18SystemClock_Configv+0x110>
		Error_Handler();
 8000630:	f000 f9aa 	bl	8000988 <Error_Handler>
	}
}
 8000634:	bf00      	nop
 8000636:	3760      	adds	r7, #96	; 0x60
 8000638:	46bd      	mov	sp, r7
 800063a:	bd80      	pop	{r7, pc}
 800063c:	40023800 	.word	0x40023800
 8000640:	40007000 	.word	0x40007000

08000644 <_ZL12MX_I2C1_Initv>:
/**
 * @brief I2C1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_I2C1_Init(void) {
 8000644:	b580      	push	{r7, lr}
 8000646:	af00      	add	r7, sp, #0
	/* USER CODE END I2C1_Init 0 */

	/* USER CODE BEGIN I2C1_Init 1 */

	/* USER CODE END I2C1_Init 1 */
	hi2c1.Instance = I2C1;
 8000648:	4b15      	ldr	r3, [pc, #84]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 800064a:	4a16      	ldr	r2, [pc, #88]	; (80006a4 <_ZL12MX_I2C1_Initv+0x60>)
 800064c:	601a      	str	r2, [r3, #0]
	hi2c1.Init.ClockSpeed = 100000;
 800064e:	4b14      	ldr	r3, [pc, #80]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000650:	4a15      	ldr	r2, [pc, #84]	; (80006a8 <_ZL12MX_I2C1_Initv+0x64>)
 8000652:	605a      	str	r2, [r3, #4]
	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000654:	4b12      	ldr	r3, [pc, #72]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000656:	2200      	movs	r2, #0
 8000658:	609a      	str	r2, [r3, #8]
	hi2c1.Init.OwnAddress1 = 0;
 800065a:	4b11      	ldr	r3, [pc, #68]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 800065c:	2200      	movs	r2, #0
 800065e:	60da      	str	r2, [r3, #12]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000660:	4b0f      	ldr	r3, [pc, #60]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000662:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000666:	611a      	str	r2, [r3, #16]
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000668:	4b0d      	ldr	r3, [pc, #52]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 800066a:	2200      	movs	r2, #0
 800066c:	615a      	str	r2, [r3, #20]
	hi2c1.Init.OwnAddress2 = 0;
 800066e:	4b0c      	ldr	r3, [pc, #48]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000670:	2200      	movs	r2, #0
 8000672:	619a      	str	r2, [r3, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000674:	4b0a      	ldr	r3, [pc, #40]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000676:	2200      	movs	r2, #0
 8000678:	61da      	str	r2, [r3, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800067a:	4b09      	ldr	r3, [pc, #36]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 800067c:	2200      	movs	r2, #0
 800067e:	621a      	str	r2, [r3, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 8000680:	4807      	ldr	r0, [pc, #28]	; (80006a0 <_ZL12MX_I2C1_Initv+0x5c>)
 8000682:	f001 fe15 	bl	80022b0 <HAL_I2C_Init>
 8000686:	4603      	mov	r3, r0
 8000688:	2b00      	cmp	r3, #0
 800068a:	bf14      	ite	ne
 800068c:	2301      	movne	r3, #1
 800068e:	2300      	moveq	r3, #0
 8000690:	b2db      	uxtb	r3, r3
 8000692:	2b00      	cmp	r3, #0
 8000694:	d001      	beq.n	800069a <_ZL12MX_I2C1_Initv+0x56>
		Error_Handler();
 8000696:	f000 f977 	bl	8000988 <Error_Handler>
	}
	/* USER CODE BEGIN I2C1_Init 2 */

	/* USER CODE END I2C1_Init 2 */

}
 800069a:	bf00      	nop
 800069c:	bd80      	pop	{r7, pc}
 800069e:	bf00      	nop
 80006a0:	20000204 	.word	0x20000204
 80006a4:	40005400 	.word	0x40005400
 80006a8:	000186a0 	.word	0x000186a0

080006ac <_ZL12MX_I2S3_Initv>:
/**
 * @brief I2S3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_I2S3_Init(void) {
 80006ac:	b580      	push	{r7, lr}
 80006ae:	af00      	add	r7, sp, #0
	/* USER CODE END I2S3_Init 0 */

	/* USER CODE BEGIN I2S3_Init 1 */

	/* USER CODE END I2S3_Init 1 */
	hi2s3.Instance = SPI3;
 80006b0:	4b15      	ldr	r3, [pc, #84]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006b2:	4a16      	ldr	r2, [pc, #88]	; (800070c <_ZL12MX_I2S3_Initv+0x60>)
 80006b4:	601a      	str	r2, [r3, #0]
	hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 80006b6:	4b14      	ldr	r3, [pc, #80]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80006bc:	605a      	str	r2, [r3, #4]
	hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 80006be:	4b12      	ldr	r3, [pc, #72]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006c0:	2200      	movs	r2, #0
 80006c2:	609a      	str	r2, [r3, #8]
	hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 80006c4:	4b10      	ldr	r3, [pc, #64]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006c6:	2200      	movs	r2, #0
 80006c8:	60da      	str	r2, [r3, #12]
	hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 80006ca:	4b0f      	ldr	r3, [pc, #60]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006cc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80006d0:	611a      	str	r2, [r3, #16]
	hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 80006d2:	4b0d      	ldr	r3, [pc, #52]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006d4:	4a0e      	ldr	r2, [pc, #56]	; (8000710 <_ZL12MX_I2S3_Initv+0x64>)
 80006d6:	615a      	str	r2, [r3, #20]
	hi2s3.Init.CPOL = I2S_CPOL_LOW;
 80006d8:	4b0b      	ldr	r3, [pc, #44]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006da:	2200      	movs	r2, #0
 80006dc:	619a      	str	r2, [r3, #24]
	hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 80006de:	4b0a      	ldr	r3, [pc, #40]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006e0:	2200      	movs	r2, #0
 80006e2:	61da      	str	r2, [r3, #28]
	hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 80006e4:	4b08      	ldr	r3, [pc, #32]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006e6:	2200      	movs	r2, #0
 80006e8:	621a      	str	r2, [r3, #32]
	if (HAL_I2S_Init(&hi2s3) != HAL_OK) {
 80006ea:	4807      	ldr	r0, [pc, #28]	; (8000708 <_ZL12MX_I2S3_Initv+0x5c>)
 80006ec:	f001 ff24 	bl	8002538 <HAL_I2S_Init>
 80006f0:	4603      	mov	r3, r0
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	bf14      	ite	ne
 80006f6:	2301      	movne	r3, #1
 80006f8:	2300      	moveq	r3, #0
 80006fa:	b2db      	uxtb	r3, r3
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d001      	beq.n	8000704 <_ZL12MX_I2S3_Initv+0x58>
		Error_Handler();
 8000700:	f000 f942 	bl	8000988 <Error_Handler>
	}
	/* USER CODE BEGIN I2S3_Init 2 */

	/* USER CODE END I2S3_Init 2 */

}
 8000704:	bf00      	nop
 8000706:	bd80      	pop	{r7, pc}
 8000708:	20000258 	.word	0x20000258
 800070c:	40003c00 	.word	0x40003c00
 8000710:	00017700 	.word	0x00017700

08000714 <_ZL12MX_SPI1_Initv>:
/**
 * @brief SPI1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI1_Init(void) {
 8000714:	b580      	push	{r7, lr}
 8000716:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI1_Init 1 */

	/* USER CODE END SPI1_Init 1 */
	/* SPI1 parameter configuration*/
	hspi1.Instance = SPI1;
 8000718:	4b1a      	ldr	r3, [pc, #104]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 800071a:	4a1b      	ldr	r2, [pc, #108]	; (8000788 <_ZL12MX_SPI1_Initv+0x74>)
 800071c:	601a      	str	r2, [r3, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 800071e:	4b19      	ldr	r3, [pc, #100]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000720:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000724:	605a      	str	r2, [r3, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000726:	4b17      	ldr	r3, [pc, #92]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000728:	2200      	movs	r2, #0
 800072a:	609a      	str	r2, [r3, #8]
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800072c:	4b15      	ldr	r3, [pc, #84]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 800072e:	2200      	movs	r2, #0
 8000730:	60da      	str	r2, [r3, #12]
	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000732:	4b14      	ldr	r3, [pc, #80]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000734:	2200      	movs	r2, #0
 8000736:	611a      	str	r2, [r3, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000738:	4b12      	ldr	r3, [pc, #72]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 800073a:	2200      	movs	r2, #0
 800073c:	615a      	str	r2, [r3, #20]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 800073e:	4b11      	ldr	r3, [pc, #68]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000740:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000744:	619a      	str	r2, [r3, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000746:	4b0f      	ldr	r3, [pc, #60]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000748:	2200      	movs	r2, #0
 800074a:	61da      	str	r2, [r3, #28]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800074c:	4b0d      	ldr	r3, [pc, #52]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 800074e:	2200      	movs	r2, #0
 8000750:	621a      	str	r2, [r3, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000752:	4b0c      	ldr	r3, [pc, #48]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000754:	2200      	movs	r2, #0
 8000756:	625a      	str	r2, [r3, #36]	; 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000758:	4b0a      	ldr	r3, [pc, #40]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 800075a:	2200      	movs	r2, #0
 800075c:	629a      	str	r2, [r3, #40]	; 0x28
	hspi1.Init.CRCPolynomial = 10;
 800075e:	4b09      	ldr	r3, [pc, #36]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000760:	220a      	movs	r2, #10
 8000762:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 8000764:	4807      	ldr	r0, [pc, #28]	; (8000784 <_ZL12MX_SPI1_Initv+0x70>)
 8000766:	f004 faab 	bl	8004cc0 <HAL_SPI_Init>
 800076a:	4603      	mov	r3, r0
 800076c:	2b00      	cmp	r3, #0
 800076e:	bf14      	ite	ne
 8000770:	2301      	movne	r3, #1
 8000772:	2300      	moveq	r3, #0
 8000774:	b2db      	uxtb	r3, r3
 8000776:	2b00      	cmp	r3, #0
 8000778:	d001      	beq.n	800077e <_ZL12MX_SPI1_Initv+0x6a>
		Error_Handler();
 800077a:	f000 f905 	bl	8000988 <Error_Handler>
	}
	/* USER CODE BEGIN SPI1_Init 2 */

	/* USER CODE END SPI1_Init 2 */

}
 800077e:	bf00      	nop
 8000780:	bd80      	pop	{r7, pc}
 8000782:	bf00      	nop
 8000784:	200002a0 	.word	0x200002a0
 8000788:	40013000 	.word	0x40013000

0800078c <_ZL12MX_GPIO_Initv>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 800078c:	b580      	push	{r7, lr}
 800078e:	b08c      	sub	sp, #48	; 0x30
 8000790:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8000792:	f107 031c 	add.w	r3, r7, #28
 8000796:	2200      	movs	r2, #0
 8000798:	601a      	str	r2, [r3, #0]
 800079a:	605a      	str	r2, [r3, #4]
 800079c:	609a      	str	r2, [r3, #8]
 800079e:	60da      	str	r2, [r3, #12]
 80007a0:	611a      	str	r2, [r3, #16]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOE_CLK_ENABLE();
 80007a2:	2300      	movs	r3, #0
 80007a4:	61bb      	str	r3, [r7, #24]
 80007a6:	4b71      	ldr	r3, [pc, #452]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007aa:	4a70      	ldr	r2, [pc, #448]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007ac:	f043 0310 	orr.w	r3, r3, #16
 80007b0:	6313      	str	r3, [r2, #48]	; 0x30
 80007b2:	4b6e      	ldr	r3, [pc, #440]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007b6:	f003 0310 	and.w	r3, r3, #16
 80007ba:	61bb      	str	r3, [r7, #24]
 80007bc:	69bb      	ldr	r3, [r7, #24]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 80007be:	2300      	movs	r3, #0
 80007c0:	617b      	str	r3, [r7, #20]
 80007c2:	4b6a      	ldr	r3, [pc, #424]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007c6:	4a69      	ldr	r2, [pc, #420]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007c8:	f043 0304 	orr.w	r3, r3, #4
 80007cc:	6313      	str	r3, [r2, #48]	; 0x30
 80007ce:	4b67      	ldr	r3, [pc, #412]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007d2:	f003 0304 	and.w	r3, r3, #4
 80007d6:	617b      	str	r3, [r7, #20]
 80007d8:	697b      	ldr	r3, [r7, #20]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 80007da:	2300      	movs	r3, #0
 80007dc:	613b      	str	r3, [r7, #16]
 80007de:	4b63      	ldr	r3, [pc, #396]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007e2:	4a62      	ldr	r2, [pc, #392]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80007e8:	6313      	str	r3, [r2, #48]	; 0x30
 80007ea:	4b60      	ldr	r3, [pc, #384]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80007f2:	613b      	str	r3, [r7, #16]
 80007f4:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80007f6:	2300      	movs	r3, #0
 80007f8:	60fb      	str	r3, [r7, #12]
 80007fa:	4b5c      	ldr	r3, [pc, #368]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 80007fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007fe:	4a5b      	ldr	r2, [pc, #364]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000800:	f043 0301 	orr.w	r3, r3, #1
 8000804:	6313      	str	r3, [r2, #48]	; 0x30
 8000806:	4b59      	ldr	r3, [pc, #356]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000808:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800080a:	f003 0301 	and.w	r3, r3, #1
 800080e:	60fb      	str	r3, [r7, #12]
 8000810:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000812:	2300      	movs	r3, #0
 8000814:	60bb      	str	r3, [r7, #8]
 8000816:	4b55      	ldr	r3, [pc, #340]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000818:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800081a:	4a54      	ldr	r2, [pc, #336]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 800081c:	f043 0302 	orr.w	r3, r3, #2
 8000820:	6313      	str	r3, [r2, #48]	; 0x30
 8000822:	4b52      	ldr	r3, [pc, #328]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000824:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000826:	f003 0302 	and.w	r3, r3, #2
 800082a:	60bb      	str	r3, [r7, #8]
 800082c:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 800082e:	2300      	movs	r3, #0
 8000830:	607b      	str	r3, [r7, #4]
 8000832:	4b4e      	ldr	r3, [pc, #312]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000834:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000836:	4a4d      	ldr	r2, [pc, #308]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000838:	f043 0308 	orr.w	r3, r3, #8
 800083c:	6313      	str	r3, [r2, #48]	; 0x30
 800083e:	4b4b      	ldr	r3, [pc, #300]	; (800096c <_ZL12MX_GPIO_Initv+0x1e0>)
 8000840:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000842:	f003 0308 	and.w	r3, r3, #8
 8000846:	607b      	str	r3, [r7, #4]
 8000848:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 800084a:	2200      	movs	r2, #0
 800084c:	2108      	movs	r1, #8
 800084e:	4848      	ldr	r0, [pc, #288]	; (8000970 <_ZL12MX_GPIO_Initv+0x1e4>)
 8000850:	f001 fd14 	bl	800227c <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin,
 8000854:	2201      	movs	r2, #1
 8000856:	2101      	movs	r1, #1
 8000858:	4846      	ldr	r0, [pc, #280]	; (8000974 <_ZL12MX_GPIO_Initv+0x1e8>)
 800085a:	f001 fd0f 	bl	800227c <HAL_GPIO_WritePin>
			GPIO_PIN_SET);

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOD,
 800085e:	2200      	movs	r2, #0
 8000860:	f24f 0110 	movw	r1, #61456	; 0xf010
 8000864:	4844      	ldr	r0, [pc, #272]	; (8000978 <_ZL12MX_GPIO_Initv+0x1ec>)
 8000866:	f001 fd09 	bl	800227c <HAL_GPIO_WritePin>
	LD4_Pin | LD3_Pin | LD5_Pin | LD6_Pin | Audio_RST_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pin : CS_I2C_SPI_Pin */
	GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 800086a:	2308      	movs	r3, #8
 800086c:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800086e:	2301      	movs	r3, #1
 8000870:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000872:	2300      	movs	r3, #0
 8000874:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000876:	2300      	movs	r3, #0
 8000878:	62bb      	str	r3, [r7, #40]	; 0x28
	HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 800087a:	f107 031c 	add.w	r3, r7, #28
 800087e:	4619      	mov	r1, r3
 8000880:	483b      	ldr	r0, [pc, #236]	; (8000970 <_ZL12MX_GPIO_Initv+0x1e4>)
 8000882:	f001 fb5f 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
	GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 8000886:	2301      	movs	r3, #1
 8000888:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800088a:	2301      	movs	r3, #1
 800088c:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800088e:	2300      	movs	r3, #0
 8000890:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000892:	2300      	movs	r3, #0
 8000894:	62bb      	str	r3, [r7, #40]	; 0x28
	HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 8000896:	f107 031c 	add.w	r3, r7, #28
 800089a:	4619      	mov	r1, r3
 800089c:	4835      	ldr	r0, [pc, #212]	; (8000974 <_ZL12MX_GPIO_Initv+0x1e8>)
 800089e:	f001 fb51 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : PDM_OUT_Pin */
	GPIO_InitStruct.Pin = PDM_OUT_Pin;
 80008a2:	2308      	movs	r3, #8
 80008a4:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008a6:	2302      	movs	r3, #2
 80008a8:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008aa:	2300      	movs	r3, #0
 80008ac:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ae:	2300      	movs	r3, #0
 80008b0:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80008b2:	2305      	movs	r3, #5
 80008b4:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 80008b6:	f107 031c 	add.w	r3, r7, #28
 80008ba:	4619      	mov	r1, r3
 80008bc:	482d      	ldr	r0, [pc, #180]	; (8000974 <_ZL12MX_GPIO_Initv+0x1e8>)
 80008be:	f001 fb41 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : B1_Pin */
	GPIO_InitStruct.Pin = B1_Pin;
 80008c2:	2301      	movs	r3, #1
 80008c4:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 80008c6:	4b2d      	ldr	r3, [pc, #180]	; (800097c <_ZL12MX_GPIO_Initv+0x1f0>)
 80008c8:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008ca:	2300      	movs	r3, #0
 80008cc:	627b      	str	r3, [r7, #36]	; 0x24
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80008ce:	f107 031c 	add.w	r3, r7, #28
 80008d2:	4619      	mov	r1, r3
 80008d4:	482a      	ldr	r0, [pc, #168]	; (8000980 <_ZL12MX_GPIO_Initv+0x1f4>)
 80008d6:	f001 fb35 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : BOOT1_Pin */
	GPIO_InitStruct.Pin = BOOT1_Pin;
 80008da:	2304      	movs	r3, #4
 80008dc:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008de:	2300      	movs	r3, #0
 80008e0:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008e2:	2300      	movs	r3, #0
 80008e4:	627b      	str	r3, [r7, #36]	; 0x24
	HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 80008e6:	f107 031c 	add.w	r3, r7, #28
 80008ea:	4619      	mov	r1, r3
 80008ec:	4825      	ldr	r0, [pc, #148]	; (8000984 <_ZL12MX_GPIO_Initv+0x1f8>)
 80008ee:	f001 fb29 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : CLK_IN_Pin */
	GPIO_InitStruct.Pin = CLK_IN_Pin;
 80008f2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80008f6:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008f8:	2302      	movs	r3, #2
 80008fa:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008fc:	2300      	movs	r3, #0
 80008fe:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000900:	2300      	movs	r3, #0
 8000902:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8000904:	2305      	movs	r3, #5
 8000906:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 8000908:	f107 031c 	add.w	r3, r7, #28
 800090c:	4619      	mov	r1, r3
 800090e:	481d      	ldr	r0, [pc, #116]	; (8000984 <_ZL12MX_GPIO_Initv+0x1f8>)
 8000910:	f001 fb18 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin
	 Audio_RST_Pin */
	GPIO_InitStruct.Pin = LD4_Pin | LD3_Pin | LD5_Pin | LD6_Pin | Audio_RST_Pin;
 8000914:	f24f 0310 	movw	r3, #61456	; 0xf010
 8000918:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800091a:	2301      	movs	r3, #1
 800091c:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800091e:	2300      	movs	r3, #0
 8000920:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000922:	2300      	movs	r3, #0
 8000924:	62bb      	str	r3, [r7, #40]	; 0x28
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000926:	f107 031c 	add.w	r3, r7, #28
 800092a:	4619      	mov	r1, r3
 800092c:	4812      	ldr	r0, [pc, #72]	; (8000978 <_ZL12MX_GPIO_Initv+0x1ec>)
 800092e:	f001 fb09 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
	GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 8000932:	2320      	movs	r3, #32
 8000934:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000936:	2300      	movs	r3, #0
 8000938:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800093a:	2300      	movs	r3, #0
 800093c:	627b      	str	r3, [r7, #36]	; 0x24
	HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 800093e:	f107 031c 	add.w	r3, r7, #28
 8000942:	4619      	mov	r1, r3
 8000944:	480c      	ldr	r0, [pc, #48]	; (8000978 <_ZL12MX_GPIO_Initv+0x1ec>)
 8000946:	f001 fafd 	bl	8001f44 <HAL_GPIO_Init>

	/*Configure GPIO pin : MEMS_INT2_Pin */
	GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 800094a:	2302      	movs	r3, #2
 800094c:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800094e:	4b0b      	ldr	r3, [pc, #44]	; (800097c <_ZL12MX_GPIO_Initv+0x1f0>)
 8000950:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000952:	2300      	movs	r3, #0
 8000954:	627b      	str	r3, [r7, #36]	; 0x24
	HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 8000956:	f107 031c 	add.w	r3, r7, #28
 800095a:	4619      	mov	r1, r3
 800095c:	4804      	ldr	r0, [pc, #16]	; (8000970 <_ZL12MX_GPIO_Initv+0x1e4>)
 800095e:	f001 faf1 	bl	8001f44 <HAL_GPIO_Init>

}
 8000962:	bf00      	nop
 8000964:	3730      	adds	r7, #48	; 0x30
 8000966:	46bd      	mov	sp, r7
 8000968:	bd80      	pop	{r7, pc}
 800096a:	bf00      	nop
 800096c:	40023800 	.word	0x40023800
 8000970:	40021000 	.word	0x40021000
 8000974:	40020800 	.word	0x40020800
 8000978:	40020c00 	.word	0x40020c00
 800097c:	10120000 	.word	0x10120000
 8000980:	40020000 	.word	0x40020000
 8000984:	40020400 	.word	0x40020400

08000988 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8000988:	b480      	push	{r7}
 800098a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800098c:	b672      	cpsid	i
}
 800098e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8000990:	e7fe      	b.n	8000990 <Error_Handler+0x8>

08000992 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE10_callBacksC1Ev>:

  /// Call back function define ## FOR the specific template Class##
  /// (Pay attention here!!! Differente template class need different callback function with a DIFFERENT object pointer)
  typedef void (*packDetectCallBack)(MP<templateParCall()> *myInstance);  // Call every times a pack are detected

  typedef struct _callBacks {
 8000992:	b480      	push	{r7}
 8000994:	b083      	sub	sp, #12
 8000996:	af00      	add	r7, sp, #0
 8000998:	6078      	str	r0, [r7, #4]
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	2200      	movs	r2, #0
 800099e:	601a      	str	r2, [r3, #0]
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	4618      	mov	r0, r3
 80009a4:	370c      	adds	r7, #12
 80009a6:	46bd      	mov	sp, r7
 80009a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ac:	4770      	bx	lr

080009ae <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1Ev>:

// Parametric instantiation based on the compiled template class
templatePar()MP_ST_usb<templateParCall()> *MP_ST_usb<templateParCall()>::instance = nullptr;

templatePar()
MP_ST_usb<templateParCall()>::MP_ST_usb() : MP_ST_usb<templateParCall()>(callBacksMP()) {
 80009ae:	b580      	push	{r7, lr}
 80009b0:	b084      	sub	sp, #16
 80009b2:	af00      	add	r7, sp, #0
 80009b4:	6078      	str	r0, [r7, #4]
 80009b6:	2300      	movs	r3, #0
 80009b8:	60fb      	str	r3, [r7, #12]
 80009ba:	f107 030c 	add.w	r3, r7, #12
 80009be:	4618      	mov	r0, r3
 80009c0:	f7ff ffe7 	bl	8000992 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE10_callBacksC1Ev>
 80009c4:	68f9      	ldr	r1, [r7, #12]
 80009c6:	6878      	ldr	r0, [r7, #4]
 80009c8:	f000 f832 	bl	8000a30 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE>
}
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	4618      	mov	r0, r3
 80009d0:	3710      	adds	r7, #16
 80009d2:	46bd      	mov	sp, r7
 80009d4:	bd80      	pop	{r7, pc}

080009d6 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE12getData_waitEPS1_>:


templatePar() MP_ST_usb<templateParCall()>::~MP_ST_usb() {
}

templatePar()int16_t MP_ST_usb<templateParCall()>::getData_wait(pIn *pack) {
 80009d6:	b580      	push	{r7, lr}
 80009d8:	b082      	sub	sp, #8
 80009da:	af00      	add	r7, sp, #0
 80009dc:	6078      	str	r0, [r7, #4]
 80009de:	6039      	str	r1, [r7, #0]
	while (this->dataAvailable() < 1) {
 80009e0:	687b      	ldr	r3, [r7, #4]
 80009e2:	4618      	mov	r0, r3
 80009e4:	f000 f866 	bl	8000ab4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13dataAvailableEv>
 80009e8:	4603      	mov	r3, r0
 80009ea:	2b00      	cmp	r3, #0
 80009ec:	bf0c      	ite	eq
 80009ee:	2301      	moveq	r3, #1
 80009f0:	2300      	movne	r3, #0
 80009f2:	b2db      	uxtb	r3, r3
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	d000      	beq.n	80009fa <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE12getData_waitEPS1_+0x24>
 80009f8:	e7f2      	b.n	80009e0 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE12getData_waitEPS1_+0xa>
	}
	return this->getData_try(pack);
 80009fa:	687a      	ldr	r2, [r7, #4]
 80009fc:	687b      	ldr	r3, [r7, #4]
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	6839      	ldr	r1, [r7, #0]
 8000a04:	4610      	mov	r0, r2
 8000a06:	4798      	blx	r3
 8000a08:	4603      	mov	r3, r0
}
 8000a0a:	4618      	mov	r0, r3
 8000a0c:	3708      	adds	r7, #8
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bd80      	pop	{r7, pc}

08000a12 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_>:
/// Data Send & Get
/*    On success return 0
 *    On fail return -1
 */

templatePar() int MP<templateParCall()>::packSend(pOut *pack) { return packSend(pack, sizeof(pOut)); }
 8000a12:	b580      	push	{r7, lr}
 8000a14:	b082      	sub	sp, #8
 8000a16:	af00      	add	r7, sp, #0
 8000a18:	6078      	str	r0, [r7, #4]
 8000a1a:	6039      	str	r1, [r7, #0]
 8000a1c:	220c      	movs	r2, #12
 8000a1e:	6839      	ldr	r1, [r7, #0]
 8000a20:	6878      	ldr	r0, [r7, #4]
 8000a22:	f000 f87c 	bl	8000b1e <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t>
 8000a26:	4603      	mov	r3, r0
 8000a28:	4618      	mov	r0, r3
 8000a2a:	3708      	adds	r7, #8
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	bd80      	pop	{r7, pc}

08000a30 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE>:
MP_ST_usb<templateParCall()>::MP_ST_usb(callBacksMP callBack) : MP<templateParCall()>(callBack) {
 8000a30:	b580      	push	{r7, lr}
 8000a32:	b082      	sub	sp, #8
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	6078      	str	r0, [r7, #4]
 8000a38:	6039      	str	r1, [r7, #0]
 8000a3a:	687b      	ldr	r3, [r7, #4]
 8000a3c:	6839      	ldr	r1, [r7, #0]
 8000a3e:	4618      	mov	r0, r3
 8000a40:	f000 f90c 	bl	8000c5c <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS3_10_callBacksE>
 8000a44:	4a0e      	ldr	r2, [pc, #56]	; (8000a80 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x50>)
 8000a46:	687b      	ldr	r3, [r7, #4]
 8000a48:	601a      	str	r2, [r3, #0]
 8000a4a:	687b      	ldr	r3, [r7, #4]
 8000a4c:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000a50:	4618      	mov	r0, r3
 8000a52:	f000 f927 	bl	8000ca4 <_ZN14CircularBufferIhLt368EEC1Ev>
	byteSend.memClean();
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000a5c:	4618      	mov	r0, r3
 8000a5e:	f000 f935 	bl	8000ccc <_ZN14CircularBufferIhLt368EE8memCleanEv>
	instance = this;
 8000a62:	4a08      	ldr	r2, [pc, #32]	; (8000a84 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x54>)
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	6013      	str	r3, [r2, #0]
	USBD_Interface_fops_FS.Receive = MP_ST_usb<templateParCall()>::isrRead;
 8000a68:	4b07      	ldr	r3, [pc, #28]	; (8000a88 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x58>)
 8000a6a:	4a08      	ldr	r2, [pc, #32]	; (8000a8c <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x5c>)
 8000a6c:	60da      	str	r2, [r3, #12]
	USBD_Interface_fops_FS.TransmitCplt = MP_ST_usb<templateParCall()>::isrSendNotify;
 8000a6e:	4b06      	ldr	r3, [pc, #24]	; (8000a88 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x58>)
 8000a70:	4a07      	ldr	r2, [pc, #28]	; (8000a90 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS_2MPIS1_S2_Lb1ELt16ELt4EE10_callBacksE+0x60>)
 8000a72:	611a      	str	r2, [r3, #16]
}
 8000a74:	687b      	ldr	r3, [r7, #4]
 8000a76:	4618      	mov	r0, r3
 8000a78:	3708      	adds	r7, #8
 8000a7a:	46bd      	mov	sp, r7
 8000a7c:	bd80      	pop	{r7, pc}
 8000a7e:	bf00      	nop
 8000a80:	08008cf0 	.word	0x08008cf0
 8000a84:	20000664 	.word	0x20000664
 8000a88:	2000011c 	.word	0x2000011c
 8000a8c:	08000d09 	.word	0x08000d09
 8000a90:	08000d4d 	.word	0x08000d4d

08000a94 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EED1Ev>:
templatePar() MP_ST_usb<templateParCall()>::~MP_ST_usb() {
 8000a94:	b480      	push	{r7}
 8000a96:	b083      	sub	sp, #12
 8000a98:	af00      	add	r7, sp, #0
 8000a9a:	6078      	str	r0, [r7, #4]
}
 8000a9c:	4a04      	ldr	r2, [pc, #16]	; (8000ab0 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EED1Ev+0x1c>)
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	601a      	str	r2, [r3, #0]
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	4618      	mov	r0, r3
 8000aa6:	370c      	adds	r7, #12
 8000aa8:	46bd      	mov	sp, r7
 8000aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aae:	4770      	bx	lr
 8000ab0:	08008cf0 	.word	0x08008cf0

08000ab4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13dataAvailableEv>:
    return ret;

  return 0;
}

templatePar() uint16_t MP<templateParCall()>::dataAvailable() { return this->packRecive.usedSpace(); }
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	b082      	sub	sp, #8
 8000ab8:	af00      	add	r7, sp, #0
 8000aba:	6078      	str	r0, [r7, #4]
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000ac2:	4618      	mov	r0, r3
 8000ac4:	f000 f998 	bl	8000df8 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv>
 8000ac8:	4603      	mov	r3, r0
 8000aca:	4618      	mov	r0, r3
 8000acc:	3708      	adds	r7, #8
 8000ace:	46bd      	mov	sp, r7
 8000ad0:	bd80      	pop	{r7, pc}

08000ad2 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11getData_tryEPS1_>:

// On success: copy pack Logic, inside *pack are saved the tail data if possible,
// On fail: return -1 and *pack aren't touch
templatePar() int16_t MP<templateParCall()>::getData_try(pIn *pack) {
 8000ad2:	b580      	push	{r7, lr}
 8000ad4:	b082      	sub	sp, #8
 8000ad6:	af00      	add	r7, sp, #0
 8000ad8:	6078      	str	r0, [r7, #4]
 8000ada:	6039      	str	r1, [r7, #0]
  if (packRecive.isEmpty())
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000ae2:	4618      	mov	r0, r3
 8000ae4:	f000 f9ab 	bl	8000e3e <_ZNK14CircularBufferI14_packLinux2ArdLt4EE7isEmptyEv>
 8000ae8:	4603      	mov	r3, r0
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	d002      	beq.n	8000af4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11getData_tryEPS1_+0x22>
    return -1;
 8000aee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000af2:	e010      	b.n	8000b16 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11getData_tryEPS1_+0x44>
  // If data are dataAvailable
  memcpy(pack, packRecive.getPtr(), sizeof(pIn));
 8000af4:	687b      	ldr	r3, [r7, #4]
 8000af6:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000afa:	4618      	mov	r0, r3
 8000afc:	f000 f9b4 	bl	8000e68 <_ZN14CircularBufferI14_packLinux2ArdLt4EE6getPtrEv>
 8000b00:	4603      	mov	r3, r0
 8000b02:	2216      	movs	r2, #22
 8000b04:	4619      	mov	r1, r3
 8000b06:	6838      	ldr	r0, [r7, #0]
 8000b08:	f008 f85e 	bl	8008bc8 <memcpy>
  return dataAvailable();
 8000b0c:	6878      	ldr	r0, [r7, #4]
 8000b0e:	f7ff ffd1 	bl	8000ab4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13dataAvailableEv>
 8000b12:	4603      	mov	r3, r0
 8000b14:	b21b      	sxth	r3, r3
}
 8000b16:	4618      	mov	r0, r3
 8000b18:	3708      	adds	r7, #8
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	bd80      	pop	{r7, pc}

08000b1e <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t>:
templatePar() int MP<templateParCall()>::packSend(pOut *pack, uint16_t bSize) {
 8000b1e:	b5b0      	push	{r4, r5, r7, lr}
 8000b20:	b090      	sub	sp, #64	; 0x40
 8000b22:	af02      	add	r7, sp, #8
 8000b24:	60f8      	str	r0, [r7, #12]
 8000b26:	60b9      	str	r1, [r7, #8]
 8000b28:	4613      	mov	r3, r2
 8000b2a:	80fb      	strh	r3, [r7, #6]
  return 0;
 8000b2c:	466b      	mov	r3, sp
 8000b2e:	461d      	mov	r5, r3
  int ret = 0;
 8000b30:	2300      	movs	r3, #0
 8000b32:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint16_t packSize = bSize + CRC8_enable();
 8000b34:	88fb      	ldrh	r3, [r7, #6]
 8000b36:	3301      	adds	r3, #1
 8000b38:	867b      	strh	r3, [r7, #50]	; 0x32
  uint8_t packBuf[packSize]; // CRC8 may add 1 byte
 8000b3a:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8000b3c:	1e5c      	subs	r4, r3, #1
 8000b3e:	637c      	str	r4, [r7, #52]	; 0x34
 8000b40:	4623      	mov	r3, r4
 8000b42:	3301      	adds	r3, #1
 8000b44:	4618      	mov	r0, r3
 8000b46:	f04f 0100 	mov.w	r1, #0
 8000b4a:	f04f 0200 	mov.w	r2, #0
 8000b4e:	f04f 0300 	mov.w	r3, #0
 8000b52:	00cb      	lsls	r3, r1, #3
 8000b54:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000b58:	00c2      	lsls	r2, r0, #3
 8000b5a:	4623      	mov	r3, r4
 8000b5c:	3301      	adds	r3, #1
 8000b5e:	4618      	mov	r0, r3
 8000b60:	f04f 0100 	mov.w	r1, #0
 8000b64:	f04f 0200 	mov.w	r2, #0
 8000b68:	f04f 0300 	mov.w	r3, #0
 8000b6c:	00cb      	lsls	r3, r1, #3
 8000b6e:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000b72:	00c2      	lsls	r2, r0, #3
 8000b74:	4623      	mov	r3, r4
 8000b76:	3301      	adds	r3, #1
 8000b78:	3307      	adds	r3, #7
 8000b7a:	08db      	lsrs	r3, r3, #3
 8000b7c:	00db      	lsls	r3, r3, #3
 8000b7e:	ebad 0d03 	sub.w	sp, sp, r3
 8000b82:	ab02      	add	r3, sp, #8
 8000b84:	3300      	adds	r3, #0
 8000b86:	62bb      	str	r3, [r7, #40]	; 0x28
  memcpy(packBuf, pack, bSize);
 8000b88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000b8a:	88fa      	ldrh	r2, [r7, #6]
 8000b8c:	68b9      	ldr	r1, [r7, #8]
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f008 f81a 	bl	8008bc8 <memcpy>
    packBuf[packSize - 1] = crc8_stream((uint8_t *)pack, bSize);
 8000b94:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8000b96:	1e5c      	subs	r4, r3, #1
 8000b98:	88fb      	ldrh	r3, [r7, #6]
 8000b9a:	4619      	mov	r1, r3
 8000b9c:	68b8      	ldr	r0, [r7, #8]
 8000b9e:	f005 fdf3 	bl	8006788 <_Z11crc8_streamPht>
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	461a      	mov	r2, r3
 8000ba6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000ba8:	551a      	strb	r2, [r3, r4]
  uint16_t sendSize = packSize + 1; // Cobs add 1 byte
 8000baa:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8000bac:	3301      	adds	r3, #1
 8000bae:	84fb      	strh	r3, [r7, #38]	; 0x26
  uint8_t sendBuf[sendSize + 1]; // +1 for the final 0
 8000bb0:	8cfc      	ldrh	r4, [r7, #38]	; 0x26
 8000bb2:	623c      	str	r4, [r7, #32]
 8000bb4:	4623      	mov	r3, r4
 8000bb6:	3301      	adds	r3, #1
 8000bb8:	4618      	mov	r0, r3
 8000bba:	f04f 0100 	mov.w	r1, #0
 8000bbe:	f04f 0200 	mov.w	r2, #0
 8000bc2:	f04f 0300 	mov.w	r3, #0
 8000bc6:	00cb      	lsls	r3, r1, #3
 8000bc8:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000bcc:	00c2      	lsls	r2, r0, #3
 8000bce:	4623      	mov	r3, r4
 8000bd0:	3301      	adds	r3, #1
 8000bd2:	4618      	mov	r0, r3
 8000bd4:	f04f 0100 	mov.w	r1, #0
 8000bd8:	f04f 0200 	mov.w	r2, #0
 8000bdc:	f04f 0300 	mov.w	r3, #0
 8000be0:	00cb      	lsls	r3, r1, #3
 8000be2:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000be6:	00c2      	lsls	r2, r0, #3
 8000be8:	4623      	mov	r3, r4
 8000bea:	3301      	adds	r3, #1
 8000bec:	3307      	adds	r3, #7
 8000bee:	08db      	lsrs	r3, r3, #3
 8000bf0:	00db      	lsls	r3, r3, #3
 8000bf2:	ebad 0d03 	sub.w	sp, sp, r3
 8000bf6:	ab02      	add	r3, sp, #8
 8000bf8:	3300      	adds	r3, #0
 8000bfa:	61fb      	str	r3, [r7, #28]
  cobs_encode_result res = cobs_encode(sendBuf, sendSize, packBuf, packSize);
 8000bfc:	69f9      	ldr	r1, [r7, #28]
 8000bfe:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000c00:	6abc      	ldr	r4, [r7, #40]	; 0x28
 8000c02:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8000c04:	f107 0014 	add.w	r0, r7, #20
 8000c08:	9300      	str	r3, [sp, #0]
 8000c0a:	4623      	mov	r3, r4
 8000c0c:	f005 fc06 	bl	800641c <cobs_encode>
  if (res.status != COBS_ENCODE_OK)
 8000c10:	7e3b      	ldrb	r3, [r7, #24]
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d002      	beq.n	8000c1c <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t+0xfe>
    return -1;
 8000c16:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000c1a:	e019      	b.n	8000c50 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t+0x132>
  sendBuf[sendSize] = '\0';
 8000c1c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000c1e:	69fa      	ldr	r2, [r7, #28]
 8000c20:	2100      	movs	r1, #0
 8000c22:	54d1      	strb	r1, [r2, r3]
  if ((ret = packSend_Concrete(sendBuf, sendSize + 1)) != 0)
 8000c24:	68fb      	ldr	r3, [r7, #12]
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	3308      	adds	r3, #8
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	69f9      	ldr	r1, [r7, #28]
 8000c2e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000c30:	3201      	adds	r2, #1
 8000c32:	b292      	uxth	r2, r2
 8000c34:	68f8      	ldr	r0, [r7, #12]
 8000c36:	4798      	blx	r3
 8000c38:	62f8      	str	r0, [r7, #44]	; 0x2c
 8000c3a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000c3c:	2b00      	cmp	r3, #0
 8000c3e:	bf14      	ite	ne
 8000c40:	2301      	movne	r3, #1
 8000c42:	2300      	moveq	r3, #0
 8000c44:	b2db      	uxtb	r3, r3
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	d001      	beq.n	8000c4e <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t+0x130>
    return ret;
 8000c4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000c4c:	e000      	b.n	8000c50 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8packSendEPS2_t+0x132>
  return 0;
 8000c4e:	2300      	movs	r3, #0
 8000c50:	46ad      	mov	sp, r5
}
 8000c52:	4618      	mov	r0, r3
 8000c54:	3738      	adds	r7, #56	; 0x38
 8000c56:	46bd      	mov	sp, r7
 8000c58:	bdb0      	pop	{r4, r5, r7, pc}
	...

08000c5c <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS3_10_callBacksE>:
templatePar() MP<templateParCall()>::MP(callBacksMP clback_) : clback(clback_) { bufClear(); }
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b082      	sub	sp, #8
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	6078      	str	r0, [r7, #4]
 8000c64:	6039      	str	r1, [r7, #0]
 8000c66:	4a0e      	ldr	r2, [pc, #56]	; (8000ca0 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1ENS3_10_callBacksE+0x44>)
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	601a      	str	r2, [r3, #0]
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	683a      	ldr	r2, [r7, #0]
 8000c70:	605a      	str	r2, [r3, #4]
 8000c72:	687b      	ldr	r3, [r7, #4]
 8000c74:	2200      	movs	r2, #0
 8000c76:	811a      	strh	r2, [r3, #8]
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	330a      	adds	r3, #10
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f000 f811 	bl	8000ca4 <_ZN14CircularBufferIhLt368EEC1Ev>
 8000c82:	687b      	ldr	r3, [r7, #4]
 8000c84:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000c88:	4618      	mov	r0, r3
 8000c8a:	f000 f905 	bl	8000e98 <_ZN14CircularBufferI14_packLinux2ArdLt4EEC1Ev>
 8000c8e:	6878      	ldr	r0, [r7, #4]
 8000c90:	f000 f916 	bl	8000ec0 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8bufClearEv>
 8000c94:	687b      	ldr	r3, [r7, #4]
 8000c96:	4618      	mov	r0, r3
 8000c98:	3708      	adds	r7, #8
 8000c9a:	46bd      	mov	sp, r7
 8000c9c:	bd80      	pop	{r7, pc}
 8000c9e:	bf00      	nop
 8000ca0:	08008d0c 	.word	0x08008d0c

08000ca4 <_ZN14CircularBufferIhLt368EEC1Ev>:
  uint16_t tailInc();
  uint16_t tailAdd(uint16_t len);
  uint16_t tailSet(uint16_t pos); // in case of error can go back
};

template <class T, uint16_t nElem> CircularBuffer<T, nElem>::CircularBuffer() {
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b082      	sub	sp, #8
 8000ca8:	af00      	add	r7, sp, #0
 8000caa:	6078      	str	r0, [r7, #4]
  this->head_ = 0;
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	2200      	movs	r2, #0
 8000cb0:	f8a3 2172 	strh.w	r2, [r3, #370]	; 0x172
  this->tail_ = 0;
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	2200      	movs	r2, #0
 8000cb8:	f8a3 2174 	strh.w	r2, [r3, #372]	; 0x174
  memClean();
 8000cbc:	6878      	ldr	r0, [r7, #4]
 8000cbe:	f000 f805 	bl	8000ccc <_ZN14CircularBufferIhLt368EE8memCleanEv>
}
 8000cc2:	687b      	ldr	r3, [r7, #4]
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	3708      	adds	r7, #8
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	bd80      	pop	{r7, pc}

08000ccc <_ZN14CircularBufferIhLt368EE8memCleanEv>:

template <class T, uint16_t nElem> void CircularBuffer<T, nElem>::memClean() {
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	b084      	sub	sp, #16
 8000cd0:	af00      	add	r7, sp, #0
 8000cd2:	6078      	str	r0, [r7, #4]
  for (uint16_t i = 0; i < real_nElem; i++)
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	81fb      	strh	r3, [r7, #14]
 8000cd8:	89fb      	ldrh	r3, [r7, #14]
 8000cda:	f5b3 7fb8 	cmp.w	r3, #368	; 0x170
 8000cde:	d80b      	bhi.n	8000cf8 <_ZN14CircularBufferIhLt368EE8memCleanEv+0x2c>
    memset(&this->buf_[i], 0, sizeof(T));
 8000ce0:	89fb      	ldrh	r3, [r7, #14]
 8000ce2:	687a      	ldr	r2, [r7, #4]
 8000ce4:	4413      	add	r3, r2
 8000ce6:	2201      	movs	r2, #1
 8000ce8:	2100      	movs	r1, #0
 8000cea:	4618      	mov	r0, r3
 8000cec:	f007 ff7a 	bl	8008be4 <memset>
  for (uint16_t i = 0; i < real_nElem; i++)
 8000cf0:	89fb      	ldrh	r3, [r7, #14]
 8000cf2:	3301      	adds	r3, #1
 8000cf4:	81fb      	strh	r3, [r7, #14]
 8000cf6:	e7ef      	b.n	8000cd8 <_ZN14CircularBufferIhLt368EE8memCleanEv+0xc>
  reset();
 8000cf8:	6878      	ldr	r0, [r7, #4]
 8000cfa:	f000 f8f7 	bl	8000eec <_ZN14CircularBufferIhLt368EE5resetEv>
}
 8000cfe:	bf00      	nop
 8000d00:	3710      	adds	r7, #16
 8000d02:	46bd      	mov	sp, r7
 8000d04:	bd80      	pop	{r7, pc}
	...

08000d08 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE7isrReadEPhPm>:
 *
 * @param  Buf: Buffer of data to be received
 * @param  Len: Number of data received (in bytes)
 * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 */
templatePar()int8_t MP_ST_usb<templateParCall()>::isrRead(uint8_t *Buf, uint32_t *Len) {
 8000d08:	b580      	push	{r7, lr}
 8000d0a:	b084      	sub	sp, #16
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	6078      	str	r0, [r7, #4]
 8000d10:	6039      	str	r1, [r7, #0]
	MP_ST_usb<templateParCall()> *inst = MP_ST_usb<templateParCall()>::instance;
 8000d12:	4b0c      	ldr	r3, [pc, #48]	; (8000d44 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE7isrReadEPhPm+0x3c>)
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	60fb      	str	r3, [r7, #12]
	inst->byteRecive.putArray(Buf, *Len);
 8000d18:	68fb      	ldr	r3, [r7, #12]
 8000d1a:	f103 000a 	add.w	r0, r3, #10
 8000d1e:	683b      	ldr	r3, [r7, #0]
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	b29b      	uxth	r3, r3
 8000d24:	461a      	mov	r2, r3
 8000d26:	6879      	ldr	r1, [r7, #4]
 8000d28:	f000 f8f0 	bl	8000f0c <_ZN14CircularBufferIhLt368EE8putArrayEPht>
	USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 8000d2c:	4806      	ldr	r0, [pc, #24]	; (8000d48 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE7isrReadEPhPm+0x40>)
 8000d2e:	f006 f849 	bl	8006dc4 <USBD_CDC_ReceivePacket>
	inst->byteParsing();
 8000d32:	68fb      	ldr	r3, [r7, #12]
 8000d34:	4618      	mov	r0, r3
 8000d36:	f000 f8fb 	bl	8000f30 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv>
	return USBD_OK;
 8000d3a:	2300      	movs	r3, #0
}
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	3710      	adds	r7, #16
 8000d40:	46bd      	mov	sp, r7
 8000d42:	bd80      	pop	{r7, pc}
 8000d44:	20000664 	.word	0x20000664
 8000d48:	20000890 	.word	0x20000890

08000d4c <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh>:
templatePar()int8_t MP_ST_usb<templateParCall()>::isrSendNotify(uint8_t *Buf, uint32_t *Len, uint8_t epnum) {
 8000d4c:	b580      	push	{r7, lr}
 8000d4e:	b088      	sub	sp, #32
 8000d50:	af00      	add	r7, sp, #0
 8000d52:	60f8      	str	r0, [r7, #12]
 8000d54:	60b9      	str	r1, [r7, #8]
 8000d56:	4613      	mov	r3, r2
 8000d58:	71fb      	strb	r3, [r7, #7]
	MP_ST_usb<templateParCall()> *inst = MP_ST_usb<templateParCall()>::instance;
 8000d5a:	4b26      	ldr	r3, [pc, #152]	; (8000df4 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh+0xa8>)
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	61fb      	str	r3, [r7, #28]
	if (inst->byteSend.usedSpace()) {
 8000d60:	69fb      	ldr	r3, [r7, #28]
 8000d62:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000d66:	4618      	mov	r0, r3
 8000d68:	f000 f9a3 	bl	80010b2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv>
 8000d6c:	4603      	mov	r3, r0
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	bf14      	ite	ne
 8000d72:	2301      	movne	r3, #1
 8000d74:	2300      	moveq	r3, #0
 8000d76:	b2db      	uxtb	r3, r3
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d035      	beq.n	8000de8 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh+0x9c>
		len = inst->byteSend.usedSpaceLinear();
 8000d7c:	69fb      	ldr	r3, [r7, #28]
 8000d7e:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000d82:	4618      	mov	r0, r3
 8000d84:	f000 f9b9 	bl	80010fa <_ZNK14CircularBufferIhLt368EE15usedSpaceLinearEv>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	837b      	strh	r3, [r7, #26]
		uint8_t *tailPtr = inst->byteSend.getTailPtr();
 8000d8c:	69fb      	ldr	r3, [r7, #28]
 8000d8e:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000d92:	4618      	mov	r0, r3
 8000d94:	f000 f9d3 	bl	800113e <_ZN14CircularBufferIhLt368EE10getTailPtrEv>
 8000d98:	6178      	str	r0, [r7, #20]
		uint16_t tailBackUp = inst->byteSend.getTail();
 8000d9a:	69fb      	ldr	r3, [r7, #28]
 8000d9c:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000da0:	4618      	mov	r0, r3
 8000da2:	f000 f9dc 	bl	800115e <_ZNK14CircularBufferIhLt368EE7getTailEv>
 8000da6:	4603      	mov	r3, r0
 8000da8:	827b      	strh	r3, [r7, #18]
		inst->byteSend.tailAdd(len);
 8000daa:	69fb      	ldr	r3, [r7, #28]
 8000dac:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000db0:	8b7a      	ldrh	r2, [r7, #26]
 8000db2:	4611      	mov	r1, r2
 8000db4:	4618      	mov	r0, r3
 8000db6:	f000 f9df 	bl	8001178 <_ZN14CircularBufferIhLt368EE7tailAddEt>
		if (CDC_Transmit_FS(tailPtr, len) == USBD_BUSY) {
 8000dba:	8b7b      	ldrh	r3, [r7, #26]
 8000dbc:	4619      	mov	r1, r3
 8000dbe:	6978      	ldr	r0, [r7, #20]
 8000dc0:	f007 fa52 	bl	8008268 <CDC_Transmit_FS>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b01      	cmp	r3, #1
 8000dc8:	bf0c      	ite	eq
 8000dca:	2301      	moveq	r3, #1
 8000dcc:	2300      	movne	r3, #0
 8000dce:	b2db      	uxtb	r3, r3
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d009      	beq.n	8000de8 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh+0x9c>
			inst->byteSend.tailSet(tailBackUp);
 8000dd4:	69fb      	ldr	r3, [r7, #28]
 8000dd6:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8000dda:	8a7a      	ldrh	r2, [r7, #18]
 8000ddc:	4611      	mov	r1, r2
 8000dde:	4618      	mov	r0, r3
 8000de0:	f000 fa00 	bl	80011e4 <_ZN14CircularBufferIhLt368EE7tailSetEt>
			return USBD_FAIL;
 8000de4:	2303      	movs	r3, #3
 8000de6:	e000      	b.n	8000dea <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh+0x9e>
	return USBD_OK;
 8000de8:	2300      	movs	r3, #0
}
 8000dea:	4618      	mov	r0, r3
 8000dec:	3720      	adds	r7, #32
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bd80      	pop	{r7, pc}
 8000df2:	bf00      	nop
 8000df4:	20000664 	.word	0x20000664

08000df8 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv>:
template <class T, uint16_t nElem>
inline uint16_t CircularBuffer<T, nElem>::countSlotBetween(uint16_t localTail, uint16_t localHead) const {
  return modSub(localHead, localTail, real_nElem); // One Free Slot Logic
}

template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::usedSpace() const {
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	b082      	sub	sp, #8
 8000dfc:	af00      	add	r7, sp, #0
 8000dfe:	6078      	str	r0, [r7, #4]
  // This 2 block are only to speed-up, formula always function
  if (isFull())
 8000e00:	6878      	ldr	r0, [r7, #4]
 8000e02:	f000 fa05 	bl	8001210 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE6isFullEv>
 8000e06:	4603      	mov	r3, r0
 8000e08:	2b00      	cmp	r3, #0
 8000e0a:	d001      	beq.n	8000e10 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv+0x18>
    return nElem;
 8000e0c:	2304      	movs	r3, #4
 8000e0e:	e012      	b.n	8000e36 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv+0x3e>
  if (isEmpty())
 8000e10:	6878      	ldr	r0, [r7, #4]
 8000e12:	f000 f814 	bl	8000e3e <_ZNK14CircularBufferI14_packLinux2ArdLt4EE7isEmptyEv>
 8000e16:	4603      	mov	r3, r0
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	d001      	beq.n	8000e20 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv+0x28>
    return 0;
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	e00a      	b.n	8000e36 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv+0x3e>

  return countSlotBetween(tail_, head_);
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	f8b3 1070 	ldrh.w	r1, [r3, #112]	; 0x70
 8000e26:	687b      	ldr	r3, [r7, #4]
 8000e28:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 8000e2c:	461a      	mov	r2, r3
 8000e2e:	6878      	ldr	r0, [r7, #4]
 8000e30:	f000 fa12 	bl	8001258 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE16countSlotBetweenEtt>
 8000e34:	4603      	mov	r3, r0
  // return modSub(head_, tail_, real_nElem); // One Free Slot Logic
}
 8000e36:	4618      	mov	r0, r3
 8000e38:	3708      	adds	r7, #8
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}

08000e3e <_ZNK14CircularBufferI14_packLinux2ArdLt4EE7isEmptyEv>:
template <class T, uint16_t nElem> inline bool CircularBuffer<T, nElem>::isEmpty() const { return head_ == tail_; }
 8000e3e:	b480      	push	{r7}
 8000e40:	b083      	sub	sp, #12
 8000e42:	af00      	add	r7, sp, #0
 8000e44:	6078      	str	r0, [r7, #4]
 8000e46:	687b      	ldr	r3, [r7, #4]
 8000e48:	f8b3 206e 	ldrh.w	r2, [r3, #110]	; 0x6e
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 8000e52:	429a      	cmp	r2, r3
 8000e54:	bf0c      	ite	eq
 8000e56:	2301      	moveq	r3, #1
 8000e58:	2300      	movne	r3, #0
 8000e5a:	b2db      	uxtb	r3, r3
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	370c      	adds	r7, #12
 8000e60:	46bd      	mov	sp, r7
 8000e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e66:	4770      	bx	lr

08000e68 <_ZN14CircularBufferI14_packLinux2ArdLt4EE6getPtrEv>:
template <class T, uint16_t nElem> T *CircularBuffer<T, nElem>::getPtr() {
 8000e68:	b580      	push	{r7, lr}
 8000e6a:	b084      	sub	sp, #16
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]
  if (isEmpty()) {
 8000e70:	6878      	ldr	r0, [r7, #4]
 8000e72:	f7ff ffe4 	bl	8000e3e <_ZNK14CircularBufferI14_packLinux2ArdLt4EE7isEmptyEv>
 8000e76:	4603      	mov	r3, r0
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d001      	beq.n	8000e80 <_ZN14CircularBufferI14_packLinux2ArdLt4EE6getPtrEv+0x18>
    return nullptr;
 8000e7c:	2300      	movs	r3, #0
 8000e7e:	e007      	b.n	8000e90 <_ZN14CircularBufferI14_packLinux2ArdLt4EE6getPtrEv+0x28>
  auto val = getTailPtr();
 8000e80:	6878      	ldr	r0, [r7, #4]
 8000e82:	f000 fa09 	bl	8001298 <_ZN14CircularBufferI14_packLinux2ArdLt4EE10getTailPtrEv>
 8000e86:	60f8      	str	r0, [r7, #12]
  this->tailInc();
 8000e88:	6878      	ldr	r0, [r7, #4]
 8000e8a:	f000 fa18 	bl	80012be <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailIncEv>
  return val;
 8000e8e:	68fb      	ldr	r3, [r7, #12]
}
 8000e90:	4618      	mov	r0, r3
 8000e92:	3710      	adds	r7, #16
 8000e94:	46bd      	mov	sp, r7
 8000e96:	bd80      	pop	{r7, pc}

08000e98 <_ZN14CircularBufferI14_packLinux2ArdLt4EEC1Ev>:
template <class T, uint16_t nElem> CircularBuffer<T, nElem>::CircularBuffer() {
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	b082      	sub	sp, #8
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	6078      	str	r0, [r7, #4]
  this->head_ = 0;
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
  this->tail_ = 0;
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	2200      	movs	r2, #0
 8000eac:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
  memClean();
 8000eb0:	6878      	ldr	r0, [r7, #4]
 8000eb2:	f000 fa11 	bl	80012d8 <_ZN14CircularBufferI14_packLinux2ArdLt4EE8memCleanEv>
}
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	4618      	mov	r0, r3
 8000eba:	3708      	adds	r7, #8
 8000ebc:	46bd      	mov	sp, r7
 8000ebe:	bd80      	pop	{r7, pc}

08000ec0 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE8bufClearEv>:
templatePar() void MP<templateParCall()>::bufClear() {
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	b082      	sub	sp, #8
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	6078      	str	r0, [r7, #4]
  byteRecive.memClean();
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	330a      	adds	r3, #10
 8000ecc:	4618      	mov	r0, r3
 8000ece:	f7ff fefd 	bl	8000ccc <_ZN14CircularBufferIhLt368EE8memCleanEv>
  packRecive.memClean();
 8000ed2:	687b      	ldr	r3, [r7, #4]
 8000ed4:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000ed8:	4618      	mov	r0, r3
 8000eda:	f000 f9fd 	bl	80012d8 <_ZN14CircularBufferI14_packLinux2ArdLt4EE8memCleanEv>
  lastStartIndex = 0;
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	811a      	strh	r2, [r3, #8]
}
 8000ee4:	bf00      	nop
 8000ee6:	3708      	adds	r7, #8
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	bd80      	pop	{r7, pc}

08000eec <_ZN14CircularBufferIhLt368EE5resetEv>:
template <class T, uint16_t nElem> inline void CircularBuffer<T, nElem>::reset() { head_ = tail_; }
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
 8000ef4:	687b      	ldr	r3, [r7, #4]
 8000ef6:	f8b3 2174 	ldrh.w	r2, [r3, #372]	; 0x174
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	f8a3 2172 	strh.w	r2, [r3, #370]	; 0x172
 8000f00:	bf00      	nop
 8000f02:	370c      	adds	r7, #12
 8000f04:	46bd      	mov	sp, r7
 8000f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f0a:	4770      	bx	lr

08000f0c <_ZN14CircularBufferIhLt368EE8putArrayEPht>:
template <class T, uint16_t nElem> uint16_t CircularBuffer<T, nElem>::putArray(T *item, uint16_t nItem) {
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	b084      	sub	sp, #16
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	60f8      	str	r0, [r7, #12]
 8000f14:	60b9      	str	r1, [r7, #8]
 8000f16:	4613      	mov	r3, r2
 8000f18:	80fb      	strh	r3, [r7, #6]
  return putArray(item, nItem, sizeof(T));
 8000f1a:	88fa      	ldrh	r2, [r7, #6]
 8000f1c:	2301      	movs	r3, #1
 8000f1e:	68b9      	ldr	r1, [r7, #8]
 8000f20:	68f8      	ldr	r0, [r7, #12]
 8000f22:	f000 f9f8 	bl	8001316 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt>
 8000f26:	4603      	mov	r3, r0
}
 8000f28:	4618      	mov	r0, r3
 8000f2a:	3710      	adds	r7, #16
 8000f2c:	46bd      	mov	sp, r7
 8000f2e:	bd80      	pop	{r7, pc}

08000f30 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv>:

templatePar() int MP<templateParCall()>::packSend_Concrete(uint8_t byteSend) { return packSend_Concrete(&byteSend, 1); }

/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/// Byte parsing using CRC8 and COBS to
templatePar() uint16_t MP<templateParCall()>::byteParsing() {
 8000f30:	b5b0      	push	{r4, r5, r7, lr}
 8000f32:	b092      	sub	sp, #72	; 0x48
 8000f34:	af02      	add	r7, sp, #8
 8000f36:	6078      	str	r0, [r7, #4]
  uint8_t dato;
  uint16_t datoId;
  uint16_t packFound = 0;
 8000f38:	2300      	movs	r3, #0
 8000f3a:	87fb      	strh	r3, [r7, #62]	; 0x3e
  while (!byteRecive.isEmpty()) {
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	330a      	adds	r3, #10
 8000f40:	4618      	mov	r0, r3
 8000f42:	f000 fa75 	bl	8001430 <_ZNK14CircularBufferIhLt368EE7isEmptyEv>
 8000f46:	4603      	mov	r3, r0
 8000f48:	f083 0301 	eor.w	r3, r3, #1
 8000f4c:	b2db      	uxtb	r3, r3
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	f000 80aa 	beq.w	80010a8 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x178>
 8000f54:	466b      	mov	r3, sp
 8000f56:	461d      	mov	r5, r3
    // Get the byte and his position (if is a 0, need to be saved)
    dato = byteRecive.get(&datoId);
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	330a      	adds	r3, #10
 8000f5c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8000f60:	4611      	mov	r1, r2
 8000f62:	4618      	mov	r0, r3
 8000f64:	f000 fa79 	bl	800145a <_ZN14CircularBufferIhLt368EE3getEPt>
 8000f68:	4603      	mov	r3, r0
 8000f6a:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d

    if (dato != 0)
 8000f6e:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	f040 8091 	bne.w	800109a <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x16a>
      continue;

    /// ########################## COBS DECODE ##########################
    // NB:COBS protocol add 1 byte at the pack, At the start
    uint16_t COBSsrcSize = byteRecive.countSlotBetween(lastStartIndex, datoId);
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	f103 000a 	add.w	r0, r3, #10
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	891b      	ldrh	r3, [r3, #8]
 8000f82:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 8000f84:	4619      	mov	r1, r3
 8000f86:	f000 fa7d 	bl	8001484 <_ZNK14CircularBufferIhLt368EE16countSlotBetweenEtt>
 8000f8a:	4603      	mov	r3, r0
 8000f8c:	877b      	strh	r3, [r7, #58]	; 0x3a

    if (COBSsrcSize - 1 > MAXPackINsize || COBSsrcSize < 2) {
 8000f8e:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8000f90:	2b18      	cmp	r3, #24
 8000f92:	d802      	bhi.n	8000f9a <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x6a>
 8000f94:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8000f96:	2b01      	cmp	r3, #1
 8000f98:	d805      	bhi.n	8000fa6 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x76>
      // Someting wrong, no 0 was recived in time, or too many zero are received
      // Anyway the pack are lost
      lastStartIndex = datoId + 1; // restart the logic from the next byte
 8000f9a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000f9c:	3301      	adds	r3, #1
 8000f9e:	b29a      	uxth	r2, r3
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	811a      	strh	r2, [r3, #8]
      continue;
 8000fa4:	e07e      	b.n	80010a4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x174>
    }
    // Fill the buffer for the decoding
    uint8_t COBSEncoded[COBSsrcSize];
 8000fa6:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8000fa8:	1e5c      	subs	r4, r3, #1
 8000faa:	637c      	str	r4, [r7, #52]	; 0x34
 8000fac:	4623      	mov	r3, r4
 8000fae:	3301      	adds	r3, #1
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f04f 0100 	mov.w	r1, #0
 8000fb6:	f04f 0200 	mov.w	r2, #0
 8000fba:	f04f 0300 	mov.w	r3, #0
 8000fbe:	00cb      	lsls	r3, r1, #3
 8000fc0:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000fc4:	00c2      	lsls	r2, r0, #3
 8000fc6:	4623      	mov	r3, r4
 8000fc8:	3301      	adds	r3, #1
 8000fca:	4618      	mov	r0, r3
 8000fcc:	f04f 0100 	mov.w	r1, #0
 8000fd0:	f04f 0200 	mov.w	r2, #0
 8000fd4:	f04f 0300 	mov.w	r3, #0
 8000fd8:	00cb      	lsls	r3, r1, #3
 8000fda:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8000fde:	00c2      	lsls	r2, r0, #3
 8000fe0:	4623      	mov	r3, r4
 8000fe2:	3301      	adds	r3, #1
 8000fe4:	3307      	adds	r3, #7
 8000fe6:	08db      	lsrs	r3, r3, #3
 8000fe8:	00db      	lsls	r3, r3, #3
 8000fea:	ebad 0d03 	sub.w	sp, sp, r3
 8000fee:	ab02      	add	r3, sp, #8
 8000ff0:	3300      	adds	r3, #0
 8000ff2:	633b      	str	r3, [r7, #48]	; 0x30
    byteRecive.memcpyCb(COBSEncoded, lastStartIndex, COBSsrcSize);
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	f103 000a 	add.w	r0, r3, #10
 8000ffa:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	891a      	ldrh	r2, [r3, #8]
 8001000:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8001002:	f000 fa61 	bl	80014c8 <_ZN14CircularBufferIhLt368EE8memcpyCbEPhtt>
    uint8_t COBSDecode[MAXPackINsize];

    cobs_decode_result res = cobs_decode(COBSDecode, MAXPackINsize, COBSEncoded, COBSsrcSize);
 8001006:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8001008:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 800100a:	f107 000c 	add.w	r0, r7, #12
 800100e:	f107 0114 	add.w	r1, r7, #20
 8001012:	9300      	str	r3, [sp, #0]
 8001014:	4613      	mov	r3, r2
 8001016:	2217      	movs	r2, #23
 8001018:	f005 fa92 	bl	8006540 <cobs_decode>
    lastStartIndex = datoId + 1; // From now, in any case, datoId are the new lastStartIndex
 800101c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800101e:	3301      	adds	r3, #1
 8001020:	b29a      	uxth	r2, r3
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	811a      	strh	r2, [r3, #8]

    if (res.status != COBS_DECODE_OK) {
 8001026:	7c3b      	ldrb	r3, [r7, #16]
 8001028:	2b00      	cmp	r3, #0
 800102a:	d138      	bne.n	800109e <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x16e>
      continue;
    }
    /// ######################## CRC8 VALIDATION ########################
    if (CRC8_enable()) {
      uint8_t calcCRC = crc8_stream(COBSDecode, res.out_len - 1); // Last byte are the CRC
 800102c:	68fb      	ldr	r3, [r7, #12]
 800102e:	b29b      	uxth	r3, r3
 8001030:	3b01      	subs	r3, #1
 8001032:	b29a      	uxth	r2, r3
 8001034:	f107 0314 	add.w	r3, r7, #20
 8001038:	4611      	mov	r1, r2
 800103a:	4618      	mov	r0, r3
 800103c:	f005 fba4 	bl	8006788 <_Z11crc8_streamPht>
 8001040:	4603      	mov	r3, r0
 8001042:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      if (calcCRC != COBSDecode[res.out_len - 1])
 8001046:	68fb      	ldr	r3, [r7, #12]
 8001048:	3b01      	subs	r3, #1
 800104a:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800104e:	4413      	add	r3, r2
 8001050:	f813 3c2c 	ldrb.w	r3, [r3, #-44]
 8001054:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 8001058:	429a      	cmp	r2, r3
 800105a:	d122      	bne.n	80010a2 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x172>
        continue; // CRC8 Fail!!!
    }
    packRecive.put((pIn *)COBSDecode, res.out_len - 1);
 800105c:	687b      	ldr	r3, [r7, #4]
 800105e:	f503 70c0 	add.w	r0, r3, #384	; 0x180
 8001062:	68fb      	ldr	r3, [r7, #12]
 8001064:	b29b      	uxth	r3, r3
 8001066:	3b01      	subs	r3, #1
 8001068:	b29a      	uxth	r2, r3
 800106a:	f107 0314 	add.w	r3, r7, #20
 800106e:	4619      	mov	r1, r3
 8001070:	f000 fa5c 	bl	800152c <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t>
    packTimeRefresh(); // from now, the pack are available to the system
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	330c      	adds	r3, #12
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	6878      	ldr	r0, [r7, #4]
 800107e:	4798      	blx	r3
    packFound++;
 8001080:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8001082:	3301      	adds	r3, #1
 8001084:	87fb      	strh	r3, [r7, #62]	; 0x3e
    if (clback.pkDetect)
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	685b      	ldr	r3, [r3, #4]
 800108a:	2b00      	cmp	r3, #0
 800108c:	d003      	beq.n	8001096 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x166>
      clback.pkDetect(this);
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	685b      	ldr	r3, [r3, #4]
 8001092:	6878      	ldr	r0, [r7, #4]
 8001094:	4798      	blx	r3
 8001096:	46ad      	mov	sp, r5
 8001098:	e750      	b.n	8000f3c <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0xc>
      continue;
 800109a:	bf00      	nop
 800109c:	e002      	b.n	80010a4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x174>
      continue;
 800109e:	bf00      	nop
 80010a0:	e000      	b.n	80010a4 <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0x174>
        continue; // CRC8 Fail!!!
 80010a2:	bf00      	nop
 80010a4:	46ad      	mov	sp, r5
  while (!byteRecive.isEmpty()) {
 80010a6:	e749      	b.n	8000f3c <_ZN3EMP2MPI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE11byteParsingEv+0xc>
  } //  while (!byteRecive->isEmpty())
  return packFound;
 80010a8:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
}
 80010aa:	4618      	mov	r0, r3
 80010ac:	3740      	adds	r7, #64	; 0x40
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bdb0      	pop	{r4, r5, r7, pc}

080010b2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::usedSpace() const {
 80010b2:	b580      	push	{r7, lr}
 80010b4:	b082      	sub	sp, #8
 80010b6:	af00      	add	r7, sp, #0
 80010b8:	6078      	str	r0, [r7, #4]
  if (isFull())
 80010ba:	6878      	ldr	r0, [r7, #4]
 80010bc:	f000 fa62 	bl	8001584 <_ZNK14CircularBufferIhLt368EE6isFullEv>
 80010c0:	4603      	mov	r3, r0
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d002      	beq.n	80010cc <_ZNK14CircularBufferIhLt368EE9usedSpaceEv+0x1a>
    return nElem;
 80010c6:	f44f 73b8 	mov.w	r3, #368	; 0x170
 80010ca:	e012      	b.n	80010f2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv+0x40>
  if (isEmpty())
 80010cc:	6878      	ldr	r0, [r7, #4]
 80010ce:	f000 f9af 	bl	8001430 <_ZNK14CircularBufferIhLt368EE7isEmptyEv>
 80010d2:	4603      	mov	r3, r0
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d001      	beq.n	80010dc <_ZNK14CircularBufferIhLt368EE9usedSpaceEv+0x2a>
    return 0;
 80010d8:	2300      	movs	r3, #0
 80010da:	e00a      	b.n	80010f2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv+0x40>
  return countSlotBetween(tail_, head_);
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	f8b3 1174 	ldrh.w	r1, [r3, #372]	; 0x174
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 80010e8:	461a      	mov	r2, r3
 80010ea:	6878      	ldr	r0, [r7, #4]
 80010ec:	f000 f9ca 	bl	8001484 <_ZNK14CircularBufferIhLt368EE16countSlotBetweenEtt>
 80010f0:	4603      	mov	r3, r0
}
 80010f2:	4618      	mov	r0, r3
 80010f4:	3708      	adds	r7, #8
 80010f6:	46bd      	mov	sp, r7
 80010f8:	bd80      	pop	{r7, pc}

080010fa <_ZNK14CircularBufferIhLt368EE15usedSpaceLinearEv>:

template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::usedSpaceLinear() const {
 80010fa:	b480      	push	{r7}
 80010fc:	b083      	sub	sp, #12
 80010fe:	af00      	add	r7, sp, #0
 8001100:	6078      	str	r0, [r7, #4]
  if (tail_ <= head_)
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	f8b3 2174 	ldrh.w	r2, [r3, #372]	; 0x174
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 800110e:	429a      	cmp	r2, r3
 8001110:	d808      	bhi.n	8001124 <_ZNK14CircularBufferIhLt368EE15usedSpaceLinearEv+0x2a>
    return head_ - tail_; // include empty case
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	f8b3 2172 	ldrh.w	r2, [r3, #370]	; 0x172
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 800111e:	1ad3      	subs	r3, r2, r3
 8001120:	b29b      	uxth	r3, r3
 8001122:	e006      	b.n	8001132 <_ZNK14CircularBufferIhLt368EE15usedSpaceLinearEv+0x38>

  return real_nElem - tail_; // the end of the array are reach before the end of buffered
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 800112a:	f5c3 73b8 	rsb	r3, r3, #368	; 0x170
 800112e:	3301      	adds	r3, #1
 8001130:	b29b      	uxth	r3, r3
}
 8001132:	4618      	mov	r0, r3
 8001134:	370c      	adds	r7, #12
 8001136:	46bd      	mov	sp, r7
 8001138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800113c:	4770      	bx	lr

0800113e <_ZN14CircularBufferIhLt368EE10getTailPtrEv>:
template <class T, uint16_t nElem> inline T *CircularBuffer<T, nElem>::getTailPtr() { return &buf_[tail_]; }
 800113e:	b480      	push	{r7}
 8001140:	b083      	sub	sp, #12
 8001142:	af00      	add	r7, sp, #0
 8001144:	6078      	str	r0, [r7, #4]
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 800114c:	461a      	mov	r2, r3
 800114e:	687b      	ldr	r3, [r7, #4]
 8001150:	4413      	add	r3, r2
 8001152:	4618      	mov	r0, r3
 8001154:	370c      	adds	r7, #12
 8001156:	46bd      	mov	sp, r7
 8001158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800115c:	4770      	bx	lr

0800115e <_ZNK14CircularBufferIhLt368EE7getTailEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::getTail() const { return tail_; }
 800115e:	b480      	push	{r7}
 8001160:	b083      	sub	sp, #12
 8001162:	af00      	add	r7, sp, #0
 8001164:	6078      	str	r0, [r7, #4]
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 800116c:	4618      	mov	r0, r3
 800116e:	370c      	adds	r7, #12
 8001170:	46bd      	mov	sp, r7
 8001172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001176:	4770      	bx	lr

08001178 <_ZN14CircularBufferIhLt368EE7tailAddEt>:
  return posOld;
}

template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailInc() { return tailAdd(1); }

template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailAdd(uint16_t len) {
 8001178:	b580      	push	{r7, lr}
 800117a:	b082      	sub	sp, #8
 800117c:	af00      	add	r7, sp, #0
 800117e:	6078      	str	r0, [r7, #4]
 8001180:	460b      	mov	r3, r1
 8001182:	807b      	strh	r3, [r7, #2]
  if (usedSpace() < len)
 8001184:	6878      	ldr	r0, [r7, #4]
 8001186:	f7ff ff94 	bl	80010b2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv>
 800118a:	4603      	mov	r3, r0
 800118c:	461a      	mov	r2, r3
 800118e:	887b      	ldrh	r3, [r7, #2]
 8001190:	4293      	cmp	r3, r2
 8001192:	bf8c      	ite	hi
 8001194:	2301      	movhi	r3, #1
 8001196:	2300      	movls	r3, #0
 8001198:	b2db      	uxtb	r3, r3
 800119a:	2b00      	cmp	r3, #0
 800119c:	d002      	beq.n	80011a4 <_ZN14CircularBufferIhLt368EE7tailAddEt+0x2c>
    return -1;
 800119e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80011a2:	e018      	b.n	80011d6 <_ZN14CircularBufferIhLt368EE7tailAddEt+0x5e>
  tail_ = (tail_ + len) % real_nElem;
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 80011aa:	461a      	mov	r2, r3
 80011ac:	887b      	ldrh	r3, [r7, #2]
 80011ae:	4413      	add	r3, r2
 80011b0:	4a0b      	ldr	r2, [pc, #44]	; (80011e0 <_ZN14CircularBufferIhLt368EE7tailAddEt+0x68>)
 80011b2:	fb82 1203 	smull	r1, r2, r2, r3
 80011b6:	441a      	add	r2, r3
 80011b8:	1211      	asrs	r1, r2, #8
 80011ba:	17da      	asrs	r2, r3, #31
 80011bc:	1a8a      	subs	r2, r1, r2
 80011be:	f240 1171 	movw	r1, #369	; 0x171
 80011c2:	fb01 f202 	mul.w	r2, r1, r2
 80011c6:	1a9a      	subs	r2, r3, r2
 80011c8:	b292      	uxth	r2, r2
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	f8a3 2174 	strh.w	r2, [r3, #372]	; 0x174
  return tail_;
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
}
 80011d6:	4618      	mov	r0, r3
 80011d8:	3708      	adds	r7, #8
 80011da:	46bd      	mov	sp, r7
 80011dc:	bd80      	pop	{r7, pc}
 80011de:	bf00      	nop
 80011e0:	b19ab5c5 	.word	0xb19ab5c5

080011e4 <_ZN14CircularBufferIhLt368EE7tailSetEt>:

template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailSet(uint16_t pos) {
 80011e4:	b480      	push	{r7}
 80011e6:	b085      	sub	sp, #20
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	6078      	str	r0, [r7, #4]
 80011ec:	460b      	mov	r3, r1
 80011ee:	807b      	strh	r3, [r7, #2]
  uint16_t posOld = tail_;
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 80011f6:	81fb      	strh	r3, [r7, #14]
  tail_ = pos;
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	887a      	ldrh	r2, [r7, #2]
 80011fc:	f8a3 2174 	strh.w	r2, [r3, #372]	; 0x174
  return posOld;
 8001200:	89fb      	ldrh	r3, [r7, #14]
}
 8001202:	4618      	mov	r0, r3
 8001204:	3714      	adds	r7, #20
 8001206:	46bd      	mov	sp, r7
 8001208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800120c:	4770      	bx	lr
	...

08001210 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE6isFullEv>:
template <class T, uint16_t nElem> inline bool CircularBuffer<T, nElem>::isFull() const {
 8001210:	b480      	push	{r7}
 8001212:	b083      	sub	sp, #12
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
  return head_ == modSub(tail_, 1, real_nElem);
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 800121e:	4618      	mov	r0, r3
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 8001226:	1d19      	adds	r1, r3, #4
 8001228:	4b0a      	ldr	r3, [pc, #40]	; (8001254 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE6isFullEv+0x44>)
 800122a:	fb83 2301 	smull	r2, r3, r3, r1
 800122e:	105a      	asrs	r2, r3, #1
 8001230:	17cb      	asrs	r3, r1, #31
 8001232:	1ad2      	subs	r2, r2, r3
 8001234:	4613      	mov	r3, r2
 8001236:	009b      	lsls	r3, r3, #2
 8001238:	4413      	add	r3, r2
 800123a:	1aca      	subs	r2, r1, r3
 800123c:	4290      	cmp	r0, r2
 800123e:	bf0c      	ite	eq
 8001240:	2301      	moveq	r3, #1
 8001242:	2300      	movne	r3, #0
 8001244:	b2db      	uxtb	r3, r3
}
 8001246:	4618      	mov	r0, r3
 8001248:	370c      	adds	r7, #12
 800124a:	46bd      	mov	sp, r7
 800124c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001250:	4770      	bx	lr
 8001252:	bf00      	nop
 8001254:	66666667 	.word	0x66666667

08001258 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE16countSlotBetweenEtt>:
inline uint16_t CircularBuffer<T, nElem>::countSlotBetween(uint16_t localTail, uint16_t localHead) const {
 8001258:	b480      	push	{r7}
 800125a:	b083      	sub	sp, #12
 800125c:	af00      	add	r7, sp, #0
 800125e:	6078      	str	r0, [r7, #4]
 8001260:	460b      	mov	r3, r1
 8001262:	807b      	strh	r3, [r7, #2]
 8001264:	4613      	mov	r3, r2
 8001266:	803b      	strh	r3, [r7, #0]
  return modSub(localHead, localTail, real_nElem); // One Free Slot Logic
 8001268:	883a      	ldrh	r2, [r7, #0]
 800126a:	887b      	ldrh	r3, [r7, #2]
 800126c:	1ad3      	subs	r3, r2, r3
 800126e:	1d5a      	adds	r2, r3, #5
 8001270:	4b08      	ldr	r3, [pc, #32]	; (8001294 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE16countSlotBetweenEtt+0x3c>)
 8001272:	fb83 1302 	smull	r1, r3, r3, r2
 8001276:	1059      	asrs	r1, r3, #1
 8001278:	17d3      	asrs	r3, r2, #31
 800127a:	1ac9      	subs	r1, r1, r3
 800127c:	460b      	mov	r3, r1
 800127e:	009b      	lsls	r3, r3, #2
 8001280:	440b      	add	r3, r1
 8001282:	1ad1      	subs	r1, r2, r3
 8001284:	b28b      	uxth	r3, r1
}
 8001286:	4618      	mov	r0, r3
 8001288:	370c      	adds	r7, #12
 800128a:	46bd      	mov	sp, r7
 800128c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001290:	4770      	bx	lr
 8001292:	bf00      	nop
 8001294:	66666667 	.word	0x66666667

08001298 <_ZN14CircularBufferI14_packLinux2ArdLt4EE10getTailPtrEv>:
template <class T, uint16_t nElem> inline T *CircularBuffer<T, nElem>::getTailPtr() { return &buf_[tail_]; }
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 80012a6:	461a      	mov	r2, r3
 80012a8:	2316      	movs	r3, #22
 80012aa:	fb03 f302 	mul.w	r3, r3, r2
 80012ae:	687a      	ldr	r2, [r7, #4]
 80012b0:	4413      	add	r3, r2
 80012b2:	4618      	mov	r0, r3
 80012b4:	370c      	adds	r7, #12
 80012b6:	46bd      	mov	sp, r7
 80012b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012bc:	4770      	bx	lr

080012be <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailIncEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailInc() { return tailAdd(1); }
 80012be:	b580      	push	{r7, lr}
 80012c0:	b082      	sub	sp, #8
 80012c2:	af00      	add	r7, sp, #0
 80012c4:	6078      	str	r0, [r7, #4]
 80012c6:	2101      	movs	r1, #1
 80012c8:	6878      	ldr	r0, [r7, #4]
 80012ca:	f000 f981 	bl	80015d0 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailAddEt>
 80012ce:	4603      	mov	r3, r0
 80012d0:	4618      	mov	r0, r3
 80012d2:	3708      	adds	r7, #8
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}

080012d8 <_ZN14CircularBufferI14_packLinux2ArdLt4EE8memCleanEv>:
template <class T, uint16_t nElem> void CircularBuffer<T, nElem>::memClean() {
 80012d8:	b580      	push	{r7, lr}
 80012da:	b084      	sub	sp, #16
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
  for (uint16_t i = 0; i < real_nElem; i++)
 80012e0:	2300      	movs	r3, #0
 80012e2:	81fb      	strh	r3, [r7, #14]
 80012e4:	89fb      	ldrh	r3, [r7, #14]
 80012e6:	2b04      	cmp	r3, #4
 80012e8:	d80e      	bhi.n	8001308 <_ZN14CircularBufferI14_packLinux2ArdLt4EE8memCleanEv+0x30>
    memset(&this->buf_[i], 0, sizeof(T));
 80012ea:	89fb      	ldrh	r3, [r7, #14]
 80012ec:	2216      	movs	r2, #22
 80012ee:	fb02 f303 	mul.w	r3, r2, r3
 80012f2:	687a      	ldr	r2, [r7, #4]
 80012f4:	4413      	add	r3, r2
 80012f6:	2216      	movs	r2, #22
 80012f8:	2100      	movs	r1, #0
 80012fa:	4618      	mov	r0, r3
 80012fc:	f007 fc72 	bl	8008be4 <memset>
  for (uint16_t i = 0; i < real_nElem; i++)
 8001300:	89fb      	ldrh	r3, [r7, #14]
 8001302:	3301      	adds	r3, #1
 8001304:	81fb      	strh	r3, [r7, #14]
 8001306:	e7ed      	b.n	80012e4 <_ZN14CircularBufferI14_packLinux2ArdLt4EE8memCleanEv+0xc>
  reset();
 8001308:	6878      	ldr	r0, [r7, #4]
 800130a:	f000 f995 	bl	8001638 <_ZN14CircularBufferI14_packLinux2ArdLt4EE5resetEv>
}
 800130e:	bf00      	nop
 8001310:	3710      	adds	r7, #16
 8001312:	46bd      	mov	sp, r7
 8001314:	bd80      	pop	{r7, pc}

08001316 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt>:
uint16_t CircularBuffer<T, nElem>::putArray(T *item, uint16_t nItem, uint16_t bSize) {
 8001316:	b580      	push	{r7, lr}
 8001318:	b086      	sub	sp, #24
 800131a:	af00      	add	r7, sp, #0
 800131c:	60f8      	str	r0, [r7, #12]
 800131e:	60b9      	str	r1, [r7, #8]
 8001320:	4611      	mov	r1, r2
 8001322:	461a      	mov	r2, r3
 8001324:	460b      	mov	r3, r1
 8001326:	80fb      	strh	r3, [r7, #6]
 8001328:	4613      	mov	r3, r2
 800132a:	80bb      	strh	r3, [r7, #4]
  if (availableSpace() < nItem)
 800132c:	68f8      	ldr	r0, [r7, #12]
 800132e:	f000 f837 	bl	80013a0 <_ZNK14CircularBufferIhLt368EE14availableSpaceEv>
 8001332:	4603      	mov	r3, r0
 8001334:	461a      	mov	r2, r3
 8001336:	88fb      	ldrh	r3, [r7, #6]
 8001338:	4293      	cmp	r3, r2
 800133a:	bf8c      	ite	hi
 800133c:	2301      	movhi	r3, #1
 800133e:	2300      	movls	r3, #0
 8001340:	b2db      	uxtb	r3, r3
 8001342:	2b00      	cmp	r3, #0
 8001344:	d002      	beq.n	800134c <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x36>
    return -1;
 8001346:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800134a:	e025      	b.n	8001398 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x82>
  if (bSize > sizeof(T))
 800134c:	88bb      	ldrh	r3, [r7, #4]
 800134e:	2b01      	cmp	r3, #1
 8001350:	d902      	bls.n	8001358 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x42>
    return -2;
 8001352:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8001356:	e01f      	b.n	8001398 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x82>
  int ret = head_; // old head
 8001358:	68fb      	ldr	r3, [r7, #12]
 800135a:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 800135e:	613b      	str	r3, [r7, #16]
  for (int i = 0; i < nItem; i++) {
 8001360:	2300      	movs	r3, #0
 8001362:	617b      	str	r3, [r7, #20]
 8001364:	88fb      	ldrh	r3, [r7, #6]
 8001366:	697a      	ldr	r2, [r7, #20]
 8001368:	429a      	cmp	r2, r3
 800136a:	da13      	bge.n	8001394 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x7e>
    memcpy((void *)&buf_[head_], &item[i], bSize);
 800136c:	68fb      	ldr	r3, [r7, #12]
 800136e:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 8001372:	461a      	mov	r2, r3
 8001374:	68fb      	ldr	r3, [r7, #12]
 8001376:	1898      	adds	r0, r3, r2
 8001378:	697b      	ldr	r3, [r7, #20]
 800137a:	68ba      	ldr	r2, [r7, #8]
 800137c:	4413      	add	r3, r2
 800137e:	88ba      	ldrh	r2, [r7, #4]
 8001380:	4619      	mov	r1, r3
 8001382:	f007 fc21 	bl	8008bc8 <memcpy>
    headInc();
 8001386:	68f8      	ldr	r0, [r7, #12]
 8001388:	f000 f966 	bl	8001658 <_ZN14CircularBufferIhLt368EE7headIncEv>
  for (int i = 0; i < nItem; i++) {
 800138c:	697b      	ldr	r3, [r7, #20]
 800138e:	3301      	adds	r3, #1
 8001390:	617b      	str	r3, [r7, #20]
 8001392:	e7e7      	b.n	8001364 <_ZN14CircularBufferIhLt368EE8putArrayEPhtt+0x4e>
  return ret; // old head
 8001394:	693b      	ldr	r3, [r7, #16]
 8001396:	b29b      	uxth	r3, r3
}
 8001398:	4618      	mov	r0, r3
 800139a:	3718      	adds	r7, #24
 800139c:	46bd      	mov	sp, r7
 800139e:	bd80      	pop	{r7, pc}

080013a0 <_ZNK14CircularBufferIhLt368EE14availableSpaceEv>:
template <class T, uint16_t nElem> uint16_t CircularBuffer<T, nElem>::availableSpace() const {
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b082      	sub	sp, #8
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
  return nElem - usedSpace();
 80013a8:	6878      	ldr	r0, [r7, #4]
 80013aa:	f7ff fe82 	bl	80010b2 <_ZNK14CircularBufferIhLt368EE9usedSpaceEv>
 80013ae:	4603      	mov	r3, r0
 80013b0:	f5c3 73b8 	rsb	r3, r3, #368	; 0x170
 80013b4:	b29b      	uxth	r3, r3
}
 80013b6:	4618      	mov	r0, r3
 80013b8:	3708      	adds	r7, #8
 80013ba:	46bd      	mov	sp, r7
 80013bc:	bd80      	pop	{r7, pc}
	...

080013c0 <_ZN14CircularBufferIhLt368EE7headAddEt>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::headAdd(uint16_t len) {
 80013c0:	b580      	push	{r7, lr}
 80013c2:	b084      	sub	sp, #16
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	6078      	str	r0, [r7, #4]
 80013c8:	460b      	mov	r3, r1
 80013ca:	807b      	strh	r3, [r7, #2]
  if (availableSpace() < len)
 80013cc:	6878      	ldr	r0, [r7, #4]
 80013ce:	f7ff ffe7 	bl	80013a0 <_ZNK14CircularBufferIhLt368EE14availableSpaceEv>
 80013d2:	4603      	mov	r3, r0
 80013d4:	461a      	mov	r2, r3
 80013d6:	887b      	ldrh	r3, [r7, #2]
 80013d8:	4293      	cmp	r3, r2
 80013da:	bf8c      	ite	hi
 80013dc:	2301      	movhi	r3, #1
 80013de:	2300      	movls	r3, #0
 80013e0:	b2db      	uxtb	r3, r3
 80013e2:	2b00      	cmp	r3, #0
 80013e4:	d002      	beq.n	80013ec <_ZN14CircularBufferIhLt368EE7headAddEt+0x2c>
    return -1;
 80013e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80013ea:	e01a      	b.n	8001422 <_ZN14CircularBufferIhLt368EE7headAddEt+0x62>
  uint16_t oldHead = head_;
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 80013f2:	81fb      	strh	r3, [r7, #14]
  head_ = (head_ + len) % real_nElem;
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 80013fa:	461a      	mov	r2, r3
 80013fc:	887b      	ldrh	r3, [r7, #2]
 80013fe:	4413      	add	r3, r2
 8001400:	4a0a      	ldr	r2, [pc, #40]	; (800142c <_ZN14CircularBufferIhLt368EE7headAddEt+0x6c>)
 8001402:	fb82 1203 	smull	r1, r2, r2, r3
 8001406:	441a      	add	r2, r3
 8001408:	1211      	asrs	r1, r2, #8
 800140a:	17da      	asrs	r2, r3, #31
 800140c:	1a8a      	subs	r2, r1, r2
 800140e:	f240 1171 	movw	r1, #369	; 0x171
 8001412:	fb01 f202 	mul.w	r2, r1, r2
 8001416:	1a9a      	subs	r2, r3, r2
 8001418:	b292      	uxth	r2, r2
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	f8a3 2172 	strh.w	r2, [r3, #370]	; 0x172
  return oldHead; // old head
 8001420:	89fb      	ldrh	r3, [r7, #14]
}
 8001422:	4618      	mov	r0, r3
 8001424:	3710      	adds	r7, #16
 8001426:	46bd      	mov	sp, r7
 8001428:	bd80      	pop	{r7, pc}
 800142a:	bf00      	nop
 800142c:	b19ab5c5 	.word	0xb19ab5c5

08001430 <_ZNK14CircularBufferIhLt368EE7isEmptyEv>:
template <class T, uint16_t nElem> inline bool CircularBuffer<T, nElem>::isEmpty() const { return head_ == tail_; }
 8001430:	b480      	push	{r7}
 8001432:	b083      	sub	sp, #12
 8001434:	af00      	add	r7, sp, #0
 8001436:	6078      	str	r0, [r7, #4]
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	f8b3 2172 	ldrh.w	r2, [r3, #370]	; 0x172
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 8001444:	429a      	cmp	r2, r3
 8001446:	bf0c      	ite	eq
 8001448:	2301      	moveq	r3, #1
 800144a:	2300      	movne	r3, #0
 800144c:	b2db      	uxtb	r3, r3
 800144e:	4618      	mov	r0, r3
 8001450:	370c      	adds	r7, #12
 8001452:	46bd      	mov	sp, r7
 8001454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001458:	4770      	bx	lr

0800145a <_ZN14CircularBufferIhLt368EE3getEPt>:
template <class T, uint16_t nElem> T CircularBuffer<T, nElem>::get(uint16_t *indexRet) {
 800145a:	b580      	push	{r7, lr}
 800145c:	b082      	sub	sp, #8
 800145e:	af00      	add	r7, sp, #0
 8001460:	6078      	str	r0, [r7, #4]
 8001462:	6039      	str	r1, [r7, #0]
  *indexRet = getTail();
 8001464:	6878      	ldr	r0, [r7, #4]
 8001466:	f7ff fe7a 	bl	800115e <_ZNK14CircularBufferIhLt368EE7getTailEv>
 800146a:	4603      	mov	r3, r0
 800146c:	461a      	mov	r2, r3
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	801a      	strh	r2, [r3, #0]
  return get();
 8001472:	6878      	ldr	r0, [r7, #4]
 8001474:	f000 f8fd 	bl	8001672 <_ZN14CircularBufferIhLt368EE3getEv>
 8001478:	4603      	mov	r3, r0
}
 800147a:	4618      	mov	r0, r3
 800147c:	3708      	adds	r7, #8
 800147e:	46bd      	mov	sp, r7
 8001480:	bd80      	pop	{r7, pc}
	...

08001484 <_ZNK14CircularBufferIhLt368EE16countSlotBetweenEtt>:
inline uint16_t CircularBuffer<T, nElem>::countSlotBetween(uint16_t localTail, uint16_t localHead) const {
 8001484:	b480      	push	{r7}
 8001486:	b083      	sub	sp, #12
 8001488:	af00      	add	r7, sp, #0
 800148a:	6078      	str	r0, [r7, #4]
 800148c:	460b      	mov	r3, r1
 800148e:	807b      	strh	r3, [r7, #2]
 8001490:	4613      	mov	r3, r2
 8001492:	803b      	strh	r3, [r7, #0]
  return modSub(localHead, localTail, real_nElem); // One Free Slot Logic
 8001494:	883a      	ldrh	r2, [r7, #0]
 8001496:	887b      	ldrh	r3, [r7, #2]
 8001498:	1ad3      	subs	r3, r2, r3
 800149a:	f203 1371 	addw	r3, r3, #369	; 0x171
 800149e:	4a09      	ldr	r2, [pc, #36]	; (80014c4 <_ZNK14CircularBufferIhLt368EE16countSlotBetweenEtt+0x40>)
 80014a0:	fb82 1203 	smull	r1, r2, r2, r3
 80014a4:	441a      	add	r2, r3
 80014a6:	1211      	asrs	r1, r2, #8
 80014a8:	17da      	asrs	r2, r3, #31
 80014aa:	1a8a      	subs	r2, r1, r2
 80014ac:	f240 1171 	movw	r1, #369	; 0x171
 80014b0:	fb01 f202 	mul.w	r2, r1, r2
 80014b4:	1a9a      	subs	r2, r3, r2
 80014b6:	b293      	uxth	r3, r2
}
 80014b8:	4618      	mov	r0, r3
 80014ba:	370c      	adds	r7, #12
 80014bc:	46bd      	mov	sp, r7
 80014be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c2:	4770      	bx	lr
 80014c4:	b19ab5c5 	.word	0xb19ab5c5

080014c8 <_ZN14CircularBufferIhLt368EE8memcpyCbEPhtt>:
void CircularBuffer<T, nElem>::memcpyCb(T *memDestArray, uint16_t localTail, uint16_t len) {
 80014c8:	b480      	push	{r7}
 80014ca:	b087      	sub	sp, #28
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	60f8      	str	r0, [r7, #12]
 80014d0:	60b9      	str	r1, [r7, #8]
 80014d2:	4611      	mov	r1, r2
 80014d4:	461a      	mov	r2, r3
 80014d6:	460b      	mov	r3, r1
 80014d8:	80fb      	strh	r3, [r7, #6]
 80014da:	4613      	mov	r3, r2
 80014dc:	80bb      	strh	r3, [r7, #4]
  for (uint16_t i = 0; i < len; i++) {
 80014de:	2300      	movs	r3, #0
 80014e0:	82fb      	strh	r3, [r7, #22]
 80014e2:	8afa      	ldrh	r2, [r7, #22]
 80014e4:	88bb      	ldrh	r3, [r7, #4]
 80014e6:	429a      	cmp	r2, r3
 80014e8:	d218      	bcs.n	800151c <_ZN14CircularBufferIhLt368EE8memcpyCbEPhtt+0x54>
    memDestArray[i] = buf_[(localTail + i) % real_nElem];
 80014ea:	88fa      	ldrh	r2, [r7, #6]
 80014ec:	8afb      	ldrh	r3, [r7, #22]
 80014ee:	4413      	add	r3, r2
 80014f0:	4a0d      	ldr	r2, [pc, #52]	; (8001528 <_ZN14CircularBufferIhLt368EE8memcpyCbEPhtt+0x60>)
 80014f2:	fb82 1203 	smull	r1, r2, r2, r3
 80014f6:	441a      	add	r2, r3
 80014f8:	1211      	asrs	r1, r2, #8
 80014fa:	17da      	asrs	r2, r3, #31
 80014fc:	1a8a      	subs	r2, r1, r2
 80014fe:	f240 1171 	movw	r1, #369	; 0x171
 8001502:	fb01 f202 	mul.w	r2, r1, r2
 8001506:	1a9a      	subs	r2, r3, r2
 8001508:	8afb      	ldrh	r3, [r7, #22]
 800150a:	68b9      	ldr	r1, [r7, #8]
 800150c:	440b      	add	r3, r1
 800150e:	68f9      	ldr	r1, [r7, #12]
 8001510:	5c8a      	ldrb	r2, [r1, r2]
 8001512:	701a      	strb	r2, [r3, #0]
  for (uint16_t i = 0; i < len; i++) {
 8001514:	8afb      	ldrh	r3, [r7, #22]
 8001516:	3301      	adds	r3, #1
 8001518:	82fb      	strh	r3, [r7, #22]
 800151a:	e7e2      	b.n	80014e2 <_ZN14CircularBufferIhLt368EE8memcpyCbEPhtt+0x1a>
}
 800151c:	bf00      	nop
 800151e:	371c      	adds	r7, #28
 8001520:	46bd      	mov	sp, r7
 8001522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001526:	4770      	bx	lr
 8001528:	b19ab5c5 	.word	0xb19ab5c5

0800152c <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t>:
template <class T, uint16_t nElem> uint16_t CircularBuffer<T, nElem>::put(T *item, uint16_t bSize) {
 800152c:	b580      	push	{r7, lr}
 800152e:	b084      	sub	sp, #16
 8001530:	af00      	add	r7, sp, #0
 8001532:	60f8      	str	r0, [r7, #12]
 8001534:	60b9      	str	r1, [r7, #8]
 8001536:	4613      	mov	r3, r2
 8001538:	80fb      	strh	r3, [r7, #6]
  if (isFull())
 800153a:	68f8      	ldr	r0, [r7, #12]
 800153c:	f7ff fe68 	bl	8001210 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE6isFullEv>
 8001540:	4603      	mov	r3, r0
 8001542:	2b00      	cmp	r3, #0
 8001544:	d002      	beq.n	800154c <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t+0x20>
    return -1;
 8001546:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800154a:	e017      	b.n	800157c <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t+0x50>
  if (bSize > sizeof(T))
 800154c:	88fb      	ldrh	r3, [r7, #6]
 800154e:	2b16      	cmp	r3, #22
 8001550:	d902      	bls.n	8001558 <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t+0x2c>
    return -2;
 8001552:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8001556:	e011      	b.n	800157c <_ZN14CircularBufferI14_packLinux2ArdLt4EE3putEPS0_t+0x50>
  memcpy((void *)&buf_[head_], item, bSize);
 8001558:	68fb      	ldr	r3, [r7, #12]
 800155a:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 800155e:	461a      	mov	r2, r3
 8001560:	2316      	movs	r3, #22
 8001562:	fb03 f302 	mul.w	r3, r3, r2
 8001566:	68fa      	ldr	r2, [r7, #12]
 8001568:	4413      	add	r3, r2
 800156a:	88fa      	ldrh	r2, [r7, #6]
 800156c:	68b9      	ldr	r1, [r7, #8]
 800156e:	4618      	mov	r0, r3
 8001570:	f007 fb2a 	bl	8008bc8 <memcpy>
  return headInc(); // old head
 8001574:	68f8      	ldr	r0, [r7, #12]
 8001576:	f000 f895 	bl	80016a4 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headIncEv>
 800157a:	4603      	mov	r3, r0
}
 800157c:	4618      	mov	r0, r3
 800157e:	3710      	adds	r7, #16
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}

08001584 <_ZNK14CircularBufferIhLt368EE6isFullEv>:
template <class T, uint16_t nElem> inline bool CircularBuffer<T, nElem>::isFull() const {
 8001584:	b480      	push	{r7}
 8001586:	b083      	sub	sp, #12
 8001588:	af00      	add	r7, sp, #0
 800158a:	6078      	str	r0, [r7, #4]
  return head_ == modSub(tail_, 1, real_nElem);
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	f8b3 3172 	ldrh.w	r3, [r3, #370]	; 0x172
 8001592:	4618      	mov	r0, r3
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 800159a:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800159e:	4a0b      	ldr	r2, [pc, #44]	; (80015cc <_ZNK14CircularBufferIhLt368EE6isFullEv+0x48>)
 80015a0:	fb82 1203 	smull	r1, r2, r2, r3
 80015a4:	441a      	add	r2, r3
 80015a6:	1211      	asrs	r1, r2, #8
 80015a8:	17da      	asrs	r2, r3, #31
 80015aa:	1a8a      	subs	r2, r1, r2
 80015ac:	f240 1171 	movw	r1, #369	; 0x171
 80015b0:	fb01 f202 	mul.w	r2, r1, r2
 80015b4:	1a9a      	subs	r2, r3, r2
 80015b6:	4290      	cmp	r0, r2
 80015b8:	bf0c      	ite	eq
 80015ba:	2301      	moveq	r3, #1
 80015bc:	2300      	movne	r3, #0
 80015be:	b2db      	uxtb	r3, r3
}
 80015c0:	4618      	mov	r0, r3
 80015c2:	370c      	adds	r7, #12
 80015c4:	46bd      	mov	sp, r7
 80015c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ca:	4770      	bx	lr
 80015cc:	b19ab5c5 	.word	0xb19ab5c5

080015d0 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailAddEt>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailAdd(uint16_t len) {
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b082      	sub	sp, #8
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
 80015d8:	460b      	mov	r3, r1
 80015da:	807b      	strh	r3, [r7, #2]
  if (usedSpace() < len)
 80015dc:	6878      	ldr	r0, [r7, #4]
 80015de:	f7ff fc0b 	bl	8000df8 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv>
 80015e2:	4603      	mov	r3, r0
 80015e4:	461a      	mov	r2, r3
 80015e6:	887b      	ldrh	r3, [r7, #2]
 80015e8:	4293      	cmp	r3, r2
 80015ea:	bf8c      	ite	hi
 80015ec:	2301      	movhi	r3, #1
 80015ee:	2300      	movls	r3, #0
 80015f0:	b2db      	uxtb	r3, r3
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d002      	beq.n	80015fc <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailAddEt+0x2c>
    return -1;
 80015f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80015fa:	e016      	b.n	800162a <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailAddEt+0x5a>
  tail_ = (tail_ + len) % real_nElem;
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 8001602:	461a      	mov	r2, r3
 8001604:	887b      	ldrh	r3, [r7, #2]
 8001606:	441a      	add	r2, r3
 8001608:	4b0a      	ldr	r3, [pc, #40]	; (8001634 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7tailAddEt+0x64>)
 800160a:	fb83 1302 	smull	r1, r3, r3, r2
 800160e:	1059      	asrs	r1, r3, #1
 8001610:	17d3      	asrs	r3, r2, #31
 8001612:	1ac9      	subs	r1, r1, r3
 8001614:	460b      	mov	r3, r1
 8001616:	009b      	lsls	r3, r3, #2
 8001618:	440b      	add	r3, r1
 800161a:	1ad1      	subs	r1, r2, r3
 800161c:	b28a      	uxth	r2, r1
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
  return tail_;
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
}
 800162a:	4618      	mov	r0, r3
 800162c:	3708      	adds	r7, #8
 800162e:	46bd      	mov	sp, r7
 8001630:	bd80      	pop	{r7, pc}
 8001632:	bf00      	nop
 8001634:	66666667 	.word	0x66666667

08001638 <_ZN14CircularBufferI14_packLinux2ArdLt4EE5resetEv>:
template <class T, uint16_t nElem> inline void CircularBuffer<T, nElem>::reset() { head_ = tail_; }
 8001638:	b480      	push	{r7}
 800163a:	b083      	sub	sp, #12
 800163c:	af00      	add	r7, sp, #0
 800163e:	6078      	str	r0, [r7, #4]
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	f8b3 2070 	ldrh.w	r2, [r3, #112]	; 0x70
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 800164c:	bf00      	nop
 800164e:	370c      	adds	r7, #12
 8001650:	46bd      	mov	sp, r7
 8001652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001656:	4770      	bx	lr

08001658 <_ZN14CircularBufferIhLt368EE7headIncEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::headInc() {
 8001658:	b580      	push	{r7, lr}
 800165a:	b082      	sub	sp, #8
 800165c:	af00      	add	r7, sp, #0
 800165e:	6078      	str	r0, [r7, #4]
  return headAdd(1); // old head
 8001660:	2101      	movs	r1, #1
 8001662:	6878      	ldr	r0, [r7, #4]
 8001664:	f7ff feac 	bl	80013c0 <_ZN14CircularBufferIhLt368EE7headAddEt>
 8001668:	4603      	mov	r3, r0
}
 800166a:	4618      	mov	r0, r3
 800166c:	3708      	adds	r7, #8
 800166e:	46bd      	mov	sp, r7
 8001670:	bd80      	pop	{r7, pc}

08001672 <_ZN14CircularBufferIhLt368EE3getEv>:
template <class T, uint16_t nElem> T CircularBuffer<T, nElem>::get() {
 8001672:	b580      	push	{r7, lr}
 8001674:	b084      	sub	sp, #16
 8001676:	af00      	add	r7, sp, #0
 8001678:	6078      	str	r0, [r7, #4]
  if (isEmpty()) {
 800167a:	6878      	ldr	r0, [r7, #4]
 800167c:	f7ff fed8 	bl	8001430 <_ZNK14CircularBufferIhLt368EE7isEmptyEv>
 8001680:	4603      	mov	r3, r0
 8001682:	2b00      	cmp	r3, #0
 8001684:	d001      	beq.n	800168a <_ZN14CircularBufferIhLt368EE3getEv+0x18>
    return T();
 8001686:	2300      	movs	r3, #0
 8001688:	e008      	b.n	800169c <_ZN14CircularBufferIhLt368EE3getEv+0x2a>
  auto val = readTail();
 800168a:	6878      	ldr	r0, [r7, #4]
 800168c:	f000 f817 	bl	80016be <_ZNK14CircularBufferIhLt368EE8readTailEv>
 8001690:	4603      	mov	r3, r0
 8001692:	73fb      	strb	r3, [r7, #15]
  this->tailInc();
 8001694:	6878      	ldr	r0, [r7, #4]
 8001696:	f000 f822 	bl	80016de <_ZN14CircularBufferIhLt368EE7tailIncEv>
  return val;
 800169a:	7bfb      	ldrb	r3, [r7, #15]
}
 800169c:	4618      	mov	r0, r3
 800169e:	3710      	adds	r7, #16
 80016a0:	46bd      	mov	sp, r7
 80016a2:	bd80      	pop	{r7, pc}

080016a4 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headIncEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::headInc() {
 80016a4:	b580      	push	{r7, lr}
 80016a6:	b082      	sub	sp, #8
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
  return headAdd(1); // old head
 80016ac:	2101      	movs	r1, #1
 80016ae:	6878      	ldr	r0, [r7, #4]
 80016b0:	f000 f822 	bl	80016f8 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headAddEt>
 80016b4:	4603      	mov	r3, r0
}
 80016b6:	4618      	mov	r0, r3
 80016b8:	3708      	adds	r7, #8
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bd80      	pop	{r7, pc}

080016be <_ZNK14CircularBufferIhLt368EE8readTailEv>:
template <class T, uint16_t nElem> inline T CircularBuffer<T, nElem>::readTail() const { return this->buf_[tail_]; }
 80016be:	b480      	push	{r7}
 80016c0:	b083      	sub	sp, #12
 80016c2:	af00      	add	r7, sp, #0
 80016c4:	6078      	str	r0, [r7, #4]
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	f8b3 3174 	ldrh.w	r3, [r3, #372]	; 0x174
 80016cc:	461a      	mov	r2, r3
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	5c9b      	ldrb	r3, [r3, r2]
 80016d2:	4618      	mov	r0, r3
 80016d4:	370c      	adds	r7, #12
 80016d6:	46bd      	mov	sp, r7
 80016d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016dc:	4770      	bx	lr

080016de <_ZN14CircularBufferIhLt368EE7tailIncEv>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::tailInc() { return tailAdd(1); }
 80016de:	b580      	push	{r7, lr}
 80016e0:	b082      	sub	sp, #8
 80016e2:	af00      	add	r7, sp, #0
 80016e4:	6078      	str	r0, [r7, #4]
 80016e6:	2101      	movs	r1, #1
 80016e8:	6878      	ldr	r0, [r7, #4]
 80016ea:	f7ff fd45 	bl	8001178 <_ZN14CircularBufferIhLt368EE7tailAddEt>
 80016ee:	4603      	mov	r3, r0
 80016f0:	4618      	mov	r0, r3
 80016f2:	3708      	adds	r7, #8
 80016f4:	46bd      	mov	sp, r7
 80016f6:	bd80      	pop	{r7, pc}

080016f8 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headAddEt>:
template <class T, uint16_t nElem> inline uint16_t CircularBuffer<T, nElem>::headAdd(uint16_t len) {
 80016f8:	b580      	push	{r7, lr}
 80016fa:	b084      	sub	sp, #16
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	6078      	str	r0, [r7, #4]
 8001700:	460b      	mov	r3, r1
 8001702:	807b      	strh	r3, [r7, #2]
  if (availableSpace() < len)
 8001704:	6878      	ldr	r0, [r7, #4]
 8001706:	f000 f82d 	bl	8001764 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE14availableSpaceEv>
 800170a:	4603      	mov	r3, r0
 800170c:	461a      	mov	r2, r3
 800170e:	887b      	ldrh	r3, [r7, #2]
 8001710:	4293      	cmp	r3, r2
 8001712:	bf8c      	ite	hi
 8001714:	2301      	movhi	r3, #1
 8001716:	2300      	movls	r3, #0
 8001718:	b2db      	uxtb	r3, r3
 800171a:	2b00      	cmp	r3, #0
 800171c:	d002      	beq.n	8001724 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headAddEt+0x2c>
    return -1;
 800171e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001722:	e018      	b.n	8001756 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headAddEt+0x5e>
  uint16_t oldHead = head_;
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 800172a:	81fb      	strh	r3, [r7, #14]
  head_ = (head_ + len) % real_nElem;
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 8001732:	461a      	mov	r2, r3
 8001734:	887b      	ldrh	r3, [r7, #2]
 8001736:	441a      	add	r2, r3
 8001738:	4b09      	ldr	r3, [pc, #36]	; (8001760 <_ZN14CircularBufferI14_packLinux2ArdLt4EE7headAddEt+0x68>)
 800173a:	fb83 1302 	smull	r1, r3, r3, r2
 800173e:	1059      	asrs	r1, r3, #1
 8001740:	17d3      	asrs	r3, r2, #31
 8001742:	1ac9      	subs	r1, r1, r3
 8001744:	460b      	mov	r3, r1
 8001746:	009b      	lsls	r3, r3, #2
 8001748:	440b      	add	r3, r1
 800174a:	1ad1      	subs	r1, r2, r3
 800174c:	b28a      	uxth	r2, r1
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
  return oldHead; // old head
 8001754:	89fb      	ldrh	r3, [r7, #14]
}
 8001756:	4618      	mov	r0, r3
 8001758:	3710      	adds	r7, #16
 800175a:	46bd      	mov	sp, r7
 800175c:	bd80      	pop	{r7, pc}
 800175e:	bf00      	nop
 8001760:	66666667 	.word	0x66666667

08001764 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE14availableSpaceEv>:
template <class T, uint16_t nElem> uint16_t CircularBuffer<T, nElem>::availableSpace() const {
 8001764:	b580      	push	{r7, lr}
 8001766:	b082      	sub	sp, #8
 8001768:	af00      	add	r7, sp, #0
 800176a:	6078      	str	r0, [r7, #4]
  return nElem - usedSpace();
 800176c:	6878      	ldr	r0, [r7, #4]
 800176e:	f7ff fb43 	bl	8000df8 <_ZNK14CircularBufferI14_packLinux2ArdLt4EE9usedSpaceEv>
 8001772:	4603      	mov	r3, r0
 8001774:	f1c3 0304 	rsb	r3, r3, #4
 8001778:	b29b      	uxth	r3, r3
}
 800177a:	4618      	mov	r0, r3
 800177c:	3708      	adds	r7, #8
 800177e:	46bd      	mov	sp, r7
 8001780:	bd80      	pop	{r7, pc}
	...

08001784 <_Z41__static_initialization_and_destruction_0ii>:
	}
	/* USER CODE END Error_Handler_Debug */
}
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
 800178c:	6039      	str	r1, [r7, #0]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	2b01      	cmp	r3, #1
 8001792:	d107      	bne.n	80017a4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8001794:	683b      	ldr	r3, [r7, #0]
 8001796:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800179a:	4293      	cmp	r3, r2
 800179c:	d102      	bne.n	80017a4 <_Z41__static_initialization_and_destruction_0ii+0x20>
MP_ST_usb<packLinux2Ard, packArd2Linux, STM32MP_templateDefault()> MP_St;
 800179e:	4809      	ldr	r0, [pc, #36]	; (80017c4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80017a0:	f7ff f905 	bl	80009ae <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EEC1Ev>
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d107      	bne.n	80017ba <_Z41__static_initialization_and_destruction_0ii+0x36>
 80017aa:	683b      	ldr	r3, [r7, #0]
 80017ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80017b0:	4293      	cmp	r3, r2
 80017b2:	d102      	bne.n	80017ba <_Z41__static_initialization_and_destruction_0ii+0x36>
 80017b4:	4803      	ldr	r0, [pc, #12]	; (80017c4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80017b6:	f7ff f96d 	bl	8000a94 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EED1Ev>
}
 80017ba:	bf00      	nop
 80017bc:	3708      	adds	r7, #8
 80017be:	46bd      	mov	sp, r7
 80017c0:	bd80      	pop	{r7, pc}
 80017c2:	bf00      	nop
 80017c4:	200002f8 	.word	0x200002f8

080017c8 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE17packSend_ConcreteEPht>:

templatePar()int MP_ST_usb<templateParCall()>::packSend_Concrete(uint8_t *stream, uint16_t len) {
 80017c8:	b580      	push	{r7, lr}
 80017ca:	b084      	sub	sp, #16
 80017cc:	af00      	add	r7, sp, #0
 80017ce:	60f8      	str	r0, [r7, #12]
 80017d0:	60b9      	str	r1, [r7, #8]
 80017d2:	4613      	mov	r3, r2
 80017d4:	80fb      	strh	r3, [r7, #6]
	//return 0;
	if (byteSend.availableSpace() < len) {
 80017d6:	68fb      	ldr	r3, [r7, #12]
 80017d8:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 80017dc:	4618      	mov	r0, r3
 80017de:	f7ff fddf 	bl	80013a0 <_ZNK14CircularBufferIhLt368EE14availableSpaceEv>
 80017e2:	4603      	mov	r3, r0
 80017e4:	461a      	mov	r2, r3
 80017e6:	88fb      	ldrh	r3, [r7, #6]
 80017e8:	4293      	cmp	r3, r2
 80017ea:	bf8c      	ite	hi
 80017ec:	2301      	movhi	r3, #1
 80017ee:	2300      	movls	r3, #0
 80017f0:	b2db      	uxtb	r3, r3
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d002      	beq.n	80017fc <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE17packSend_ConcreteEPht+0x34>
		return -2;
 80017f6:	f06f 0301 	mvn.w	r3, #1
 80017fa:	e018      	b.n	800182e <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE17packSend_ConcreteEPht+0x66>
	}
	byteSend.putArray(stream, len);
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	f503 73f9 	add.w	r3, r3, #498	; 0x1f2
 8001802:	88fa      	ldrh	r2, [r7, #6]
 8001804:	68b9      	ldr	r1, [r7, #8]
 8001806:	4618      	mov	r0, r3
 8001808:	f7ff fb80 	bl	8000f0c <_ZN14CircularBufferIhLt368EE8putArrayEPht>
	if (isrSendNotify(nullptr, nullptr, 0) == USBD_FAIL)
 800180c:	2200      	movs	r2, #0
 800180e:	2100      	movs	r1, #0
 8001810:	2000      	movs	r0, #0
 8001812:	f7ff fa9b 	bl	8000d4c <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE13isrSendNotifyEPhPmh>
 8001816:	4603      	mov	r3, r0
 8001818:	2b03      	cmp	r3, #3
 800181a:	bf0c      	ite	eq
 800181c:	2301      	moveq	r3, #1
 800181e:	2300      	movne	r3, #0
 8001820:	b2db      	uxtb	r3, r3
 8001822:	2b00      	cmp	r3, #0
 8001824:	d002      	beq.n	800182c <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE17packSend_ConcreteEPht+0x64>
		return -3;
 8001826:	f06f 0302 	mvn.w	r3, #2
 800182a:	e000      	b.n	800182e <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE17packSend_ConcreteEPht+0x66>
	return 0;
 800182c:	2300      	movs	r3, #0
		return -3;
	}

	return 0;

}
 800182e:	4618      	mov	r0, r3
 8001830:	3710      	adds	r7, #16
 8001832:	46bd      	mov	sp, r7
 8001834:	bd80      	pop	{r7, pc}

08001836 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE15packTimeRefreshEv>:

templatePar()void MP_ST_usb<templateParCall()>::packTimeRefresh() {
 8001836:	b580      	push	{r7, lr}
 8001838:	b082      	sub	sp, #8
 800183a:	af00      	add	r7, sp, #0
 800183c:	6078      	str	r0, [r7, #4]
	lastDecodeTime = HAL_GetTick();
 800183e:	f000 fa3f 	bl	8001cc0 <HAL_GetTick>
 8001842:	4602      	mov	r2, r0
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	f8c3 2368 	str.w	r2, [r3, #872]	; 0x368
}
 800184a:	bf00      	nop
 800184c:	3708      	adds	r7, #8
 800184e:	46bd      	mov	sp, r7
 8001850:	bd80      	pop	{r7, pc}

08001852 <_ZN3EMP9MP_ST_usbI14_packLinux2Ard14_packArd2LinuxLb1ELt16ELt4EE15lastPackElapsedEv>:

templatePar()unsigned long MP_ST_usb<templateParCall()>::lastPackElapsed() {
 8001852:	b580      	push	{r7, lr}
 8001854:	b082      	sub	sp, #8
 8001856:	af00      	add	r7, sp, #0
 8001858:	6078      	str	r0, [r7, #4]
	return HAL_GetTick() - lastDecodeTime;
 800185a:	f000 fa31 	bl	8001cc0 <HAL_GetTick>
 800185e:	4602      	mov	r2, r0
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	f8d3 3368 	ldr.w	r3, [r3, #872]	; 0x368
 8001866:	1ad3      	subs	r3, r2, r3
}
 8001868:	4618      	mov	r0, r3
 800186a:	3708      	adds	r7, #8
 800186c:	46bd      	mov	sp, r7
 800186e:	bd80      	pop	{r7, pc}

08001870 <_GLOBAL__sub_I_hi2c1>:
 8001870:	b580      	push	{r7, lr}
 8001872:	af00      	add	r7, sp, #0
 8001874:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001878:	2001      	movs	r0, #1
 800187a:	f7ff ff83 	bl	8001784 <_Z41__static_initialization_and_destruction_0ii>
 800187e:	bd80      	pop	{r7, pc}

08001880 <_GLOBAL__sub_D_hi2c1>:
 8001880:	b580      	push	{r7, lr}
 8001882:	af00      	add	r7, sp, #0
 8001884:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001888:	2000      	movs	r0, #0
 800188a:	f7ff ff7b 	bl	8001784 <_Z41__static_initialization_and_destruction_0ii>
 800188e:	bd80      	pop	{r7, pc}

08001890 <HAL_MspInit>:
 8001890:	b580      	push	{r7, lr}
 8001892:	b082      	sub	sp, #8
 8001894:	af00      	add	r7, sp, #0
 8001896:	2300      	movs	r3, #0
 8001898:	607b      	str	r3, [r7, #4]
 800189a:	4b10      	ldr	r3, [pc, #64]	; (80018dc <HAL_MspInit+0x4c>)
 800189c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800189e:	4a0f      	ldr	r2, [pc, #60]	; (80018dc <HAL_MspInit+0x4c>)
 80018a0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80018a4:	6453      	str	r3, [r2, #68]	; 0x44
 80018a6:	4b0d      	ldr	r3, [pc, #52]	; (80018dc <HAL_MspInit+0x4c>)
 80018a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80018aa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80018ae:	607b      	str	r3, [r7, #4]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	2300      	movs	r3, #0
 80018b4:	603b      	str	r3, [r7, #0]
 80018b6:	4b09      	ldr	r3, [pc, #36]	; (80018dc <HAL_MspInit+0x4c>)
 80018b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018ba:	4a08      	ldr	r2, [pc, #32]	; (80018dc <HAL_MspInit+0x4c>)
 80018bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80018c0:	6413      	str	r3, [r2, #64]	; 0x40
 80018c2:	4b06      	ldr	r3, [pc, #24]	; (80018dc <HAL_MspInit+0x4c>)
 80018c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018ca:	603b      	str	r3, [r7, #0]
 80018cc:	683b      	ldr	r3, [r7, #0]
 80018ce:	2007      	movs	r0, #7
 80018d0:	f000 faf6 	bl	8001ec0 <HAL_NVIC_SetPriorityGrouping>
 80018d4:	bf00      	nop
 80018d6:	3708      	adds	r7, #8
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	40023800 	.word	0x40023800

080018e0 <HAL_I2C_MspInit>:
 80018e0:	b580      	push	{r7, lr}
 80018e2:	b08a      	sub	sp, #40	; 0x28
 80018e4:	af00      	add	r7, sp, #0
 80018e6:	6078      	str	r0, [r7, #4]
 80018e8:	f107 0314 	add.w	r3, r7, #20
 80018ec:	2200      	movs	r2, #0
 80018ee:	601a      	str	r2, [r3, #0]
 80018f0:	605a      	str	r2, [r3, #4]
 80018f2:	609a      	str	r2, [r3, #8]
 80018f4:	60da      	str	r2, [r3, #12]
 80018f6:	611a      	str	r2, [r3, #16]
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	4a19      	ldr	r2, [pc, #100]	; (8001964 <HAL_I2C_MspInit+0x84>)
 80018fe:	4293      	cmp	r3, r2
 8001900:	d12c      	bne.n	800195c <HAL_I2C_MspInit+0x7c>
 8001902:	2300      	movs	r3, #0
 8001904:	613b      	str	r3, [r7, #16]
 8001906:	4b18      	ldr	r3, [pc, #96]	; (8001968 <HAL_I2C_MspInit+0x88>)
 8001908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800190a:	4a17      	ldr	r2, [pc, #92]	; (8001968 <HAL_I2C_MspInit+0x88>)
 800190c:	f043 0302 	orr.w	r3, r3, #2
 8001910:	6313      	str	r3, [r2, #48]	; 0x30
 8001912:	4b15      	ldr	r3, [pc, #84]	; (8001968 <HAL_I2C_MspInit+0x88>)
 8001914:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001916:	f003 0302 	and.w	r3, r3, #2
 800191a:	613b      	str	r3, [r7, #16]
 800191c:	693b      	ldr	r3, [r7, #16]
 800191e:	f44f 7310 	mov.w	r3, #576	; 0x240
 8001922:	617b      	str	r3, [r7, #20]
 8001924:	2312      	movs	r3, #18
 8001926:	61bb      	str	r3, [r7, #24]
 8001928:	2301      	movs	r3, #1
 800192a:	61fb      	str	r3, [r7, #28]
 800192c:	2300      	movs	r3, #0
 800192e:	623b      	str	r3, [r7, #32]
 8001930:	2304      	movs	r3, #4
 8001932:	627b      	str	r3, [r7, #36]	; 0x24
 8001934:	f107 0314 	add.w	r3, r7, #20
 8001938:	4619      	mov	r1, r3
 800193a:	480c      	ldr	r0, [pc, #48]	; (800196c <HAL_I2C_MspInit+0x8c>)
 800193c:	f000 fb02 	bl	8001f44 <HAL_GPIO_Init>
 8001940:	2300      	movs	r3, #0
 8001942:	60fb      	str	r3, [r7, #12]
 8001944:	4b08      	ldr	r3, [pc, #32]	; (8001968 <HAL_I2C_MspInit+0x88>)
 8001946:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001948:	4a07      	ldr	r2, [pc, #28]	; (8001968 <HAL_I2C_MspInit+0x88>)
 800194a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800194e:	6413      	str	r3, [r2, #64]	; 0x40
 8001950:	4b05      	ldr	r3, [pc, #20]	; (8001968 <HAL_I2C_MspInit+0x88>)
 8001952:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001954:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001958:	60fb      	str	r3, [r7, #12]
 800195a:	68fb      	ldr	r3, [r7, #12]
 800195c:	bf00      	nop
 800195e:	3728      	adds	r7, #40	; 0x28
 8001960:	46bd      	mov	sp, r7
 8001962:	bd80      	pop	{r7, pc}
 8001964:	40005400 	.word	0x40005400
 8001968:	40023800 	.word	0x40023800
 800196c:	40020400 	.word	0x40020400

08001970 <HAL_I2S_MspInit>:
 8001970:	b580      	push	{r7, lr}
 8001972:	b08a      	sub	sp, #40	; 0x28
 8001974:	af00      	add	r7, sp, #0
 8001976:	6078      	str	r0, [r7, #4]
 8001978:	f107 0314 	add.w	r3, r7, #20
 800197c:	2200      	movs	r2, #0
 800197e:	601a      	str	r2, [r3, #0]
 8001980:	605a      	str	r2, [r3, #4]
 8001982:	609a      	str	r2, [r3, #8]
 8001984:	60da      	str	r2, [r3, #12]
 8001986:	611a      	str	r2, [r3, #16]
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	4a28      	ldr	r2, [pc, #160]	; (8001a30 <HAL_I2S_MspInit+0xc0>)
 800198e:	4293      	cmp	r3, r2
 8001990:	d14a      	bne.n	8001a28 <HAL_I2S_MspInit+0xb8>
 8001992:	2300      	movs	r3, #0
 8001994:	613b      	str	r3, [r7, #16]
 8001996:	4b27      	ldr	r3, [pc, #156]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 8001998:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800199a:	4a26      	ldr	r2, [pc, #152]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 800199c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80019a0:	6413      	str	r3, [r2, #64]	; 0x40
 80019a2:	4b24      	ldr	r3, [pc, #144]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80019aa:	613b      	str	r3, [r7, #16]
 80019ac:	693b      	ldr	r3, [r7, #16]
 80019ae:	2300      	movs	r3, #0
 80019b0:	60fb      	str	r3, [r7, #12]
 80019b2:	4b20      	ldr	r3, [pc, #128]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019b6:	4a1f      	ldr	r2, [pc, #124]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019b8:	f043 0301 	orr.w	r3, r3, #1
 80019bc:	6313      	str	r3, [r2, #48]	; 0x30
 80019be:	4b1d      	ldr	r3, [pc, #116]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c2:	f003 0301 	and.w	r3, r3, #1
 80019c6:	60fb      	str	r3, [r7, #12]
 80019c8:	68fb      	ldr	r3, [r7, #12]
 80019ca:	2300      	movs	r3, #0
 80019cc:	60bb      	str	r3, [r7, #8]
 80019ce:	4b19      	ldr	r3, [pc, #100]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d2:	4a18      	ldr	r2, [pc, #96]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019d4:	f043 0304 	orr.w	r3, r3, #4
 80019d8:	6313      	str	r3, [r2, #48]	; 0x30
 80019da:	4b16      	ldr	r3, [pc, #88]	; (8001a34 <HAL_I2S_MspInit+0xc4>)
 80019dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019de:	f003 0304 	and.w	r3, r3, #4
 80019e2:	60bb      	str	r3, [r7, #8]
 80019e4:	68bb      	ldr	r3, [r7, #8]
 80019e6:	2310      	movs	r3, #16
 80019e8:	617b      	str	r3, [r7, #20]
 80019ea:	2302      	movs	r3, #2
 80019ec:	61bb      	str	r3, [r7, #24]
 80019ee:	2300      	movs	r3, #0
 80019f0:	61fb      	str	r3, [r7, #28]
 80019f2:	2300      	movs	r3, #0
 80019f4:	623b      	str	r3, [r7, #32]
 80019f6:	2306      	movs	r3, #6
 80019f8:	627b      	str	r3, [r7, #36]	; 0x24
 80019fa:	f107 0314 	add.w	r3, r7, #20
 80019fe:	4619      	mov	r1, r3
 8001a00:	480d      	ldr	r0, [pc, #52]	; (8001a38 <HAL_I2S_MspInit+0xc8>)
 8001a02:	f000 fa9f 	bl	8001f44 <HAL_GPIO_Init>
 8001a06:	f44f 53a4 	mov.w	r3, #5248	; 0x1480
 8001a0a:	617b      	str	r3, [r7, #20]
 8001a0c:	2302      	movs	r3, #2
 8001a0e:	61bb      	str	r3, [r7, #24]
 8001a10:	2300      	movs	r3, #0
 8001a12:	61fb      	str	r3, [r7, #28]
 8001a14:	2300      	movs	r3, #0
 8001a16:	623b      	str	r3, [r7, #32]
 8001a18:	2306      	movs	r3, #6
 8001a1a:	627b      	str	r3, [r7, #36]	; 0x24
 8001a1c:	f107 0314 	add.w	r3, r7, #20
 8001a20:	4619      	mov	r1, r3
 8001a22:	4806      	ldr	r0, [pc, #24]	; (8001a3c <HAL_I2S_MspInit+0xcc>)
 8001a24:	f000 fa8e 	bl	8001f44 <HAL_GPIO_Init>
 8001a28:	bf00      	nop
 8001a2a:	3728      	adds	r7, #40	; 0x28
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bd80      	pop	{r7, pc}
 8001a30:	40003c00 	.word	0x40003c00
 8001a34:	40023800 	.word	0x40023800
 8001a38:	40020000 	.word	0x40020000
 8001a3c:	40020800 	.word	0x40020800

08001a40 <HAL_SPI_MspInit>:
 8001a40:	b580      	push	{r7, lr}
 8001a42:	b08a      	sub	sp, #40	; 0x28
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	6078      	str	r0, [r7, #4]
 8001a48:	f107 0314 	add.w	r3, r7, #20
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	601a      	str	r2, [r3, #0]
 8001a50:	605a      	str	r2, [r3, #4]
 8001a52:	609a      	str	r2, [r3, #8]
 8001a54:	60da      	str	r2, [r3, #12]
 8001a56:	611a      	str	r2, [r3, #16]
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	4a19      	ldr	r2, [pc, #100]	; (8001ac4 <HAL_SPI_MspInit+0x84>)
 8001a5e:	4293      	cmp	r3, r2
 8001a60:	d12b      	bne.n	8001aba <HAL_SPI_MspInit+0x7a>
 8001a62:	2300      	movs	r3, #0
 8001a64:	613b      	str	r3, [r7, #16]
 8001a66:	4b18      	ldr	r3, [pc, #96]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a6a:	4a17      	ldr	r2, [pc, #92]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a6c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001a70:	6453      	str	r3, [r2, #68]	; 0x44
 8001a72:	4b15      	ldr	r3, [pc, #84]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a76:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a7a:	613b      	str	r3, [r7, #16]
 8001a7c:	693b      	ldr	r3, [r7, #16]
 8001a7e:	2300      	movs	r3, #0
 8001a80:	60fb      	str	r3, [r7, #12]
 8001a82:	4b11      	ldr	r3, [pc, #68]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a86:	4a10      	ldr	r2, [pc, #64]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a88:	f043 0301 	orr.w	r3, r3, #1
 8001a8c:	6313      	str	r3, [r2, #48]	; 0x30
 8001a8e:	4b0e      	ldr	r3, [pc, #56]	; (8001ac8 <HAL_SPI_MspInit+0x88>)
 8001a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a92:	f003 0301 	and.w	r3, r3, #1
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	23e0      	movs	r3, #224	; 0xe0
 8001a9c:	617b      	str	r3, [r7, #20]
 8001a9e:	2302      	movs	r3, #2
 8001aa0:	61bb      	str	r3, [r7, #24]
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	61fb      	str	r3, [r7, #28]
 8001aa6:	2300      	movs	r3, #0
 8001aa8:	623b      	str	r3, [r7, #32]
 8001aaa:	2305      	movs	r3, #5
 8001aac:	627b      	str	r3, [r7, #36]	; 0x24
 8001aae:	f107 0314 	add.w	r3, r7, #20
 8001ab2:	4619      	mov	r1, r3
 8001ab4:	4805      	ldr	r0, [pc, #20]	; (8001acc <HAL_SPI_MspInit+0x8c>)
 8001ab6:	f000 fa45 	bl	8001f44 <HAL_GPIO_Init>
 8001aba:	bf00      	nop
 8001abc:	3728      	adds	r7, #40	; 0x28
 8001abe:	46bd      	mov	sp, r7
 8001ac0:	bd80      	pop	{r7, pc}
 8001ac2:	bf00      	nop
 8001ac4:	40013000 	.word	0x40013000
 8001ac8:	40023800 	.word	0x40023800
 8001acc:	40020000 	.word	0x40020000

08001ad0 <NMI_Handler>:
 8001ad0:	b480      	push	{r7}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	e7fe      	b.n	8001ad4 <NMI_Handler+0x4>

08001ad6 <HardFault_Handler>:
 8001ad6:	b480      	push	{r7}
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	e7fe      	b.n	8001ada <HardFault_Handler+0x4>

08001adc <MemManage_Handler>:
 8001adc:	b480      	push	{r7}
 8001ade:	af00      	add	r7, sp, #0
 8001ae0:	e7fe      	b.n	8001ae0 <MemManage_Handler+0x4>

08001ae2 <BusFault_Handler>:
 8001ae2:	b480      	push	{r7}
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	e7fe      	b.n	8001ae6 <BusFault_Handler+0x4>

08001ae8 <UsageFault_Handler>:
 8001ae8:	b480      	push	{r7}
 8001aea:	af00      	add	r7, sp, #0
 8001aec:	e7fe      	b.n	8001aec <UsageFault_Handler+0x4>

08001aee <SVC_Handler>:
 8001aee:	b480      	push	{r7}
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	bf00      	nop
 8001af4:	46bd      	mov	sp, r7
 8001af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afa:	4770      	bx	lr

08001afc <DebugMon_Handler>:
 8001afc:	b480      	push	{r7}
 8001afe:	af00      	add	r7, sp, #0
 8001b00:	bf00      	nop
 8001b02:	46bd      	mov	sp, r7
 8001b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b08:	4770      	bx	lr

08001b0a <PendSV_Handler>:
 8001b0a:	b480      	push	{r7}
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	bf00      	nop
 8001b10:	46bd      	mov	sp, r7
 8001b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b16:	4770      	bx	lr

08001b18 <SysTick_Handler>:
 8001b18:	b580      	push	{r7, lr}
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	f000 f8bc 	bl	8001c98 <HAL_IncTick>
 8001b20:	bf00      	nop
 8001b22:	bd80      	pop	{r7, pc}

08001b24 <OTG_FS_IRQHandler>:
 8001b24:	b580      	push	{r7, lr}
 8001b26:	af00      	add	r7, sp, #0
 8001b28:	4802      	ldr	r0, [pc, #8]	; (8001b34 <OTG_FS_IRQHandler+0x10>)
 8001b2a:	f001 faf5 	bl	8003118 <HAL_PCD_IRQHandler>
 8001b2e:	bf00      	nop
 8001b30:	bd80      	pop	{r7, pc}
 8001b32:	bf00      	nop
 8001b34:	20001d60 	.word	0x20001d60

08001b38 <_getpid>:
 8001b38:	b480      	push	{r7}
 8001b3a:	af00      	add	r7, sp, #0
 8001b3c:	2301      	movs	r3, #1
 8001b3e:	4618      	mov	r0, r3
 8001b40:	46bd      	mov	sp, r7
 8001b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b46:	4770      	bx	lr

08001b48 <_kill>:
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	b082      	sub	sp, #8
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	6078      	str	r0, [r7, #4]
 8001b50:	6039      	str	r1, [r7, #0]
 8001b52:	f007 f80f 	bl	8008b74 <__errno>
 8001b56:	4603      	mov	r3, r0
 8001b58:	2216      	movs	r2, #22
 8001b5a:	601a      	str	r2, [r3, #0]
 8001b5c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001b60:	4618      	mov	r0, r3
 8001b62:	3708      	adds	r7, #8
 8001b64:	46bd      	mov	sp, r7
 8001b66:	bd80      	pop	{r7, pc}

08001b68 <_exit>:
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b082      	sub	sp, #8
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001b74:	6878      	ldr	r0, [r7, #4]
 8001b76:	f7ff ffe7 	bl	8001b48 <_kill>
 8001b7a:	e7fe      	b.n	8001b7a <_exit+0x12>

08001b7c <SystemInit>:
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	4b06      	ldr	r3, [pc, #24]	; (8001b9c <SystemInit+0x20>)
 8001b82:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001b86:	4a05      	ldr	r2, [pc, #20]	; (8001b9c <SystemInit+0x20>)
 8001b88:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001b8c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001b90:	bf00      	nop
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr
 8001b9a:	bf00      	nop
 8001b9c:	e000ed00 	.word	0xe000ed00

08001ba0 <Reset_Handler>:
 8001ba0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001bd8 <LoopFillZerobss+0x12>
 8001ba4:	480d      	ldr	r0, [pc, #52]	; (8001bdc <LoopFillZerobss+0x16>)
 8001ba6:	490e      	ldr	r1, [pc, #56]	; (8001be0 <LoopFillZerobss+0x1a>)
 8001ba8:	4a0e      	ldr	r2, [pc, #56]	; (8001be4 <LoopFillZerobss+0x1e>)
 8001baa:	2300      	movs	r3, #0
 8001bac:	e002      	b.n	8001bb4 <LoopCopyDataInit>

08001bae <CopyDataInit>:
 8001bae:	58d4      	ldr	r4, [r2, r3]
 8001bb0:	50c4      	str	r4, [r0, r3]
 8001bb2:	3304      	adds	r3, #4

08001bb4 <LoopCopyDataInit>:
 8001bb4:	18c4      	adds	r4, r0, r3
 8001bb6:	428c      	cmp	r4, r1
 8001bb8:	d3f9      	bcc.n	8001bae <CopyDataInit>
 8001bba:	4a0b      	ldr	r2, [pc, #44]	; (8001be8 <LoopFillZerobss+0x22>)
 8001bbc:	4c0b      	ldr	r4, [pc, #44]	; (8001bec <LoopFillZerobss+0x26>)
 8001bbe:	2300      	movs	r3, #0
 8001bc0:	e001      	b.n	8001bc6 <LoopFillZerobss>

08001bc2 <FillZerobss>:
 8001bc2:	6013      	str	r3, [r2, #0]
 8001bc4:	3204      	adds	r2, #4

08001bc6 <LoopFillZerobss>:
 8001bc6:	42a2      	cmp	r2, r4
 8001bc8:	d3fb      	bcc.n	8001bc2 <FillZerobss>
 8001bca:	f7ff ffd7 	bl	8001b7c <SystemInit>
 8001bce:	f006 ffd7 	bl	8008b80 <__libc_init_array>
 8001bd2:	f7fe fc75 	bl	80004c0 <main>
 8001bd6:	4770      	bx	lr
 8001bd8:	20020000 	.word	0x20020000
 8001bdc:	20000000 	.word	0x20000000
 8001be0:	200001e8 	.word	0x200001e8
 8001be4:	08008d50 	.word	0x08008d50
 8001be8:	200001e8 	.word	0x200001e8
 8001bec:	2000216c 	.word	0x2000216c

08001bf0 <ADC_IRQHandler>:
 8001bf0:	e7fe      	b.n	8001bf0 <ADC_IRQHandler>
	...

08001bf4 <HAL_Init>:
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	4b0e      	ldr	r3, [pc, #56]	; (8001c34 <HAL_Init+0x40>)
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	4a0d      	ldr	r2, [pc, #52]	; (8001c34 <HAL_Init+0x40>)
 8001bfe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c02:	6013      	str	r3, [r2, #0]
 8001c04:	4b0b      	ldr	r3, [pc, #44]	; (8001c34 <HAL_Init+0x40>)
 8001c06:	681b      	ldr	r3, [r3, #0]
 8001c08:	4a0a      	ldr	r2, [pc, #40]	; (8001c34 <HAL_Init+0x40>)
 8001c0a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001c0e:	6013      	str	r3, [r2, #0]
 8001c10:	4b08      	ldr	r3, [pc, #32]	; (8001c34 <HAL_Init+0x40>)
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	4a07      	ldr	r2, [pc, #28]	; (8001c34 <HAL_Init+0x40>)
 8001c16:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c1a:	6013      	str	r3, [r2, #0]
 8001c1c:	2003      	movs	r0, #3
 8001c1e:	f000 f94f 	bl	8001ec0 <HAL_NVIC_SetPriorityGrouping>
 8001c22:	2000      	movs	r0, #0
 8001c24:	f000 f808 	bl	8001c38 <HAL_InitTick>
 8001c28:	f7ff fe32 	bl	8001890 <HAL_MspInit>
 8001c2c:	2300      	movs	r3, #0
 8001c2e:	4618      	mov	r0, r3
 8001c30:	bd80      	pop	{r7, pc}
 8001c32:	bf00      	nop
 8001c34:	40023c00 	.word	0x40023c00

08001c38 <HAL_InitTick>:
 8001c38:	b580      	push	{r7, lr}
 8001c3a:	b082      	sub	sp, #8
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
 8001c40:	4b12      	ldr	r3, [pc, #72]	; (8001c8c <HAL_InitTick+0x54>)
 8001c42:	681a      	ldr	r2, [r3, #0]
 8001c44:	4b12      	ldr	r3, [pc, #72]	; (8001c90 <HAL_InitTick+0x58>)
 8001c46:	781b      	ldrb	r3, [r3, #0]
 8001c48:	4619      	mov	r1, r3
 8001c4a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001c4e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c52:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c56:	4618      	mov	r0, r3
 8001c58:	f000 f967 	bl	8001f2a <HAL_SYSTICK_Config>
 8001c5c:	4603      	mov	r3, r0
 8001c5e:	2b00      	cmp	r3, #0
 8001c60:	d001      	beq.n	8001c66 <HAL_InitTick+0x2e>
 8001c62:	2301      	movs	r3, #1
 8001c64:	e00e      	b.n	8001c84 <HAL_InitTick+0x4c>
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	2b0f      	cmp	r3, #15
 8001c6a:	d80a      	bhi.n	8001c82 <HAL_InitTick+0x4a>
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	6879      	ldr	r1, [r7, #4]
 8001c70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c74:	f000 f92f 	bl	8001ed6 <HAL_NVIC_SetPriority>
 8001c78:	4a06      	ldr	r2, [pc, #24]	; (8001c94 <HAL_InitTick+0x5c>)
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	6013      	str	r3, [r2, #0]
 8001c7e:	2300      	movs	r3, #0
 8001c80:	e000      	b.n	8001c84 <HAL_InitTick+0x4c>
 8001c82:	2301      	movs	r3, #1
 8001c84:	4618      	mov	r0, r3
 8001c86:	3708      	adds	r7, #8
 8001c88:	46bd      	mov	sp, r7
 8001c8a:	bd80      	pop	{r7, pc}
 8001c8c:	20000000 	.word	0x20000000
 8001c90:	20000008 	.word	0x20000008
 8001c94:	20000004 	.word	0x20000004

08001c98 <HAL_IncTick>:
 8001c98:	b480      	push	{r7}
 8001c9a:	af00      	add	r7, sp, #0
 8001c9c:	4b06      	ldr	r3, [pc, #24]	; (8001cb8 <HAL_IncTick+0x20>)
 8001c9e:	781b      	ldrb	r3, [r3, #0]
 8001ca0:	461a      	mov	r2, r3
 8001ca2:	4b06      	ldr	r3, [pc, #24]	; (8001cbc <HAL_IncTick+0x24>)
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	4413      	add	r3, r2
 8001ca8:	4a04      	ldr	r2, [pc, #16]	; (8001cbc <HAL_IncTick+0x24>)
 8001caa:	6013      	str	r3, [r2, #0]
 8001cac:	bf00      	nop
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb4:	4770      	bx	lr
 8001cb6:	bf00      	nop
 8001cb8:	20000008 	.word	0x20000008
 8001cbc:	2000088c 	.word	0x2000088c

08001cc0 <HAL_GetTick>:
 8001cc0:	b480      	push	{r7}
 8001cc2:	af00      	add	r7, sp, #0
 8001cc4:	4b03      	ldr	r3, [pc, #12]	; (8001cd4 <HAL_GetTick+0x14>)
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	4618      	mov	r0, r3
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd0:	4770      	bx	lr
 8001cd2:	bf00      	nop
 8001cd4:	2000088c 	.word	0x2000088c

08001cd8 <HAL_Delay>:
 8001cd8:	b580      	push	{r7, lr}
 8001cda:	b084      	sub	sp, #16
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	6078      	str	r0, [r7, #4]
 8001ce0:	f7ff ffee 	bl	8001cc0 <HAL_GetTick>
 8001ce4:	60b8      	str	r0, [r7, #8]
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	60fb      	str	r3, [r7, #12]
 8001cea:	68fb      	ldr	r3, [r7, #12]
 8001cec:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001cf0:	d005      	beq.n	8001cfe <HAL_Delay+0x26>
 8001cf2:	4b0a      	ldr	r3, [pc, #40]	; (8001d1c <HAL_Delay+0x44>)
 8001cf4:	781b      	ldrb	r3, [r3, #0]
 8001cf6:	461a      	mov	r2, r3
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	4413      	add	r3, r2
 8001cfc:	60fb      	str	r3, [r7, #12]
 8001cfe:	bf00      	nop
 8001d00:	f7ff ffde 	bl	8001cc0 <HAL_GetTick>
 8001d04:	4602      	mov	r2, r0
 8001d06:	68bb      	ldr	r3, [r7, #8]
 8001d08:	1ad3      	subs	r3, r2, r3
 8001d0a:	68fa      	ldr	r2, [r7, #12]
 8001d0c:	429a      	cmp	r2, r3
 8001d0e:	d8f7      	bhi.n	8001d00 <HAL_Delay+0x28>
 8001d10:	bf00      	nop
 8001d12:	bf00      	nop
 8001d14:	3710      	adds	r7, #16
 8001d16:	46bd      	mov	sp, r7
 8001d18:	bd80      	pop	{r7, pc}
 8001d1a:	bf00      	nop
 8001d1c:	20000008 	.word	0x20000008

08001d20 <__NVIC_SetPriorityGrouping>:
 8001d20:	b480      	push	{r7}
 8001d22:	b085      	sub	sp, #20
 8001d24:	af00      	add	r7, sp, #0
 8001d26:	6078      	str	r0, [r7, #4]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	f003 0307 	and.w	r3, r3, #7
 8001d2e:	60fb      	str	r3, [r7, #12]
 8001d30:	4b0c      	ldr	r3, [pc, #48]	; (8001d64 <__NVIC_SetPriorityGrouping+0x44>)
 8001d32:	68db      	ldr	r3, [r3, #12]
 8001d34:	60bb      	str	r3, [r7, #8]
 8001d36:	68ba      	ldr	r2, [r7, #8]
 8001d38:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001d3c:	4013      	ands	r3, r2
 8001d3e:	60bb      	str	r3, [r7, #8]
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	021a      	lsls	r2, r3, #8
 8001d44:	68bb      	ldr	r3, [r7, #8]
 8001d46:	4313      	orrs	r3, r2
 8001d48:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001d4c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d50:	60bb      	str	r3, [r7, #8]
 8001d52:	4a04      	ldr	r2, [pc, #16]	; (8001d64 <__NVIC_SetPriorityGrouping+0x44>)
 8001d54:	68bb      	ldr	r3, [r7, #8]
 8001d56:	60d3      	str	r3, [r2, #12]
 8001d58:	bf00      	nop
 8001d5a:	3714      	adds	r7, #20
 8001d5c:	46bd      	mov	sp, r7
 8001d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d62:	4770      	bx	lr
 8001d64:	e000ed00 	.word	0xe000ed00

08001d68 <__NVIC_GetPriorityGrouping>:
 8001d68:	b480      	push	{r7}
 8001d6a:	af00      	add	r7, sp, #0
 8001d6c:	4b04      	ldr	r3, [pc, #16]	; (8001d80 <__NVIC_GetPriorityGrouping+0x18>)
 8001d6e:	68db      	ldr	r3, [r3, #12]
 8001d70:	0a1b      	lsrs	r3, r3, #8
 8001d72:	f003 0307 	and.w	r3, r3, #7
 8001d76:	4618      	mov	r0, r3
 8001d78:	46bd      	mov	sp, r7
 8001d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d7e:	4770      	bx	lr
 8001d80:	e000ed00 	.word	0xe000ed00

08001d84 <__NVIC_EnableIRQ>:
 8001d84:	b480      	push	{r7}
 8001d86:	b083      	sub	sp, #12
 8001d88:	af00      	add	r7, sp, #0
 8001d8a:	4603      	mov	r3, r0
 8001d8c:	71fb      	strb	r3, [r7, #7]
 8001d8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	db0b      	blt.n	8001dae <__NVIC_EnableIRQ+0x2a>
 8001d96:	79fb      	ldrb	r3, [r7, #7]
 8001d98:	f003 021f 	and.w	r2, r3, #31
 8001d9c:	4907      	ldr	r1, [pc, #28]	; (8001dbc <__NVIC_EnableIRQ+0x38>)
 8001d9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001da2:	095b      	lsrs	r3, r3, #5
 8001da4:	2001      	movs	r0, #1
 8001da6:	fa00 f202 	lsl.w	r2, r0, r2
 8001daa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001dae:	bf00      	nop
 8001db0:	370c      	adds	r7, #12
 8001db2:	46bd      	mov	sp, r7
 8001db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db8:	4770      	bx	lr
 8001dba:	bf00      	nop
 8001dbc:	e000e100 	.word	0xe000e100

08001dc0 <__NVIC_SetPriority>:
 8001dc0:	b480      	push	{r7}
 8001dc2:	b083      	sub	sp, #12
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	4603      	mov	r3, r0
 8001dc8:	6039      	str	r1, [r7, #0]
 8001dca:	71fb      	strb	r3, [r7, #7]
 8001dcc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	db0a      	blt.n	8001dea <__NVIC_SetPriority+0x2a>
 8001dd4:	683b      	ldr	r3, [r7, #0]
 8001dd6:	b2da      	uxtb	r2, r3
 8001dd8:	490c      	ldr	r1, [pc, #48]	; (8001e0c <__NVIC_SetPriority+0x4c>)
 8001dda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dde:	0112      	lsls	r2, r2, #4
 8001de0:	b2d2      	uxtb	r2, r2
 8001de2:	440b      	add	r3, r1
 8001de4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001de8:	e00a      	b.n	8001e00 <__NVIC_SetPriority+0x40>
 8001dea:	683b      	ldr	r3, [r7, #0]
 8001dec:	b2da      	uxtb	r2, r3
 8001dee:	4908      	ldr	r1, [pc, #32]	; (8001e10 <__NVIC_SetPriority+0x50>)
 8001df0:	79fb      	ldrb	r3, [r7, #7]
 8001df2:	f003 030f 	and.w	r3, r3, #15
 8001df6:	3b04      	subs	r3, #4
 8001df8:	0112      	lsls	r2, r2, #4
 8001dfa:	b2d2      	uxtb	r2, r2
 8001dfc:	440b      	add	r3, r1
 8001dfe:	761a      	strb	r2, [r3, #24]
 8001e00:	bf00      	nop
 8001e02:	370c      	adds	r7, #12
 8001e04:	46bd      	mov	sp, r7
 8001e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0a:	4770      	bx	lr
 8001e0c:	e000e100 	.word	0xe000e100
 8001e10:	e000ed00 	.word	0xe000ed00

08001e14 <NVIC_EncodePriority>:
 8001e14:	b480      	push	{r7}
 8001e16:	b089      	sub	sp, #36	; 0x24
 8001e18:	af00      	add	r7, sp, #0
 8001e1a:	60f8      	str	r0, [r7, #12]
 8001e1c:	60b9      	str	r1, [r7, #8]
 8001e1e:	607a      	str	r2, [r7, #4]
 8001e20:	68fb      	ldr	r3, [r7, #12]
 8001e22:	f003 0307 	and.w	r3, r3, #7
 8001e26:	61fb      	str	r3, [r7, #28]
 8001e28:	69fb      	ldr	r3, [r7, #28]
 8001e2a:	f1c3 0307 	rsb	r3, r3, #7
 8001e2e:	2b04      	cmp	r3, #4
 8001e30:	bf28      	it	cs
 8001e32:	2304      	movcs	r3, #4
 8001e34:	61bb      	str	r3, [r7, #24]
 8001e36:	69fb      	ldr	r3, [r7, #28]
 8001e38:	3304      	adds	r3, #4
 8001e3a:	2b06      	cmp	r3, #6
 8001e3c:	d902      	bls.n	8001e44 <NVIC_EncodePriority+0x30>
 8001e3e:	69fb      	ldr	r3, [r7, #28]
 8001e40:	3b03      	subs	r3, #3
 8001e42:	e000      	b.n	8001e46 <NVIC_EncodePriority+0x32>
 8001e44:	2300      	movs	r3, #0
 8001e46:	617b      	str	r3, [r7, #20]
 8001e48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001e4c:	69bb      	ldr	r3, [r7, #24]
 8001e4e:	fa02 f303 	lsl.w	r3, r2, r3
 8001e52:	43da      	mvns	r2, r3
 8001e54:	68bb      	ldr	r3, [r7, #8]
 8001e56:	401a      	ands	r2, r3
 8001e58:	697b      	ldr	r3, [r7, #20]
 8001e5a:	409a      	lsls	r2, r3
 8001e5c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001e60:	697b      	ldr	r3, [r7, #20]
 8001e62:	fa01 f303 	lsl.w	r3, r1, r3
 8001e66:	43d9      	mvns	r1, r3
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	400b      	ands	r3, r1
 8001e6c:	4313      	orrs	r3, r2
 8001e6e:	4618      	mov	r0, r3
 8001e70:	3724      	adds	r7, #36	; 0x24
 8001e72:	46bd      	mov	sp, r7
 8001e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e78:	4770      	bx	lr
	...

08001e7c <SysTick_Config>:
 8001e7c:	b580      	push	{r7, lr}
 8001e7e:	b082      	sub	sp, #8
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	3b01      	subs	r3, #1
 8001e88:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001e8c:	d301      	bcc.n	8001e92 <SysTick_Config+0x16>
 8001e8e:	2301      	movs	r3, #1
 8001e90:	e00f      	b.n	8001eb2 <SysTick_Config+0x36>
 8001e92:	4a0a      	ldr	r2, [pc, #40]	; (8001ebc <SysTick_Config+0x40>)
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	3b01      	subs	r3, #1
 8001e98:	6053      	str	r3, [r2, #4]
 8001e9a:	210f      	movs	r1, #15
 8001e9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001ea0:	f7ff ff8e 	bl	8001dc0 <__NVIC_SetPriority>
 8001ea4:	4b05      	ldr	r3, [pc, #20]	; (8001ebc <SysTick_Config+0x40>)
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	609a      	str	r2, [r3, #8]
 8001eaa:	4b04      	ldr	r3, [pc, #16]	; (8001ebc <SysTick_Config+0x40>)
 8001eac:	2207      	movs	r2, #7
 8001eae:	601a      	str	r2, [r3, #0]
 8001eb0:	2300      	movs	r3, #0
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	3708      	adds	r7, #8
 8001eb6:	46bd      	mov	sp, r7
 8001eb8:	bd80      	pop	{r7, pc}
 8001eba:	bf00      	nop
 8001ebc:	e000e010 	.word	0xe000e010

08001ec0 <HAL_NVIC_SetPriorityGrouping>:
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b082      	sub	sp, #8
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]
 8001ec8:	6878      	ldr	r0, [r7, #4]
 8001eca:	f7ff ff29 	bl	8001d20 <__NVIC_SetPriorityGrouping>
 8001ece:	bf00      	nop
 8001ed0:	3708      	adds	r7, #8
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	bd80      	pop	{r7, pc}

08001ed6 <HAL_NVIC_SetPriority>:
 8001ed6:	b580      	push	{r7, lr}
 8001ed8:	b086      	sub	sp, #24
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	4603      	mov	r3, r0
 8001ede:	60b9      	str	r1, [r7, #8]
 8001ee0:	607a      	str	r2, [r7, #4]
 8001ee2:	73fb      	strb	r3, [r7, #15]
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	617b      	str	r3, [r7, #20]
 8001ee8:	f7ff ff3e 	bl	8001d68 <__NVIC_GetPriorityGrouping>
 8001eec:	6178      	str	r0, [r7, #20]
 8001eee:	687a      	ldr	r2, [r7, #4]
 8001ef0:	68b9      	ldr	r1, [r7, #8]
 8001ef2:	6978      	ldr	r0, [r7, #20]
 8001ef4:	f7ff ff8e 	bl	8001e14 <NVIC_EncodePriority>
 8001ef8:	4602      	mov	r2, r0
 8001efa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001efe:	4611      	mov	r1, r2
 8001f00:	4618      	mov	r0, r3
 8001f02:	f7ff ff5d 	bl	8001dc0 <__NVIC_SetPriority>
 8001f06:	bf00      	nop
 8001f08:	3718      	adds	r7, #24
 8001f0a:	46bd      	mov	sp, r7
 8001f0c:	bd80      	pop	{r7, pc}

08001f0e <HAL_NVIC_EnableIRQ>:
 8001f0e:	b580      	push	{r7, lr}
 8001f10:	b082      	sub	sp, #8
 8001f12:	af00      	add	r7, sp, #0
 8001f14:	4603      	mov	r3, r0
 8001f16:	71fb      	strb	r3, [r7, #7]
 8001f18:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f1c:	4618      	mov	r0, r3
 8001f1e:	f7ff ff31 	bl	8001d84 <__NVIC_EnableIRQ>
 8001f22:	bf00      	nop
 8001f24:	3708      	adds	r7, #8
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bd80      	pop	{r7, pc}

08001f2a <HAL_SYSTICK_Config>:
 8001f2a:	b580      	push	{r7, lr}
 8001f2c:	b082      	sub	sp, #8
 8001f2e:	af00      	add	r7, sp, #0
 8001f30:	6078      	str	r0, [r7, #4]
 8001f32:	6878      	ldr	r0, [r7, #4]
 8001f34:	f7ff ffa2 	bl	8001e7c <SysTick_Config>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	3708      	adds	r7, #8
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	bd80      	pop	{r7, pc}
	...

08001f44 <HAL_GPIO_Init>:
 8001f44:	b480      	push	{r7}
 8001f46:	b089      	sub	sp, #36	; 0x24
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	6078      	str	r0, [r7, #4]
 8001f4c:	6039      	str	r1, [r7, #0]
 8001f4e:	2300      	movs	r3, #0
 8001f50:	617b      	str	r3, [r7, #20]
 8001f52:	2300      	movs	r3, #0
 8001f54:	613b      	str	r3, [r7, #16]
 8001f56:	2300      	movs	r3, #0
 8001f58:	61bb      	str	r3, [r7, #24]
 8001f5a:	2300      	movs	r3, #0
 8001f5c:	61fb      	str	r3, [r7, #28]
 8001f5e:	e16b      	b.n	8002238 <HAL_GPIO_Init+0x2f4>
 8001f60:	2201      	movs	r2, #1
 8001f62:	69fb      	ldr	r3, [r7, #28]
 8001f64:	fa02 f303 	lsl.w	r3, r2, r3
 8001f68:	617b      	str	r3, [r7, #20]
 8001f6a:	683b      	ldr	r3, [r7, #0]
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	697a      	ldr	r2, [r7, #20]
 8001f70:	4013      	ands	r3, r2
 8001f72:	613b      	str	r3, [r7, #16]
 8001f74:	693a      	ldr	r2, [r7, #16]
 8001f76:	697b      	ldr	r3, [r7, #20]
 8001f78:	429a      	cmp	r2, r3
 8001f7a:	f040 815a 	bne.w	8002232 <HAL_GPIO_Init+0x2ee>
 8001f7e:	683b      	ldr	r3, [r7, #0]
 8001f80:	685b      	ldr	r3, [r3, #4]
 8001f82:	f003 0303 	and.w	r3, r3, #3
 8001f86:	2b01      	cmp	r3, #1
 8001f88:	d005      	beq.n	8001f96 <HAL_GPIO_Init+0x52>
 8001f8a:	683b      	ldr	r3, [r7, #0]
 8001f8c:	685b      	ldr	r3, [r3, #4]
 8001f8e:	f003 0303 	and.w	r3, r3, #3
 8001f92:	2b02      	cmp	r3, #2
 8001f94:	d130      	bne.n	8001ff8 <HAL_GPIO_Init+0xb4>
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	689b      	ldr	r3, [r3, #8]
 8001f9a:	61bb      	str	r3, [r7, #24]
 8001f9c:	69fb      	ldr	r3, [r7, #28]
 8001f9e:	005b      	lsls	r3, r3, #1
 8001fa0:	2203      	movs	r2, #3
 8001fa2:	fa02 f303 	lsl.w	r3, r2, r3
 8001fa6:	43db      	mvns	r3, r3
 8001fa8:	69ba      	ldr	r2, [r7, #24]
 8001faa:	4013      	ands	r3, r2
 8001fac:	61bb      	str	r3, [r7, #24]
 8001fae:	683b      	ldr	r3, [r7, #0]
 8001fb0:	68da      	ldr	r2, [r3, #12]
 8001fb2:	69fb      	ldr	r3, [r7, #28]
 8001fb4:	005b      	lsls	r3, r3, #1
 8001fb6:	fa02 f303 	lsl.w	r3, r2, r3
 8001fba:	69ba      	ldr	r2, [r7, #24]
 8001fbc:	4313      	orrs	r3, r2
 8001fbe:	61bb      	str	r3, [r7, #24]
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	69ba      	ldr	r2, [r7, #24]
 8001fc4:	609a      	str	r2, [r3, #8]
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	685b      	ldr	r3, [r3, #4]
 8001fca:	61bb      	str	r3, [r7, #24]
 8001fcc:	2201      	movs	r2, #1
 8001fce:	69fb      	ldr	r3, [r7, #28]
 8001fd0:	fa02 f303 	lsl.w	r3, r2, r3
 8001fd4:	43db      	mvns	r3, r3
 8001fd6:	69ba      	ldr	r2, [r7, #24]
 8001fd8:	4013      	ands	r3, r2
 8001fda:	61bb      	str	r3, [r7, #24]
 8001fdc:	683b      	ldr	r3, [r7, #0]
 8001fde:	685b      	ldr	r3, [r3, #4]
 8001fe0:	091b      	lsrs	r3, r3, #4
 8001fe2:	f003 0201 	and.w	r2, r3, #1
 8001fe6:	69fb      	ldr	r3, [r7, #28]
 8001fe8:	fa02 f303 	lsl.w	r3, r2, r3
 8001fec:	69ba      	ldr	r2, [r7, #24]
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	61bb      	str	r3, [r7, #24]
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	69ba      	ldr	r2, [r7, #24]
 8001ff6:	605a      	str	r2, [r3, #4]
 8001ff8:	683b      	ldr	r3, [r7, #0]
 8001ffa:	685b      	ldr	r3, [r3, #4]
 8001ffc:	f003 0303 	and.w	r3, r3, #3
 8002000:	2b03      	cmp	r3, #3
 8002002:	d017      	beq.n	8002034 <HAL_GPIO_Init+0xf0>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	68db      	ldr	r3, [r3, #12]
 8002008:	61bb      	str	r3, [r7, #24]
 800200a:	69fb      	ldr	r3, [r7, #28]
 800200c:	005b      	lsls	r3, r3, #1
 800200e:	2203      	movs	r2, #3
 8002010:	fa02 f303 	lsl.w	r3, r2, r3
 8002014:	43db      	mvns	r3, r3
 8002016:	69ba      	ldr	r2, [r7, #24]
 8002018:	4013      	ands	r3, r2
 800201a:	61bb      	str	r3, [r7, #24]
 800201c:	683b      	ldr	r3, [r7, #0]
 800201e:	689a      	ldr	r2, [r3, #8]
 8002020:	69fb      	ldr	r3, [r7, #28]
 8002022:	005b      	lsls	r3, r3, #1
 8002024:	fa02 f303 	lsl.w	r3, r2, r3
 8002028:	69ba      	ldr	r2, [r7, #24]
 800202a:	4313      	orrs	r3, r2
 800202c:	61bb      	str	r3, [r7, #24]
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	69ba      	ldr	r2, [r7, #24]
 8002032:	60da      	str	r2, [r3, #12]
 8002034:	683b      	ldr	r3, [r7, #0]
 8002036:	685b      	ldr	r3, [r3, #4]
 8002038:	f003 0303 	and.w	r3, r3, #3
 800203c:	2b02      	cmp	r3, #2
 800203e:	d123      	bne.n	8002088 <HAL_GPIO_Init+0x144>
 8002040:	69fb      	ldr	r3, [r7, #28]
 8002042:	08da      	lsrs	r2, r3, #3
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	3208      	adds	r2, #8
 8002048:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800204c:	61bb      	str	r3, [r7, #24]
 800204e:	69fb      	ldr	r3, [r7, #28]
 8002050:	f003 0307 	and.w	r3, r3, #7
 8002054:	009b      	lsls	r3, r3, #2
 8002056:	220f      	movs	r2, #15
 8002058:	fa02 f303 	lsl.w	r3, r2, r3
 800205c:	43db      	mvns	r3, r3
 800205e:	69ba      	ldr	r2, [r7, #24]
 8002060:	4013      	ands	r3, r2
 8002062:	61bb      	str	r3, [r7, #24]
 8002064:	683b      	ldr	r3, [r7, #0]
 8002066:	691a      	ldr	r2, [r3, #16]
 8002068:	69fb      	ldr	r3, [r7, #28]
 800206a:	f003 0307 	and.w	r3, r3, #7
 800206e:	009b      	lsls	r3, r3, #2
 8002070:	fa02 f303 	lsl.w	r3, r2, r3
 8002074:	69ba      	ldr	r2, [r7, #24]
 8002076:	4313      	orrs	r3, r2
 8002078:	61bb      	str	r3, [r7, #24]
 800207a:	69fb      	ldr	r3, [r7, #28]
 800207c:	08da      	lsrs	r2, r3, #3
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	3208      	adds	r2, #8
 8002082:	69b9      	ldr	r1, [r7, #24]
 8002084:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	61bb      	str	r3, [r7, #24]
 800208e:	69fb      	ldr	r3, [r7, #28]
 8002090:	005b      	lsls	r3, r3, #1
 8002092:	2203      	movs	r2, #3
 8002094:	fa02 f303 	lsl.w	r3, r2, r3
 8002098:	43db      	mvns	r3, r3
 800209a:	69ba      	ldr	r2, [r7, #24]
 800209c:	4013      	ands	r3, r2
 800209e:	61bb      	str	r3, [r7, #24]
 80020a0:	683b      	ldr	r3, [r7, #0]
 80020a2:	685b      	ldr	r3, [r3, #4]
 80020a4:	f003 0203 	and.w	r2, r3, #3
 80020a8:	69fb      	ldr	r3, [r7, #28]
 80020aa:	005b      	lsls	r3, r3, #1
 80020ac:	fa02 f303 	lsl.w	r3, r2, r3
 80020b0:	69ba      	ldr	r2, [r7, #24]
 80020b2:	4313      	orrs	r3, r2
 80020b4:	61bb      	str	r3, [r7, #24]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	69ba      	ldr	r2, [r7, #24]
 80020ba:	601a      	str	r2, [r3, #0]
 80020bc:	683b      	ldr	r3, [r7, #0]
 80020be:	685b      	ldr	r3, [r3, #4]
 80020c0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	f000 80b4 	beq.w	8002232 <HAL_GPIO_Init+0x2ee>
 80020ca:	2300      	movs	r3, #0
 80020cc:	60fb      	str	r3, [r7, #12]
 80020ce:	4b60      	ldr	r3, [pc, #384]	; (8002250 <HAL_GPIO_Init+0x30c>)
 80020d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020d2:	4a5f      	ldr	r2, [pc, #380]	; (8002250 <HAL_GPIO_Init+0x30c>)
 80020d4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80020d8:	6453      	str	r3, [r2, #68]	; 0x44
 80020da:	4b5d      	ldr	r3, [pc, #372]	; (8002250 <HAL_GPIO_Init+0x30c>)
 80020dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020de:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80020e2:	60fb      	str	r3, [r7, #12]
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	4a5b      	ldr	r2, [pc, #364]	; (8002254 <HAL_GPIO_Init+0x310>)
 80020e8:	69fb      	ldr	r3, [r7, #28]
 80020ea:	089b      	lsrs	r3, r3, #2
 80020ec:	3302      	adds	r3, #2
 80020ee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80020f2:	61bb      	str	r3, [r7, #24]
 80020f4:	69fb      	ldr	r3, [r7, #28]
 80020f6:	f003 0303 	and.w	r3, r3, #3
 80020fa:	009b      	lsls	r3, r3, #2
 80020fc:	220f      	movs	r2, #15
 80020fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002102:	43db      	mvns	r3, r3
 8002104:	69ba      	ldr	r2, [r7, #24]
 8002106:	4013      	ands	r3, r2
 8002108:	61bb      	str	r3, [r7, #24]
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	4a52      	ldr	r2, [pc, #328]	; (8002258 <HAL_GPIO_Init+0x314>)
 800210e:	4293      	cmp	r3, r2
 8002110:	d02b      	beq.n	800216a <HAL_GPIO_Init+0x226>
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	4a51      	ldr	r2, [pc, #324]	; (800225c <HAL_GPIO_Init+0x318>)
 8002116:	4293      	cmp	r3, r2
 8002118:	d025      	beq.n	8002166 <HAL_GPIO_Init+0x222>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	4a50      	ldr	r2, [pc, #320]	; (8002260 <HAL_GPIO_Init+0x31c>)
 800211e:	4293      	cmp	r3, r2
 8002120:	d01f      	beq.n	8002162 <HAL_GPIO_Init+0x21e>
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	4a4f      	ldr	r2, [pc, #316]	; (8002264 <HAL_GPIO_Init+0x320>)
 8002126:	4293      	cmp	r3, r2
 8002128:	d019      	beq.n	800215e <HAL_GPIO_Init+0x21a>
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	4a4e      	ldr	r2, [pc, #312]	; (8002268 <HAL_GPIO_Init+0x324>)
 800212e:	4293      	cmp	r3, r2
 8002130:	d013      	beq.n	800215a <HAL_GPIO_Init+0x216>
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	4a4d      	ldr	r2, [pc, #308]	; (800226c <HAL_GPIO_Init+0x328>)
 8002136:	4293      	cmp	r3, r2
 8002138:	d00d      	beq.n	8002156 <HAL_GPIO_Init+0x212>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	4a4c      	ldr	r2, [pc, #304]	; (8002270 <HAL_GPIO_Init+0x32c>)
 800213e:	4293      	cmp	r3, r2
 8002140:	d007      	beq.n	8002152 <HAL_GPIO_Init+0x20e>
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	4a4b      	ldr	r2, [pc, #300]	; (8002274 <HAL_GPIO_Init+0x330>)
 8002146:	4293      	cmp	r3, r2
 8002148:	d101      	bne.n	800214e <HAL_GPIO_Init+0x20a>
 800214a:	2307      	movs	r3, #7
 800214c:	e00e      	b.n	800216c <HAL_GPIO_Init+0x228>
 800214e:	2308      	movs	r3, #8
 8002150:	e00c      	b.n	800216c <HAL_GPIO_Init+0x228>
 8002152:	2306      	movs	r3, #6
 8002154:	e00a      	b.n	800216c <HAL_GPIO_Init+0x228>
 8002156:	2305      	movs	r3, #5
 8002158:	e008      	b.n	800216c <HAL_GPIO_Init+0x228>
 800215a:	2304      	movs	r3, #4
 800215c:	e006      	b.n	800216c <HAL_GPIO_Init+0x228>
 800215e:	2303      	movs	r3, #3
 8002160:	e004      	b.n	800216c <HAL_GPIO_Init+0x228>
 8002162:	2302      	movs	r3, #2
 8002164:	e002      	b.n	800216c <HAL_GPIO_Init+0x228>
 8002166:	2301      	movs	r3, #1
 8002168:	e000      	b.n	800216c <HAL_GPIO_Init+0x228>
 800216a:	2300      	movs	r3, #0
 800216c:	69fa      	ldr	r2, [r7, #28]
 800216e:	f002 0203 	and.w	r2, r2, #3
 8002172:	0092      	lsls	r2, r2, #2
 8002174:	4093      	lsls	r3, r2
 8002176:	69ba      	ldr	r2, [r7, #24]
 8002178:	4313      	orrs	r3, r2
 800217a:	61bb      	str	r3, [r7, #24]
 800217c:	4935      	ldr	r1, [pc, #212]	; (8002254 <HAL_GPIO_Init+0x310>)
 800217e:	69fb      	ldr	r3, [r7, #28]
 8002180:	089b      	lsrs	r3, r3, #2
 8002182:	3302      	adds	r3, #2
 8002184:	69ba      	ldr	r2, [r7, #24]
 8002186:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800218a:	4b3b      	ldr	r3, [pc, #236]	; (8002278 <HAL_GPIO_Init+0x334>)
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	61bb      	str	r3, [r7, #24]
 8002190:	693b      	ldr	r3, [r7, #16]
 8002192:	43db      	mvns	r3, r3
 8002194:	69ba      	ldr	r2, [r7, #24]
 8002196:	4013      	ands	r3, r2
 8002198:	61bb      	str	r3, [r7, #24]
 800219a:	683b      	ldr	r3, [r7, #0]
 800219c:	685b      	ldr	r3, [r3, #4]
 800219e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80021a2:	2b00      	cmp	r3, #0
 80021a4:	d003      	beq.n	80021ae <HAL_GPIO_Init+0x26a>
 80021a6:	69ba      	ldr	r2, [r7, #24]
 80021a8:	693b      	ldr	r3, [r7, #16]
 80021aa:	4313      	orrs	r3, r2
 80021ac:	61bb      	str	r3, [r7, #24]
 80021ae:	4a32      	ldr	r2, [pc, #200]	; (8002278 <HAL_GPIO_Init+0x334>)
 80021b0:	69bb      	ldr	r3, [r7, #24]
 80021b2:	6013      	str	r3, [r2, #0]
 80021b4:	4b30      	ldr	r3, [pc, #192]	; (8002278 <HAL_GPIO_Init+0x334>)
 80021b6:	685b      	ldr	r3, [r3, #4]
 80021b8:	61bb      	str	r3, [r7, #24]
 80021ba:	693b      	ldr	r3, [r7, #16]
 80021bc:	43db      	mvns	r3, r3
 80021be:	69ba      	ldr	r2, [r7, #24]
 80021c0:	4013      	ands	r3, r2
 80021c2:	61bb      	str	r3, [r7, #24]
 80021c4:	683b      	ldr	r3, [r7, #0]
 80021c6:	685b      	ldr	r3, [r3, #4]
 80021c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d003      	beq.n	80021d8 <HAL_GPIO_Init+0x294>
 80021d0:	69ba      	ldr	r2, [r7, #24]
 80021d2:	693b      	ldr	r3, [r7, #16]
 80021d4:	4313      	orrs	r3, r2
 80021d6:	61bb      	str	r3, [r7, #24]
 80021d8:	4a27      	ldr	r2, [pc, #156]	; (8002278 <HAL_GPIO_Init+0x334>)
 80021da:	69bb      	ldr	r3, [r7, #24]
 80021dc:	6053      	str	r3, [r2, #4]
 80021de:	4b26      	ldr	r3, [pc, #152]	; (8002278 <HAL_GPIO_Init+0x334>)
 80021e0:	689b      	ldr	r3, [r3, #8]
 80021e2:	61bb      	str	r3, [r7, #24]
 80021e4:	693b      	ldr	r3, [r7, #16]
 80021e6:	43db      	mvns	r3, r3
 80021e8:	69ba      	ldr	r2, [r7, #24]
 80021ea:	4013      	ands	r3, r2
 80021ec:	61bb      	str	r3, [r7, #24]
 80021ee:	683b      	ldr	r3, [r7, #0]
 80021f0:	685b      	ldr	r3, [r3, #4]
 80021f2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d003      	beq.n	8002202 <HAL_GPIO_Init+0x2be>
 80021fa:	69ba      	ldr	r2, [r7, #24]
 80021fc:	693b      	ldr	r3, [r7, #16]
 80021fe:	4313      	orrs	r3, r2
 8002200:	61bb      	str	r3, [r7, #24]
 8002202:	4a1d      	ldr	r2, [pc, #116]	; (8002278 <HAL_GPIO_Init+0x334>)
 8002204:	69bb      	ldr	r3, [r7, #24]
 8002206:	6093      	str	r3, [r2, #8]
 8002208:	4b1b      	ldr	r3, [pc, #108]	; (8002278 <HAL_GPIO_Init+0x334>)
 800220a:	68db      	ldr	r3, [r3, #12]
 800220c:	61bb      	str	r3, [r7, #24]
 800220e:	693b      	ldr	r3, [r7, #16]
 8002210:	43db      	mvns	r3, r3
 8002212:	69ba      	ldr	r2, [r7, #24]
 8002214:	4013      	ands	r3, r2
 8002216:	61bb      	str	r3, [r7, #24]
 8002218:	683b      	ldr	r3, [r7, #0]
 800221a:	685b      	ldr	r3, [r3, #4]
 800221c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002220:	2b00      	cmp	r3, #0
 8002222:	d003      	beq.n	800222c <HAL_GPIO_Init+0x2e8>
 8002224:	69ba      	ldr	r2, [r7, #24]
 8002226:	693b      	ldr	r3, [r7, #16]
 8002228:	4313      	orrs	r3, r2
 800222a:	61bb      	str	r3, [r7, #24]
 800222c:	4a12      	ldr	r2, [pc, #72]	; (8002278 <HAL_GPIO_Init+0x334>)
 800222e:	69bb      	ldr	r3, [r7, #24]
 8002230:	60d3      	str	r3, [r2, #12]
 8002232:	69fb      	ldr	r3, [r7, #28]
 8002234:	3301      	adds	r3, #1
 8002236:	61fb      	str	r3, [r7, #28]
 8002238:	69fb      	ldr	r3, [r7, #28]
 800223a:	2b0f      	cmp	r3, #15
 800223c:	f67f ae90 	bls.w	8001f60 <HAL_GPIO_Init+0x1c>
 8002240:	bf00      	nop
 8002242:	bf00      	nop
 8002244:	3724      	adds	r7, #36	; 0x24
 8002246:	46bd      	mov	sp, r7
 8002248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224c:	4770      	bx	lr
 800224e:	bf00      	nop
 8002250:	40023800 	.word	0x40023800
 8002254:	40013800 	.word	0x40013800
 8002258:	40020000 	.word	0x40020000
 800225c:	40020400 	.word	0x40020400
 8002260:	40020800 	.word	0x40020800
 8002264:	40020c00 	.word	0x40020c00
 8002268:	40021000 	.word	0x40021000
 800226c:	40021400 	.word	0x40021400
 8002270:	40021800 	.word	0x40021800
 8002274:	40021c00 	.word	0x40021c00
 8002278:	40013c00 	.word	0x40013c00

0800227c <HAL_GPIO_WritePin>:
 800227c:	b480      	push	{r7}
 800227e:	b083      	sub	sp, #12
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
 8002284:	460b      	mov	r3, r1
 8002286:	807b      	strh	r3, [r7, #2]
 8002288:	4613      	mov	r3, r2
 800228a:	707b      	strb	r3, [r7, #1]
 800228c:	787b      	ldrb	r3, [r7, #1]
 800228e:	2b00      	cmp	r3, #0
 8002290:	d003      	beq.n	800229a <HAL_GPIO_WritePin+0x1e>
 8002292:	887a      	ldrh	r2, [r7, #2]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	619a      	str	r2, [r3, #24]
 8002298:	e003      	b.n	80022a2 <HAL_GPIO_WritePin+0x26>
 800229a:	887b      	ldrh	r3, [r7, #2]
 800229c:	041a      	lsls	r2, r3, #16
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	619a      	str	r2, [r3, #24]
 80022a2:	bf00      	nop
 80022a4:	370c      	adds	r7, #12
 80022a6:	46bd      	mov	sp, r7
 80022a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ac:	4770      	bx	lr
	...

080022b0 <HAL_I2C_Init>:
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b084      	sub	sp, #16
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d101      	bne.n	80022c2 <HAL_I2C_Init+0x12>
 80022be:	2301      	movs	r3, #1
 80022c0:	e12b      	b.n	800251a <HAL_I2C_Init+0x26a>
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80022c8:	b2db      	uxtb	r3, r3
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d106      	bne.n	80022dc <HAL_I2C_Init+0x2c>
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	2200      	movs	r2, #0
 80022d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022d6:	6878      	ldr	r0, [r7, #4]
 80022d8:	f7ff fb02 	bl	80018e0 <HAL_I2C_MspInit>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	2224      	movs	r2, #36	; 0x24
 80022e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	681a      	ldr	r2, [r3, #0]
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	f022 0201 	bic.w	r2, r2, #1
 80022f2:	601a      	str	r2, [r3, #0]
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	681a      	ldr	r2, [r3, #0]
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002302:	601a      	str	r2, [r3, #0]
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	681a      	ldr	r2, [r3, #0]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002312:	601a      	str	r2, [r3, #0]
 8002314:	f002 fb80 	bl	8004a18 <HAL_RCC_GetPCLK1Freq>
 8002318:	60f8      	str	r0, [r7, #12]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	685b      	ldr	r3, [r3, #4]
 800231e:	4a81      	ldr	r2, [pc, #516]	; (8002524 <HAL_I2C_Init+0x274>)
 8002320:	4293      	cmp	r3, r2
 8002322:	d807      	bhi.n	8002334 <HAL_I2C_Init+0x84>
 8002324:	68fb      	ldr	r3, [r7, #12]
 8002326:	4a80      	ldr	r2, [pc, #512]	; (8002528 <HAL_I2C_Init+0x278>)
 8002328:	4293      	cmp	r3, r2
 800232a:	bf94      	ite	ls
 800232c:	2301      	movls	r3, #1
 800232e:	2300      	movhi	r3, #0
 8002330:	b2db      	uxtb	r3, r3
 8002332:	e006      	b.n	8002342 <HAL_I2C_Init+0x92>
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	4a7d      	ldr	r2, [pc, #500]	; (800252c <HAL_I2C_Init+0x27c>)
 8002338:	4293      	cmp	r3, r2
 800233a:	bf94      	ite	ls
 800233c:	2301      	movls	r3, #1
 800233e:	2300      	movhi	r3, #0
 8002340:	b2db      	uxtb	r3, r3
 8002342:	2b00      	cmp	r3, #0
 8002344:	d001      	beq.n	800234a <HAL_I2C_Init+0x9a>
 8002346:	2301      	movs	r3, #1
 8002348:	e0e7      	b.n	800251a <HAL_I2C_Init+0x26a>
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	4a78      	ldr	r2, [pc, #480]	; (8002530 <HAL_I2C_Init+0x280>)
 800234e:	fba2 2303 	umull	r2, r3, r2, r3
 8002352:	0c9b      	lsrs	r3, r3, #18
 8002354:	60bb      	str	r3, [r7, #8]
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	685b      	ldr	r3, [r3, #4]
 800235c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	68ba      	ldr	r2, [r7, #8]
 8002366:	430a      	orrs	r2, r1
 8002368:	605a      	str	r2, [r3, #4]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	6a1b      	ldr	r3, [r3, #32]
 8002370:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	685b      	ldr	r3, [r3, #4]
 8002378:	4a6a      	ldr	r2, [pc, #424]	; (8002524 <HAL_I2C_Init+0x274>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d802      	bhi.n	8002384 <HAL_I2C_Init+0xd4>
 800237e:	68bb      	ldr	r3, [r7, #8]
 8002380:	3301      	adds	r3, #1
 8002382:	e009      	b.n	8002398 <HAL_I2C_Init+0xe8>
 8002384:	68bb      	ldr	r3, [r7, #8]
 8002386:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800238a:	fb02 f303 	mul.w	r3, r2, r3
 800238e:	4a69      	ldr	r2, [pc, #420]	; (8002534 <HAL_I2C_Init+0x284>)
 8002390:	fba2 2303 	umull	r2, r3, r2, r3
 8002394:	099b      	lsrs	r3, r3, #6
 8002396:	3301      	adds	r3, #1
 8002398:	687a      	ldr	r2, [r7, #4]
 800239a:	6812      	ldr	r2, [r2, #0]
 800239c:	430b      	orrs	r3, r1
 800239e:	6213      	str	r3, [r2, #32]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	69db      	ldr	r3, [r3, #28]
 80023a6:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80023aa:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	685b      	ldr	r3, [r3, #4]
 80023b2:	495c      	ldr	r1, [pc, #368]	; (8002524 <HAL_I2C_Init+0x274>)
 80023b4:	428b      	cmp	r3, r1
 80023b6:	d819      	bhi.n	80023ec <HAL_I2C_Init+0x13c>
 80023b8:	68fb      	ldr	r3, [r7, #12]
 80023ba:	1e59      	subs	r1, r3, #1
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	685b      	ldr	r3, [r3, #4]
 80023c0:	005b      	lsls	r3, r3, #1
 80023c2:	fbb1 f3f3 	udiv	r3, r1, r3
 80023c6:	1c59      	adds	r1, r3, #1
 80023c8:	f640 73fc 	movw	r3, #4092	; 0xffc
 80023cc:	400b      	ands	r3, r1
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d00a      	beq.n	80023e8 <HAL_I2C_Init+0x138>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	1e59      	subs	r1, r3, #1
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	685b      	ldr	r3, [r3, #4]
 80023da:	005b      	lsls	r3, r3, #1
 80023dc:	fbb1 f3f3 	udiv	r3, r1, r3
 80023e0:	3301      	adds	r3, #1
 80023e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80023e6:	e051      	b.n	800248c <HAL_I2C_Init+0x1dc>
 80023e8:	2304      	movs	r3, #4
 80023ea:	e04f      	b.n	800248c <HAL_I2C_Init+0x1dc>
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	689b      	ldr	r3, [r3, #8]
 80023f0:	2b00      	cmp	r3, #0
 80023f2:	d111      	bne.n	8002418 <HAL_I2C_Init+0x168>
 80023f4:	68fb      	ldr	r3, [r7, #12]
 80023f6:	1e58      	subs	r0, r3, #1
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	6859      	ldr	r1, [r3, #4]
 80023fc:	460b      	mov	r3, r1
 80023fe:	005b      	lsls	r3, r3, #1
 8002400:	440b      	add	r3, r1
 8002402:	fbb0 f3f3 	udiv	r3, r0, r3
 8002406:	3301      	adds	r3, #1
 8002408:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800240c:	2b00      	cmp	r3, #0
 800240e:	bf0c      	ite	eq
 8002410:	2301      	moveq	r3, #1
 8002412:	2300      	movne	r3, #0
 8002414:	b2db      	uxtb	r3, r3
 8002416:	e012      	b.n	800243e <HAL_I2C_Init+0x18e>
 8002418:	68fb      	ldr	r3, [r7, #12]
 800241a:	1e58      	subs	r0, r3, #1
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6859      	ldr	r1, [r3, #4]
 8002420:	460b      	mov	r3, r1
 8002422:	009b      	lsls	r3, r3, #2
 8002424:	440b      	add	r3, r1
 8002426:	0099      	lsls	r1, r3, #2
 8002428:	440b      	add	r3, r1
 800242a:	fbb0 f3f3 	udiv	r3, r0, r3
 800242e:	3301      	adds	r3, #1
 8002430:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002434:	2b00      	cmp	r3, #0
 8002436:	bf0c      	ite	eq
 8002438:	2301      	moveq	r3, #1
 800243a:	2300      	movne	r3, #0
 800243c:	b2db      	uxtb	r3, r3
 800243e:	2b00      	cmp	r3, #0
 8002440:	d001      	beq.n	8002446 <HAL_I2C_Init+0x196>
 8002442:	2301      	movs	r3, #1
 8002444:	e022      	b.n	800248c <HAL_I2C_Init+0x1dc>
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	689b      	ldr	r3, [r3, #8]
 800244a:	2b00      	cmp	r3, #0
 800244c:	d10e      	bne.n	800246c <HAL_I2C_Init+0x1bc>
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	1e58      	subs	r0, r3, #1
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	6859      	ldr	r1, [r3, #4]
 8002456:	460b      	mov	r3, r1
 8002458:	005b      	lsls	r3, r3, #1
 800245a:	440b      	add	r3, r1
 800245c:	fbb0 f3f3 	udiv	r3, r0, r3
 8002460:	3301      	adds	r3, #1
 8002462:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002466:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800246a:	e00f      	b.n	800248c <HAL_I2C_Init+0x1dc>
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	1e58      	subs	r0, r3, #1
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	6859      	ldr	r1, [r3, #4]
 8002474:	460b      	mov	r3, r1
 8002476:	009b      	lsls	r3, r3, #2
 8002478:	440b      	add	r3, r1
 800247a:	0099      	lsls	r1, r3, #2
 800247c:	440b      	add	r3, r1
 800247e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002482:	3301      	adds	r3, #1
 8002484:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002488:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800248c:	6879      	ldr	r1, [r7, #4]
 800248e:	6809      	ldr	r1, [r1, #0]
 8002490:	4313      	orrs	r3, r2
 8002492:	61cb      	str	r3, [r1, #28]
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	69da      	ldr	r2, [r3, #28]
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	6a1b      	ldr	r3, [r3, #32]
 80024a6:	431a      	orrs	r2, r3
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	430a      	orrs	r2, r1
 80024ae:	601a      	str	r2, [r3, #0]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	689b      	ldr	r3, [r3, #8]
 80024b6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80024ba:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80024be:	687a      	ldr	r2, [r7, #4]
 80024c0:	6911      	ldr	r1, [r2, #16]
 80024c2:	687a      	ldr	r2, [r7, #4]
 80024c4:	68d2      	ldr	r2, [r2, #12]
 80024c6:	4311      	orrs	r1, r2
 80024c8:	687a      	ldr	r2, [r7, #4]
 80024ca:	6812      	ldr	r2, [r2, #0]
 80024cc:	430b      	orrs	r3, r1
 80024ce:	6093      	str	r3, [r2, #8]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	68db      	ldr	r3, [r3, #12]
 80024d6:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	695a      	ldr	r2, [r3, #20]
 80024de:	687b      	ldr	r3, [r7, #4]
 80024e0:	699b      	ldr	r3, [r3, #24]
 80024e2:	431a      	orrs	r2, r3
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	430a      	orrs	r2, r1
 80024ea:	60da      	str	r2, [r3, #12]
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	681a      	ldr	r2, [r3, #0]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f042 0201 	orr.w	r2, r2, #1
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	2200      	movs	r2, #0
 8002500:	641a      	str	r2, [r3, #64]	; 0x40
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	2220      	movs	r2, #32
 8002506:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	2200      	movs	r2, #0
 800250e:	631a      	str	r2, [r3, #48]	; 0x30
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	2200      	movs	r2, #0
 8002514:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002518:	2300      	movs	r3, #0
 800251a:	4618      	mov	r0, r3
 800251c:	3710      	adds	r7, #16
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}
 8002522:	bf00      	nop
 8002524:	000186a0 	.word	0x000186a0
 8002528:	001e847f 	.word	0x001e847f
 800252c:	003d08ff 	.word	0x003d08ff
 8002530:	431bde83 	.word	0x431bde83
 8002534:	10624dd3 	.word	0x10624dd3

08002538 <HAL_I2S_Init>:
 8002538:	b580      	push	{r7, lr}
 800253a:	b088      	sub	sp, #32
 800253c:	af00      	add	r7, sp, #0
 800253e:	6078      	str	r0, [r7, #4]
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	2b00      	cmp	r3, #0
 8002544:	d101      	bne.n	800254a <HAL_I2S_Init+0x12>
 8002546:	2301      	movs	r3, #1
 8002548:	e128      	b.n	800279c <HAL_I2S_Init+0x264>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002550:	b2db      	uxtb	r3, r3
 8002552:	2b00      	cmp	r3, #0
 8002554:	d109      	bne.n	800256a <HAL_I2S_Init+0x32>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	2200      	movs	r2, #0
 800255a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	4a90      	ldr	r2, [pc, #576]	; (80027a4 <HAL_I2S_Init+0x26c>)
 8002562:	635a      	str	r2, [r3, #52]	; 0x34
 8002564:	6878      	ldr	r0, [r7, #4]
 8002566:	f7ff fa03 	bl	8001970 <HAL_I2S_MspInit>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	2202      	movs	r2, #2
 800256e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	69db      	ldr	r3, [r3, #28]
 8002578:	687a      	ldr	r2, [r7, #4]
 800257a:	6812      	ldr	r2, [r2, #0]
 800257c:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 8002580:	f023 030f 	bic.w	r3, r3, #15
 8002584:	61d3      	str	r3, [r2, #28]
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	2202      	movs	r2, #2
 800258c:	621a      	str	r2, [r3, #32]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	695b      	ldr	r3, [r3, #20]
 8002592:	2b02      	cmp	r3, #2
 8002594:	d060      	beq.n	8002658 <HAL_I2S_Init+0x120>
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	68db      	ldr	r3, [r3, #12]
 800259a:	2b00      	cmp	r3, #0
 800259c:	d102      	bne.n	80025a4 <HAL_I2S_Init+0x6c>
 800259e:	2310      	movs	r3, #16
 80025a0:	617b      	str	r3, [r7, #20]
 80025a2:	e001      	b.n	80025a8 <HAL_I2S_Init+0x70>
 80025a4:	2320      	movs	r3, #32
 80025a6:	617b      	str	r3, [r7, #20]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	689b      	ldr	r3, [r3, #8]
 80025ac:	2b20      	cmp	r3, #32
 80025ae:	d802      	bhi.n	80025b6 <HAL_I2S_Init+0x7e>
 80025b0:	697b      	ldr	r3, [r7, #20]
 80025b2:	005b      	lsls	r3, r3, #1
 80025b4:	617b      	str	r3, [r7, #20]
 80025b6:	2001      	movs	r0, #1
 80025b8:	f002 fb24 	bl	8004c04 <HAL_RCCEx_GetPeriphCLKFreq>
 80025bc:	60f8      	str	r0, [r7, #12]
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	691b      	ldr	r3, [r3, #16]
 80025c2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80025c6:	d125      	bne.n	8002614 <HAL_I2S_Init+0xdc>
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	68db      	ldr	r3, [r3, #12]
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	d010      	beq.n	80025f2 <HAL_I2S_Init+0xba>
 80025d0:	697b      	ldr	r3, [r7, #20]
 80025d2:	009b      	lsls	r3, r3, #2
 80025d4:	68fa      	ldr	r2, [r7, #12]
 80025d6:	fbb2 f2f3 	udiv	r2, r2, r3
 80025da:	4613      	mov	r3, r2
 80025dc:	009b      	lsls	r3, r3, #2
 80025de:	4413      	add	r3, r2
 80025e0:	005b      	lsls	r3, r3, #1
 80025e2:	461a      	mov	r2, r3
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	695b      	ldr	r3, [r3, #20]
 80025e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80025ec:	3305      	adds	r3, #5
 80025ee:	613b      	str	r3, [r7, #16]
 80025f0:	e01f      	b.n	8002632 <HAL_I2S_Init+0xfa>
 80025f2:	697b      	ldr	r3, [r7, #20]
 80025f4:	00db      	lsls	r3, r3, #3
 80025f6:	68fa      	ldr	r2, [r7, #12]
 80025f8:	fbb2 f2f3 	udiv	r2, r2, r3
 80025fc:	4613      	mov	r3, r2
 80025fe:	009b      	lsls	r3, r3, #2
 8002600:	4413      	add	r3, r2
 8002602:	005b      	lsls	r3, r3, #1
 8002604:	461a      	mov	r2, r3
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	695b      	ldr	r3, [r3, #20]
 800260a:	fbb2 f3f3 	udiv	r3, r2, r3
 800260e:	3305      	adds	r3, #5
 8002610:	613b      	str	r3, [r7, #16]
 8002612:	e00e      	b.n	8002632 <HAL_I2S_Init+0xfa>
 8002614:	68fa      	ldr	r2, [r7, #12]
 8002616:	697b      	ldr	r3, [r7, #20]
 8002618:	fbb2 f2f3 	udiv	r2, r2, r3
 800261c:	4613      	mov	r3, r2
 800261e:	009b      	lsls	r3, r3, #2
 8002620:	4413      	add	r3, r2
 8002622:	005b      	lsls	r3, r3, #1
 8002624:	461a      	mov	r2, r3
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	695b      	ldr	r3, [r3, #20]
 800262a:	fbb2 f3f3 	udiv	r3, r2, r3
 800262e:	3305      	adds	r3, #5
 8002630:	613b      	str	r3, [r7, #16]
 8002632:	693b      	ldr	r3, [r7, #16]
 8002634:	4a5c      	ldr	r2, [pc, #368]	; (80027a8 <HAL_I2S_Init+0x270>)
 8002636:	fba2 2303 	umull	r2, r3, r2, r3
 800263a:	08db      	lsrs	r3, r3, #3
 800263c:	613b      	str	r3, [r7, #16]
 800263e:	693b      	ldr	r3, [r7, #16]
 8002640:	f003 0301 	and.w	r3, r3, #1
 8002644:	61bb      	str	r3, [r7, #24]
 8002646:	693a      	ldr	r2, [r7, #16]
 8002648:	69bb      	ldr	r3, [r7, #24]
 800264a:	1ad3      	subs	r3, r2, r3
 800264c:	085b      	lsrs	r3, r3, #1
 800264e:	61fb      	str	r3, [r7, #28]
 8002650:	69bb      	ldr	r3, [r7, #24]
 8002652:	021b      	lsls	r3, r3, #8
 8002654:	61bb      	str	r3, [r7, #24]
 8002656:	e003      	b.n	8002660 <HAL_I2S_Init+0x128>
 8002658:	2302      	movs	r3, #2
 800265a:	61fb      	str	r3, [r7, #28]
 800265c:	2300      	movs	r3, #0
 800265e:	61bb      	str	r3, [r7, #24]
 8002660:	69fb      	ldr	r3, [r7, #28]
 8002662:	2b01      	cmp	r3, #1
 8002664:	d902      	bls.n	800266c <HAL_I2S_Init+0x134>
 8002666:	69fb      	ldr	r3, [r7, #28]
 8002668:	2bff      	cmp	r3, #255	; 0xff
 800266a:	d907      	bls.n	800267c <HAL_I2S_Init+0x144>
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002670:	f043 0210 	orr.w	r2, r3, #16
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	645a      	str	r2, [r3, #68]	; 0x44
 8002678:	2301      	movs	r3, #1
 800267a:	e08f      	b.n	800279c <HAL_I2S_Init+0x264>
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	691a      	ldr	r2, [r3, #16]
 8002680:	69bb      	ldr	r3, [r7, #24]
 8002682:	ea42 0103 	orr.w	r1, r2, r3
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	69fa      	ldr	r2, [r7, #28]
 800268c:	430a      	orrs	r2, r1
 800268e:	621a      	str	r2, [r3, #32]
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	681b      	ldr	r3, [r3, #0]
 8002694:	69db      	ldr	r3, [r3, #28]
 8002696:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 800269a:	f023 030f 	bic.w	r3, r3, #15
 800269e:	687a      	ldr	r2, [r7, #4]
 80026a0:	6851      	ldr	r1, [r2, #4]
 80026a2:	687a      	ldr	r2, [r7, #4]
 80026a4:	6892      	ldr	r2, [r2, #8]
 80026a6:	4311      	orrs	r1, r2
 80026a8:	687a      	ldr	r2, [r7, #4]
 80026aa:	68d2      	ldr	r2, [r2, #12]
 80026ac:	4311      	orrs	r1, r2
 80026ae:	687a      	ldr	r2, [r7, #4]
 80026b0:	6992      	ldr	r2, [r2, #24]
 80026b2:	430a      	orrs	r2, r1
 80026b4:	431a      	orrs	r2, r3
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80026be:	61da      	str	r2, [r3, #28]
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	6a1b      	ldr	r3, [r3, #32]
 80026c4:	2b01      	cmp	r3, #1
 80026c6:	d161      	bne.n	800278c <HAL_I2S_Init+0x254>
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	4a38      	ldr	r2, [pc, #224]	; (80027ac <HAL_I2S_Init+0x274>)
 80026cc:	635a      	str	r2, [r3, #52]	; 0x34
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	4a37      	ldr	r2, [pc, #220]	; (80027b0 <HAL_I2S_Init+0x278>)
 80026d4:	4293      	cmp	r3, r2
 80026d6:	d101      	bne.n	80026dc <HAL_I2S_Init+0x1a4>
 80026d8:	4b36      	ldr	r3, [pc, #216]	; (80027b4 <HAL_I2S_Init+0x27c>)
 80026da:	e001      	b.n	80026e0 <HAL_I2S_Init+0x1a8>
 80026dc:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80026e0:	69db      	ldr	r3, [r3, #28]
 80026e2:	687a      	ldr	r2, [r7, #4]
 80026e4:	6812      	ldr	r2, [r2, #0]
 80026e6:	4932      	ldr	r1, [pc, #200]	; (80027b0 <HAL_I2S_Init+0x278>)
 80026e8:	428a      	cmp	r2, r1
 80026ea:	d101      	bne.n	80026f0 <HAL_I2S_Init+0x1b8>
 80026ec:	4a31      	ldr	r2, [pc, #196]	; (80027b4 <HAL_I2S_Init+0x27c>)
 80026ee:	e001      	b.n	80026f4 <HAL_I2S_Init+0x1bc>
 80026f0:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 80026f4:	f423 637b 	bic.w	r3, r3, #4016	; 0xfb0
 80026f8:	f023 030f 	bic.w	r3, r3, #15
 80026fc:	61d3      	str	r3, [r2, #28]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	4a2b      	ldr	r2, [pc, #172]	; (80027b0 <HAL_I2S_Init+0x278>)
 8002704:	4293      	cmp	r3, r2
 8002706:	d101      	bne.n	800270c <HAL_I2S_Init+0x1d4>
 8002708:	4b2a      	ldr	r3, [pc, #168]	; (80027b4 <HAL_I2S_Init+0x27c>)
 800270a:	e001      	b.n	8002710 <HAL_I2S_Init+0x1d8>
 800270c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002710:	2202      	movs	r2, #2
 8002712:	621a      	str	r2, [r3, #32]
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	681b      	ldr	r3, [r3, #0]
 8002718:	4a25      	ldr	r2, [pc, #148]	; (80027b0 <HAL_I2S_Init+0x278>)
 800271a:	4293      	cmp	r3, r2
 800271c:	d101      	bne.n	8002722 <HAL_I2S_Init+0x1ea>
 800271e:	4b25      	ldr	r3, [pc, #148]	; (80027b4 <HAL_I2S_Init+0x27c>)
 8002720:	e001      	b.n	8002726 <HAL_I2S_Init+0x1ee>
 8002722:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002726:	69db      	ldr	r3, [r3, #28]
 8002728:	817b      	strh	r3, [r7, #10]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	685b      	ldr	r3, [r3, #4]
 800272e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002732:	d003      	beq.n	800273c <HAL_I2S_Init+0x204>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	685b      	ldr	r3, [r3, #4]
 8002738:	2b00      	cmp	r3, #0
 800273a:	d103      	bne.n	8002744 <HAL_I2S_Init+0x20c>
 800273c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002740:	613b      	str	r3, [r7, #16]
 8002742:	e001      	b.n	8002748 <HAL_I2S_Init+0x210>
 8002744:	2300      	movs	r3, #0
 8002746:	613b      	str	r3, [r7, #16]
 8002748:	693b      	ldr	r3, [r7, #16]
 800274a:	b29a      	uxth	r2, r3
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	689b      	ldr	r3, [r3, #8]
 8002750:	b29b      	uxth	r3, r3
 8002752:	4313      	orrs	r3, r2
 8002754:	b29a      	uxth	r2, r3
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	68db      	ldr	r3, [r3, #12]
 800275a:	b29b      	uxth	r3, r3
 800275c:	4313      	orrs	r3, r2
 800275e:	b29a      	uxth	r2, r3
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	699b      	ldr	r3, [r3, #24]
 8002764:	b29b      	uxth	r3, r3
 8002766:	4313      	orrs	r3, r2
 8002768:	b29a      	uxth	r2, r3
 800276a:	897b      	ldrh	r3, [r7, #10]
 800276c:	4313      	orrs	r3, r2
 800276e:	b29b      	uxth	r3, r3
 8002770:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002774:	817b      	strh	r3, [r7, #10]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	4a0d      	ldr	r2, [pc, #52]	; (80027b0 <HAL_I2S_Init+0x278>)
 800277c:	4293      	cmp	r3, r2
 800277e:	d101      	bne.n	8002784 <HAL_I2S_Init+0x24c>
 8002780:	4b0c      	ldr	r3, [pc, #48]	; (80027b4 <HAL_I2S_Init+0x27c>)
 8002782:	e001      	b.n	8002788 <HAL_I2S_Init+0x250>
 8002784:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002788:	897a      	ldrh	r2, [r7, #10]
 800278a:	61da      	str	r2, [r3, #28]
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	2200      	movs	r2, #0
 8002790:	645a      	str	r2, [r3, #68]	; 0x44
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	2201      	movs	r2, #1
 8002796:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800279a:	2300      	movs	r3, #0
 800279c:	4618      	mov	r0, r3
 800279e:	3720      	adds	r7, #32
 80027a0:	46bd      	mov	sp, r7
 80027a2:	bd80      	pop	{r7, pc}
 80027a4:	080028af 	.word	0x080028af
 80027a8:	cccccccd 	.word	0xcccccccd
 80027ac:	080029c5 	.word	0x080029c5
 80027b0:	40003800 	.word	0x40003800
 80027b4:	40003400 	.word	0x40003400

080027b8 <HAL_I2S_TxCpltCallback>:
 80027b8:	b480      	push	{r7}
 80027ba:	b083      	sub	sp, #12
 80027bc:	af00      	add	r7, sp, #0
 80027be:	6078      	str	r0, [r7, #4]
 80027c0:	bf00      	nop
 80027c2:	370c      	adds	r7, #12
 80027c4:	46bd      	mov	sp, r7
 80027c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ca:	4770      	bx	lr

080027cc <HAL_I2S_RxCpltCallback>:
 80027cc:	b480      	push	{r7}
 80027ce:	b083      	sub	sp, #12
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	6078      	str	r0, [r7, #4]
 80027d4:	bf00      	nop
 80027d6:	370c      	adds	r7, #12
 80027d8:	46bd      	mov	sp, r7
 80027da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027de:	4770      	bx	lr

080027e0 <HAL_I2S_ErrorCallback>:
 80027e0:	b480      	push	{r7}
 80027e2:	b083      	sub	sp, #12
 80027e4:	af00      	add	r7, sp, #0
 80027e6:	6078      	str	r0, [r7, #4]
 80027e8:	bf00      	nop
 80027ea:	370c      	adds	r7, #12
 80027ec:	46bd      	mov	sp, r7
 80027ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f2:	4770      	bx	lr

080027f4 <I2S_Transmit_IT>:
 80027f4:	b580      	push	{r7, lr}
 80027f6:	b082      	sub	sp, #8
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002800:	881a      	ldrh	r2, [r3, #0]
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	60da      	str	r2, [r3, #12]
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800280c:	1c9a      	adds	r2, r3, #2
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	625a      	str	r2, [r3, #36]	; 0x24
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002816:	b29b      	uxth	r3, r3
 8002818:	3b01      	subs	r3, #1
 800281a:	b29a      	uxth	r2, r3
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002824:	b29b      	uxth	r3, r3
 8002826:	2b00      	cmp	r3, #0
 8002828:	d10e      	bne.n	8002848 <I2S_Transmit_IT+0x54>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	685a      	ldr	r2, [r3, #4]
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002838:	605a      	str	r2, [r3, #4]
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	2201      	movs	r2, #1
 800283e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002842:	6878      	ldr	r0, [r7, #4]
 8002844:	f7ff ffb8 	bl	80027b8 <HAL_I2S_TxCpltCallback>
 8002848:	bf00      	nop
 800284a:	3708      	adds	r7, #8
 800284c:	46bd      	mov	sp, r7
 800284e:	bd80      	pop	{r7, pc}

08002850 <I2S_Receive_IT>:
 8002850:	b580      	push	{r7, lr}
 8002852:	b082      	sub	sp, #8
 8002854:	af00      	add	r7, sp, #0
 8002856:	6078      	str	r0, [r7, #4]
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	68da      	ldr	r2, [r3, #12]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002862:	b292      	uxth	r2, r2
 8002864:	801a      	strh	r2, [r3, #0]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800286a:	1c9a      	adds	r2, r3, #2
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002874:	b29b      	uxth	r3, r3
 8002876:	3b01      	subs	r3, #1
 8002878:	b29a      	uxth	r2, r3
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	865a      	strh	r2, [r3, #50]	; 0x32
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002882:	b29b      	uxth	r3, r3
 8002884:	2b00      	cmp	r3, #0
 8002886:	d10e      	bne.n	80028a6 <I2S_Receive_IT+0x56>
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	685a      	ldr	r2, [r3, #4]
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002896:	605a      	str	r2, [r3, #4]
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	2201      	movs	r2, #1
 800289c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80028a0:	6878      	ldr	r0, [r7, #4]
 80028a2:	f7ff ff93 	bl	80027cc <HAL_I2S_RxCpltCallback>
 80028a6:	bf00      	nop
 80028a8:	3708      	adds	r7, #8
 80028aa:	46bd      	mov	sp, r7
 80028ac:	bd80      	pop	{r7, pc}

080028ae <I2S_IRQHandler>:
 80028ae:	b580      	push	{r7, lr}
 80028b0:	b086      	sub	sp, #24
 80028b2:	af00      	add	r7, sp, #0
 80028b4:	6078      	str	r0, [r7, #4]
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	689b      	ldr	r3, [r3, #8]
 80028bc:	617b      	str	r3, [r7, #20]
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80028c4:	b2db      	uxtb	r3, r3
 80028c6:	2b04      	cmp	r3, #4
 80028c8:	d13a      	bne.n	8002940 <I2S_IRQHandler+0x92>
 80028ca:	697b      	ldr	r3, [r7, #20]
 80028cc:	f003 0301 	and.w	r3, r3, #1
 80028d0:	2b01      	cmp	r3, #1
 80028d2:	d109      	bne.n	80028e8 <I2S_IRQHandler+0x3a>
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	685b      	ldr	r3, [r3, #4]
 80028da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80028de:	2b40      	cmp	r3, #64	; 0x40
 80028e0:	d102      	bne.n	80028e8 <I2S_IRQHandler+0x3a>
 80028e2:	6878      	ldr	r0, [r7, #4]
 80028e4:	f7ff ffb4 	bl	8002850 <I2S_Receive_IT>
 80028e8:	697b      	ldr	r3, [r7, #20]
 80028ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80028ee:	2b40      	cmp	r3, #64	; 0x40
 80028f0:	d126      	bne.n	8002940 <I2S_IRQHandler+0x92>
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	685b      	ldr	r3, [r3, #4]
 80028f8:	f003 0320 	and.w	r3, r3, #32
 80028fc:	2b20      	cmp	r3, #32
 80028fe:	d11f      	bne.n	8002940 <I2S_IRQHandler+0x92>
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	685a      	ldr	r2, [r3, #4]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800290e:	605a      	str	r2, [r3, #4]
 8002910:	2300      	movs	r3, #0
 8002912:	613b      	str	r3, [r7, #16]
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	68db      	ldr	r3, [r3, #12]
 800291a:	613b      	str	r3, [r7, #16]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	689b      	ldr	r3, [r3, #8]
 8002922:	613b      	str	r3, [r7, #16]
 8002924:	693b      	ldr	r3, [r7, #16]
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	2201      	movs	r2, #1
 800292a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002932:	f043 0202 	orr.w	r2, r3, #2
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	645a      	str	r2, [r3, #68]	; 0x44
 800293a:	6878      	ldr	r0, [r7, #4]
 800293c:	f7ff ff50 	bl	80027e0 <HAL_I2S_ErrorCallback>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002946:	b2db      	uxtb	r3, r3
 8002948:	2b03      	cmp	r3, #3
 800294a:	d136      	bne.n	80029ba <I2S_IRQHandler+0x10c>
 800294c:	697b      	ldr	r3, [r7, #20]
 800294e:	f003 0302 	and.w	r3, r3, #2
 8002952:	2b02      	cmp	r3, #2
 8002954:	d109      	bne.n	800296a <I2S_IRQHandler+0xbc>
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	685b      	ldr	r3, [r3, #4]
 800295c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002960:	2b80      	cmp	r3, #128	; 0x80
 8002962:	d102      	bne.n	800296a <I2S_IRQHandler+0xbc>
 8002964:	6878      	ldr	r0, [r7, #4]
 8002966:	f7ff ff45 	bl	80027f4 <I2S_Transmit_IT>
 800296a:	697b      	ldr	r3, [r7, #20]
 800296c:	f003 0308 	and.w	r3, r3, #8
 8002970:	2b08      	cmp	r3, #8
 8002972:	d122      	bne.n	80029ba <I2S_IRQHandler+0x10c>
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	685b      	ldr	r3, [r3, #4]
 800297a:	f003 0320 	and.w	r3, r3, #32
 800297e:	2b20      	cmp	r3, #32
 8002980:	d11b      	bne.n	80029ba <I2S_IRQHandler+0x10c>
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	685a      	ldr	r2, [r3, #4]
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002990:	605a      	str	r2, [r3, #4]
 8002992:	2300      	movs	r3, #0
 8002994:	60fb      	str	r3, [r7, #12]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	689b      	ldr	r3, [r3, #8]
 800299c:	60fb      	str	r3, [r7, #12]
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	2201      	movs	r2, #1
 80029a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80029ac:	f043 0204 	orr.w	r2, r3, #4
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	645a      	str	r2, [r3, #68]	; 0x44
 80029b4:	6878      	ldr	r0, [r7, #4]
 80029b6:	f7ff ff13 	bl	80027e0 <HAL_I2S_ErrorCallback>
 80029ba:	bf00      	nop
 80029bc:	3718      	adds	r7, #24
 80029be:	46bd      	mov	sp, r7
 80029c0:	bd80      	pop	{r7, pc}
	...

080029c4 <HAL_I2SEx_FullDuplex_IRQHandler>:
 80029c4:	b580      	push	{r7, lr}
 80029c6:	b088      	sub	sp, #32
 80029c8:	af00      	add	r7, sp, #0
 80029ca:	6078      	str	r0, [r7, #4]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	689b      	ldr	r3, [r3, #8]
 80029d2:	61fb      	str	r3, [r7, #28]
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	4aa2      	ldr	r2, [pc, #648]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 80029da:	4293      	cmp	r3, r2
 80029dc:	d101      	bne.n	80029e2 <HAL_I2SEx_FullDuplex_IRQHandler+0x1e>
 80029de:	4ba2      	ldr	r3, [pc, #648]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 80029e0:	e001      	b.n	80029e6 <HAL_I2SEx_FullDuplex_IRQHandler+0x22>
 80029e2:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 80029e6:	689b      	ldr	r3, [r3, #8]
 80029e8:	61bb      	str	r3, [r7, #24]
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	685b      	ldr	r3, [r3, #4]
 80029f0:	617b      	str	r3, [r7, #20]
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	681b      	ldr	r3, [r3, #0]
 80029f6:	4a9b      	ldr	r2, [pc, #620]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 80029f8:	4293      	cmp	r3, r2
 80029fa:	d101      	bne.n	8002a00 <HAL_I2SEx_FullDuplex_IRQHandler+0x3c>
 80029fc:	4b9a      	ldr	r3, [pc, #616]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 80029fe:	e001      	b.n	8002a04 <HAL_I2SEx_FullDuplex_IRQHandler+0x40>
 8002a00:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002a04:	685b      	ldr	r3, [r3, #4]
 8002a06:	613b      	str	r3, [r7, #16]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	685b      	ldr	r3, [r3, #4]
 8002a0c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002a10:	d004      	beq.n	8002a1c <HAL_I2SEx_FullDuplex_IRQHandler+0x58>
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	685b      	ldr	r3, [r3, #4]
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	f040 8099 	bne.w	8002b4e <HAL_I2SEx_FullDuplex_IRQHandler+0x18a>
 8002a1c:	69fb      	ldr	r3, [r7, #28]
 8002a1e:	f003 0302 	and.w	r3, r3, #2
 8002a22:	2b02      	cmp	r3, #2
 8002a24:	d107      	bne.n	8002a36 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 8002a26:	697b      	ldr	r3, [r7, #20]
 8002a28:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d002      	beq.n	8002a36 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 8002a30:	6878      	ldr	r0, [r7, #4]
 8002a32:	f000 f925 	bl	8002c80 <I2SEx_TxISR_I2S>
 8002a36:	69bb      	ldr	r3, [r7, #24]
 8002a38:	f003 0301 	and.w	r3, r3, #1
 8002a3c:	2b01      	cmp	r3, #1
 8002a3e:	d107      	bne.n	8002a50 <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 8002a40:	693b      	ldr	r3, [r7, #16]
 8002a42:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d002      	beq.n	8002a50 <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 8002a4a:	6878      	ldr	r0, [r7, #4]
 8002a4c:	f000 f9c8 	bl	8002de0 <I2SEx_RxISR_I2SExt>
 8002a50:	69bb      	ldr	r3, [r7, #24]
 8002a52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002a56:	2b40      	cmp	r3, #64	; 0x40
 8002a58:	d13a      	bne.n	8002ad0 <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 8002a5a:	693b      	ldr	r3, [r7, #16]
 8002a5c:	f003 0320 	and.w	r3, r3, #32
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	d035      	beq.n	8002ad0 <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	4a7e      	ldr	r2, [pc, #504]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002a6a:	4293      	cmp	r3, r2
 8002a6c:	d101      	bne.n	8002a72 <HAL_I2SEx_FullDuplex_IRQHandler+0xae>
 8002a6e:	4b7e      	ldr	r3, [pc, #504]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002a70:	e001      	b.n	8002a76 <HAL_I2SEx_FullDuplex_IRQHandler+0xb2>
 8002a72:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	4979      	ldr	r1, [pc, #484]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002a7e:	428b      	cmp	r3, r1
 8002a80:	d101      	bne.n	8002a86 <HAL_I2SEx_FullDuplex_IRQHandler+0xc2>
 8002a82:	4b79      	ldr	r3, [pc, #484]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002a84:	e001      	b.n	8002a8a <HAL_I2SEx_FullDuplex_IRQHandler+0xc6>
 8002a86:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002a8a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002a8e:	605a      	str	r2, [r3, #4]
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	685a      	ldr	r2, [r3, #4]
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002a9e:	605a      	str	r2, [r3, #4]
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	60fb      	str	r3, [r7, #12]
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	68db      	ldr	r3, [r3, #12]
 8002aaa:	60fb      	str	r3, [r7, #12]
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	689b      	ldr	r3, [r3, #8]
 8002ab2:	60fb      	str	r3, [r7, #12]
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	2201      	movs	r2, #1
 8002aba:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ac2:	f043 0202 	orr.w	r2, r3, #2
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	645a      	str	r2, [r3, #68]	; 0x44
 8002aca:	6878      	ldr	r0, [r7, #4]
 8002acc:	f7ff fe88 	bl	80027e0 <HAL_I2S_ErrorCallback>
 8002ad0:	69fb      	ldr	r3, [r7, #28]
 8002ad2:	f003 0308 	and.w	r3, r3, #8
 8002ad6:	2b08      	cmp	r3, #8
 8002ad8:	f040 80be 	bne.w	8002c58 <HAL_I2SEx_FullDuplex_IRQHandler+0x294>
 8002adc:	697b      	ldr	r3, [r7, #20]
 8002ade:	f003 0320 	and.w	r3, r3, #32
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	f000 80b8 	beq.w	8002c58 <HAL_I2SEx_FullDuplex_IRQHandler+0x294>
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	685a      	ldr	r2, [r3, #4]
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002af6:	605a      	str	r2, [r3, #4]
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	4a59      	ldr	r2, [pc, #356]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002afe:	4293      	cmp	r3, r2
 8002b00:	d101      	bne.n	8002b06 <HAL_I2SEx_FullDuplex_IRQHandler+0x142>
 8002b02:	4b59      	ldr	r3, [pc, #356]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002b04:	e001      	b.n	8002b0a <HAL_I2SEx_FullDuplex_IRQHandler+0x146>
 8002b06:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002b0a:	685a      	ldr	r2, [r3, #4]
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	4954      	ldr	r1, [pc, #336]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002b12:	428b      	cmp	r3, r1
 8002b14:	d101      	bne.n	8002b1a <HAL_I2SEx_FullDuplex_IRQHandler+0x156>
 8002b16:	4b54      	ldr	r3, [pc, #336]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002b18:	e001      	b.n	8002b1e <HAL_I2SEx_FullDuplex_IRQHandler+0x15a>
 8002b1a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002b1e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002b22:	605a      	str	r2, [r3, #4]
 8002b24:	2300      	movs	r3, #0
 8002b26:	60bb      	str	r3, [r7, #8]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	689b      	ldr	r3, [r3, #8]
 8002b2e:	60bb      	str	r3, [r7, #8]
 8002b30:	68bb      	ldr	r3, [r7, #8]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	2201      	movs	r2, #1
 8002b36:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b3e:	f043 0204 	orr.w	r2, r3, #4
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	645a      	str	r2, [r3, #68]	; 0x44
 8002b46:	6878      	ldr	r0, [r7, #4]
 8002b48:	f7ff fe4a 	bl	80027e0 <HAL_I2S_ErrorCallback>
 8002b4c:	e084      	b.n	8002c58 <HAL_I2SEx_FullDuplex_IRQHandler+0x294>
 8002b4e:	69bb      	ldr	r3, [r7, #24]
 8002b50:	f003 0302 	and.w	r3, r3, #2
 8002b54:	2b02      	cmp	r3, #2
 8002b56:	d107      	bne.n	8002b68 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 8002b58:	693b      	ldr	r3, [r7, #16]
 8002b5a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d002      	beq.n	8002b68 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 8002b62:	6878      	ldr	r0, [r7, #4]
 8002b64:	f000 f8be 	bl	8002ce4 <I2SEx_TxISR_I2SExt>
 8002b68:	69fb      	ldr	r3, [r7, #28]
 8002b6a:	f003 0301 	and.w	r3, r3, #1
 8002b6e:	2b01      	cmp	r3, #1
 8002b70:	d107      	bne.n	8002b82 <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 8002b72:	697b      	ldr	r3, [r7, #20]
 8002b74:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d002      	beq.n	8002b82 <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 8002b7c:	6878      	ldr	r0, [r7, #4]
 8002b7e:	f000 f8fd 	bl	8002d7c <I2SEx_RxISR_I2S>
 8002b82:	69fb      	ldr	r3, [r7, #28]
 8002b84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b88:	2b40      	cmp	r3, #64	; 0x40
 8002b8a:	d12f      	bne.n	8002bec <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8002b8c:	697b      	ldr	r3, [r7, #20]
 8002b8e:	f003 0320 	and.w	r3, r3, #32
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d02a      	beq.n	8002bec <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	685a      	ldr	r2, [r3, #4]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002ba4:	605a      	str	r2, [r3, #4]
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	4a2e      	ldr	r2, [pc, #184]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002bac:	4293      	cmp	r3, r2
 8002bae:	d101      	bne.n	8002bb4 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f0>
 8002bb0:	4b2d      	ldr	r3, [pc, #180]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002bb2:	e001      	b.n	8002bb8 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f4>
 8002bb4:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002bb8:	685a      	ldr	r2, [r3, #4]
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4929      	ldr	r1, [pc, #164]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002bc0:	428b      	cmp	r3, r1
 8002bc2:	d101      	bne.n	8002bc8 <HAL_I2SEx_FullDuplex_IRQHandler+0x204>
 8002bc4:	4b28      	ldr	r3, [pc, #160]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002bc6:	e001      	b.n	8002bcc <HAL_I2SEx_FullDuplex_IRQHandler+0x208>
 8002bc8:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002bcc:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002bd0:	605a      	str	r2, [r3, #4]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	2201      	movs	r2, #1
 8002bd6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bde:	f043 0202 	orr.w	r2, r3, #2
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	645a      	str	r2, [r3, #68]	; 0x44
 8002be6:	6878      	ldr	r0, [r7, #4]
 8002be8:	f7ff fdfa 	bl	80027e0 <HAL_I2S_ErrorCallback>
 8002bec:	69bb      	ldr	r3, [r7, #24]
 8002bee:	f003 0308 	and.w	r3, r3, #8
 8002bf2:	2b08      	cmp	r3, #8
 8002bf4:	d131      	bne.n	8002c5a <HAL_I2SEx_FullDuplex_IRQHandler+0x296>
 8002bf6:	693b      	ldr	r3, [r7, #16]
 8002bf8:	f003 0320 	and.w	r3, r3, #32
 8002bfc:	2b00      	cmp	r3, #0
 8002bfe:	d02c      	beq.n	8002c5a <HAL_I2SEx_FullDuplex_IRQHandler+0x296>
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	4a17      	ldr	r2, [pc, #92]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002c06:	4293      	cmp	r3, r2
 8002c08:	d101      	bne.n	8002c0e <HAL_I2SEx_FullDuplex_IRQHandler+0x24a>
 8002c0a:	4b17      	ldr	r3, [pc, #92]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002c0c:	e001      	b.n	8002c12 <HAL_I2SEx_FullDuplex_IRQHandler+0x24e>
 8002c0e:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002c12:	685a      	ldr	r2, [r3, #4]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	4912      	ldr	r1, [pc, #72]	; (8002c64 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>)
 8002c1a:	428b      	cmp	r3, r1
 8002c1c:	d101      	bne.n	8002c22 <HAL_I2SEx_FullDuplex_IRQHandler+0x25e>
 8002c1e:	4b12      	ldr	r3, [pc, #72]	; (8002c68 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a4>)
 8002c20:	e001      	b.n	8002c26 <HAL_I2SEx_FullDuplex_IRQHandler+0x262>
 8002c22:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002c26:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002c2a:	605a      	str	r2, [r3, #4]
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	685a      	ldr	r2, [r3, #4]
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002c3a:	605a      	str	r2, [r3, #4]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	2201      	movs	r2, #1
 8002c40:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c48:	f043 0204 	orr.w	r2, r3, #4
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	645a      	str	r2, [r3, #68]	; 0x44
 8002c50:	6878      	ldr	r0, [r7, #4]
 8002c52:	f7ff fdc5 	bl	80027e0 <HAL_I2S_ErrorCallback>
 8002c56:	e000      	b.n	8002c5a <HAL_I2SEx_FullDuplex_IRQHandler+0x296>
 8002c58:	bf00      	nop
 8002c5a:	bf00      	nop
 8002c5c:	3720      	adds	r7, #32
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	bd80      	pop	{r7, pc}
 8002c62:	bf00      	nop
 8002c64:	40003800 	.word	0x40003800
 8002c68:	40003400 	.word	0x40003400

08002c6c <HAL_I2SEx_TxRxCpltCallback>:
 8002c6c:	b480      	push	{r7}
 8002c6e:	b083      	sub	sp, #12
 8002c70:	af00      	add	r7, sp, #0
 8002c72:	6078      	str	r0, [r7, #4]
 8002c74:	bf00      	nop
 8002c76:	370c      	adds	r7, #12
 8002c78:	46bd      	mov	sp, r7
 8002c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c7e:	4770      	bx	lr

08002c80 <I2SEx_TxISR_I2S>:
 8002c80:	b580      	push	{r7, lr}
 8002c82:	b082      	sub	sp, #8
 8002c84:	af00      	add	r7, sp, #0
 8002c86:	6078      	str	r0, [r7, #4]
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c8c:	1c99      	adds	r1, r3, #2
 8002c8e:	687a      	ldr	r2, [r7, #4]
 8002c90:	6251      	str	r1, [r2, #36]	; 0x24
 8002c92:	881a      	ldrh	r2, [r3, #0]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	60da      	str	r2, [r3, #12]
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002c9e:	b29b      	uxth	r3, r3
 8002ca0:	3b01      	subs	r3, #1
 8002ca2:	b29a      	uxth	r2, r3
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002cac:	b29b      	uxth	r3, r3
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d113      	bne.n	8002cda <I2SEx_TxISR_I2S+0x5a>
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	685a      	ldr	r2, [r3, #4]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	681b      	ldr	r3, [r3, #0]
 8002cbc:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002cc0:	605a      	str	r2, [r3, #4]
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002cc6:	b29b      	uxth	r3, r3
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d106      	bne.n	8002cda <I2SEx_TxISR_I2S+0x5a>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	2201      	movs	r2, #1
 8002cd0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002cd4:	6878      	ldr	r0, [r7, #4]
 8002cd6:	f7ff ffc9 	bl	8002c6c <HAL_I2SEx_TxRxCpltCallback>
 8002cda:	bf00      	nop
 8002cdc:	3708      	adds	r7, #8
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bd80      	pop	{r7, pc}
	...

08002ce4 <I2SEx_TxISR_I2SExt>:
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	b082      	sub	sp, #8
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cf0:	1c99      	adds	r1, r3, #2
 8002cf2:	687a      	ldr	r2, [r7, #4]
 8002cf4:	6251      	str	r1, [r2, #36]	; 0x24
 8002cf6:	8819      	ldrh	r1, [r3, #0]
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	4a1d      	ldr	r2, [pc, #116]	; (8002d74 <I2SEx_TxISR_I2SExt+0x90>)
 8002cfe:	4293      	cmp	r3, r2
 8002d00:	d101      	bne.n	8002d06 <I2SEx_TxISR_I2SExt+0x22>
 8002d02:	4b1d      	ldr	r3, [pc, #116]	; (8002d78 <I2SEx_TxISR_I2SExt+0x94>)
 8002d04:	e001      	b.n	8002d0a <I2SEx_TxISR_I2SExt+0x26>
 8002d06:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002d0a:	460a      	mov	r2, r1
 8002d0c:	60da      	str	r2, [r3, #12]
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002d12:	b29b      	uxth	r3, r3
 8002d14:	3b01      	subs	r3, #1
 8002d16:	b29a      	uxth	r2, r3
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002d20:	b29b      	uxth	r3, r3
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	d121      	bne.n	8002d6a <I2SEx_TxISR_I2SExt+0x86>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	4a12      	ldr	r2, [pc, #72]	; (8002d74 <I2SEx_TxISR_I2SExt+0x90>)
 8002d2c:	4293      	cmp	r3, r2
 8002d2e:	d101      	bne.n	8002d34 <I2SEx_TxISR_I2SExt+0x50>
 8002d30:	4b11      	ldr	r3, [pc, #68]	; (8002d78 <I2SEx_TxISR_I2SExt+0x94>)
 8002d32:	e001      	b.n	8002d38 <I2SEx_TxISR_I2SExt+0x54>
 8002d34:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002d38:	685a      	ldr	r2, [r3, #4]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	490d      	ldr	r1, [pc, #52]	; (8002d74 <I2SEx_TxISR_I2SExt+0x90>)
 8002d40:	428b      	cmp	r3, r1
 8002d42:	d101      	bne.n	8002d48 <I2SEx_TxISR_I2SExt+0x64>
 8002d44:	4b0c      	ldr	r3, [pc, #48]	; (8002d78 <I2SEx_TxISR_I2SExt+0x94>)
 8002d46:	e001      	b.n	8002d4c <I2SEx_TxISR_I2SExt+0x68>
 8002d48:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002d4c:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002d50:	605a      	str	r2, [r3, #4]
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002d56:	b29b      	uxth	r3, r3
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	d106      	bne.n	8002d6a <I2SEx_TxISR_I2SExt+0x86>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2201      	movs	r2, #1
 8002d60:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002d64:	6878      	ldr	r0, [r7, #4]
 8002d66:	f7ff ff81 	bl	8002c6c <HAL_I2SEx_TxRxCpltCallback>
 8002d6a:	bf00      	nop
 8002d6c:	3708      	adds	r7, #8
 8002d6e:	46bd      	mov	sp, r7
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	40003800 	.word	0x40003800
 8002d78:	40003400 	.word	0x40003400

08002d7c <I2SEx_RxISR_I2S>:
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	b082      	sub	sp, #8
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	6078      	str	r0, [r7, #4]
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	68d8      	ldr	r0, [r3, #12]
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d8e:	1c99      	adds	r1, r3, #2
 8002d90:	687a      	ldr	r2, [r7, #4]
 8002d92:	62d1      	str	r1, [r2, #44]	; 0x2c
 8002d94:	b282      	uxth	r2, r0
 8002d96:	801a      	strh	r2, [r3, #0]
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002d9c:	b29b      	uxth	r3, r3
 8002d9e:	3b01      	subs	r3, #1
 8002da0:	b29a      	uxth	r2, r3
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	865a      	strh	r2, [r3, #50]	; 0x32
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002daa:	b29b      	uxth	r3, r3
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	d113      	bne.n	8002dd8 <I2SEx_RxISR_I2S+0x5c>
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	685a      	ldr	r2, [r3, #4]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002dbe:	605a      	str	r2, [r3, #4]
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002dc4:	b29b      	uxth	r3, r3
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d106      	bne.n	8002dd8 <I2SEx_RxISR_I2S+0x5c>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	2201      	movs	r2, #1
 8002dce:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002dd2:	6878      	ldr	r0, [r7, #4]
 8002dd4:	f7ff ff4a 	bl	8002c6c <HAL_I2SEx_TxRxCpltCallback>
 8002dd8:	bf00      	nop
 8002dda:	3708      	adds	r7, #8
 8002ddc:	46bd      	mov	sp, r7
 8002dde:	bd80      	pop	{r7, pc}

08002de0 <I2SEx_RxISR_I2SExt>:
 8002de0:	b580      	push	{r7, lr}
 8002de2:	b082      	sub	sp, #8
 8002de4:	af00      	add	r7, sp, #0
 8002de6:	6078      	str	r0, [r7, #4]
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	4a20      	ldr	r2, [pc, #128]	; (8002e70 <I2SEx_RxISR_I2SExt+0x90>)
 8002dee:	4293      	cmp	r3, r2
 8002df0:	d101      	bne.n	8002df6 <I2SEx_RxISR_I2SExt+0x16>
 8002df2:	4b20      	ldr	r3, [pc, #128]	; (8002e74 <I2SEx_RxISR_I2SExt+0x94>)
 8002df4:	e001      	b.n	8002dfa <I2SEx_RxISR_I2SExt+0x1a>
 8002df6:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002dfa:	68d8      	ldr	r0, [r3, #12]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e00:	1c99      	adds	r1, r3, #2
 8002e02:	687a      	ldr	r2, [r7, #4]
 8002e04:	62d1      	str	r1, [r2, #44]	; 0x2c
 8002e06:	b282      	uxth	r2, r0
 8002e08:	801a      	strh	r2, [r3, #0]
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002e0e:	b29b      	uxth	r3, r3
 8002e10:	3b01      	subs	r3, #1
 8002e12:	b29a      	uxth	r2, r3
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	865a      	strh	r2, [r3, #50]	; 0x32
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002e1c:	b29b      	uxth	r3, r3
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	d121      	bne.n	8002e66 <I2SEx_RxISR_I2SExt+0x86>
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	4a12      	ldr	r2, [pc, #72]	; (8002e70 <I2SEx_RxISR_I2SExt+0x90>)
 8002e28:	4293      	cmp	r3, r2
 8002e2a:	d101      	bne.n	8002e30 <I2SEx_RxISR_I2SExt+0x50>
 8002e2c:	4b11      	ldr	r3, [pc, #68]	; (8002e74 <I2SEx_RxISR_I2SExt+0x94>)
 8002e2e:	e001      	b.n	8002e34 <I2SEx_RxISR_I2SExt+0x54>
 8002e30:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002e34:	685a      	ldr	r2, [r3, #4]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	490d      	ldr	r1, [pc, #52]	; (8002e70 <I2SEx_RxISR_I2SExt+0x90>)
 8002e3c:	428b      	cmp	r3, r1
 8002e3e:	d101      	bne.n	8002e44 <I2SEx_RxISR_I2SExt+0x64>
 8002e40:	4b0c      	ldr	r3, [pc, #48]	; (8002e74 <I2SEx_RxISR_I2SExt+0x94>)
 8002e42:	e001      	b.n	8002e48 <I2SEx_RxISR_I2SExt+0x68>
 8002e44:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
 8002e48:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8002e4c:	605a      	str	r2, [r3, #4]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002e52:	b29b      	uxth	r3, r3
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d106      	bne.n	8002e66 <I2SEx_RxISR_I2SExt+0x86>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	2201      	movs	r2, #1
 8002e5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002e60:	6878      	ldr	r0, [r7, #4]
 8002e62:	f7ff ff03 	bl	8002c6c <HAL_I2SEx_TxRxCpltCallback>
 8002e66:	bf00      	nop
 8002e68:	3708      	adds	r7, #8
 8002e6a:	46bd      	mov	sp, r7
 8002e6c:	bd80      	pop	{r7, pc}
 8002e6e:	bf00      	nop
 8002e70:	40003800 	.word	0x40003800
 8002e74:	40003400 	.word	0x40003400

08002e78 <HAL_PCD_Init>:
 8002e78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e7a:	b08f      	sub	sp, #60	; 0x3c
 8002e7c:	af0a      	add	r7, sp, #40	; 0x28
 8002e7e:	6078      	str	r0, [r7, #4]
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d101      	bne.n	8002e8a <HAL_PCD_Init+0x12>
 8002e86:	2301      	movs	r3, #1
 8002e88:	e10f      	b.n	80030aa <HAL_PCD_Init+0x232>
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	60bb      	str	r3, [r7, #8]
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	f893 33bd 	ldrb.w	r3, [r3, #957]	; 0x3bd
 8002e96:	b2db      	uxtb	r3, r3
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d106      	bne.n	8002eaa <HAL_PCD_Init+0x32>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8002ea4:	6878      	ldr	r0, [r7, #4]
 8002ea6:	f005 fb27 	bl	80084f8 <HAL_PCD_MspInit>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	2203      	movs	r2, #3
 8002eae:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8002eb2:	68bb      	ldr	r3, [r7, #8]
 8002eb4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002eb6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d102      	bne.n	8002ec4 <HAL_PCD_Init+0x4c>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	611a      	str	r2, [r3, #16]
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	4618      	mov	r0, r3
 8002eca:	f002 f896 	bl	8004ffa <USB_DisableGlobalInt>
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	603b      	str	r3, [r7, #0]
 8002ed4:	687e      	ldr	r6, [r7, #4]
 8002ed6:	466d      	mov	r5, sp
 8002ed8:	f106 0410 	add.w	r4, r6, #16
 8002edc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002ede:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002ee0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002ee2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002ee4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002ee8:	e885 0003 	stmia.w	r5, {r0, r1}
 8002eec:	1d33      	adds	r3, r6, #4
 8002eee:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002ef0:	6838      	ldr	r0, [r7, #0]
 8002ef2:	f001 ff6e 	bl	8004dd2 <USB_CoreInit>
 8002ef6:	4603      	mov	r3, r0
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	d005      	beq.n	8002f08 <HAL_PCD_Init+0x90>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	2202      	movs	r2, #2
 8002f00:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8002f04:	2301      	movs	r3, #1
 8002f06:	e0d0      	b.n	80030aa <HAL_PCD_Init+0x232>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	2100      	movs	r1, #0
 8002f0e:	4618      	mov	r0, r3
 8002f10:	f002 f884 	bl	800501c <USB_SetCurrentMode>
 8002f14:	2300      	movs	r3, #0
 8002f16:	73fb      	strb	r3, [r7, #15]
 8002f18:	e04a      	b.n	8002fb0 <HAL_PCD_Init+0x138>
 8002f1a:	7bfa      	ldrb	r2, [r7, #15]
 8002f1c:	6879      	ldr	r1, [r7, #4]
 8002f1e:	4613      	mov	r3, r2
 8002f20:	00db      	lsls	r3, r3, #3
 8002f22:	1a9b      	subs	r3, r3, r2
 8002f24:	009b      	lsls	r3, r3, #2
 8002f26:	440b      	add	r3, r1
 8002f28:	333d      	adds	r3, #61	; 0x3d
 8002f2a:	2201      	movs	r2, #1
 8002f2c:	701a      	strb	r2, [r3, #0]
 8002f2e:	7bfa      	ldrb	r2, [r7, #15]
 8002f30:	6879      	ldr	r1, [r7, #4]
 8002f32:	4613      	mov	r3, r2
 8002f34:	00db      	lsls	r3, r3, #3
 8002f36:	1a9b      	subs	r3, r3, r2
 8002f38:	009b      	lsls	r3, r3, #2
 8002f3a:	440b      	add	r3, r1
 8002f3c:	333c      	adds	r3, #60	; 0x3c
 8002f3e:	7bfa      	ldrb	r2, [r7, #15]
 8002f40:	701a      	strb	r2, [r3, #0]
 8002f42:	7bfa      	ldrb	r2, [r7, #15]
 8002f44:	7bfb      	ldrb	r3, [r7, #15]
 8002f46:	b298      	uxth	r0, r3
 8002f48:	6879      	ldr	r1, [r7, #4]
 8002f4a:	4613      	mov	r3, r2
 8002f4c:	00db      	lsls	r3, r3, #3
 8002f4e:	1a9b      	subs	r3, r3, r2
 8002f50:	009b      	lsls	r3, r3, #2
 8002f52:	440b      	add	r3, r1
 8002f54:	3342      	adds	r3, #66	; 0x42
 8002f56:	4602      	mov	r2, r0
 8002f58:	801a      	strh	r2, [r3, #0]
 8002f5a:	7bfa      	ldrb	r2, [r7, #15]
 8002f5c:	6879      	ldr	r1, [r7, #4]
 8002f5e:	4613      	mov	r3, r2
 8002f60:	00db      	lsls	r3, r3, #3
 8002f62:	1a9b      	subs	r3, r3, r2
 8002f64:	009b      	lsls	r3, r3, #2
 8002f66:	440b      	add	r3, r1
 8002f68:	333f      	adds	r3, #63	; 0x3f
 8002f6a:	2200      	movs	r2, #0
 8002f6c:	701a      	strb	r2, [r3, #0]
 8002f6e:	7bfa      	ldrb	r2, [r7, #15]
 8002f70:	6879      	ldr	r1, [r7, #4]
 8002f72:	4613      	mov	r3, r2
 8002f74:	00db      	lsls	r3, r3, #3
 8002f76:	1a9b      	subs	r3, r3, r2
 8002f78:	009b      	lsls	r3, r3, #2
 8002f7a:	440b      	add	r3, r1
 8002f7c:	3344      	adds	r3, #68	; 0x44
 8002f7e:	2200      	movs	r2, #0
 8002f80:	601a      	str	r2, [r3, #0]
 8002f82:	7bfa      	ldrb	r2, [r7, #15]
 8002f84:	6879      	ldr	r1, [r7, #4]
 8002f86:	4613      	mov	r3, r2
 8002f88:	00db      	lsls	r3, r3, #3
 8002f8a:	1a9b      	subs	r3, r3, r2
 8002f8c:	009b      	lsls	r3, r3, #2
 8002f8e:	440b      	add	r3, r1
 8002f90:	3348      	adds	r3, #72	; 0x48
 8002f92:	2200      	movs	r2, #0
 8002f94:	601a      	str	r2, [r3, #0]
 8002f96:	7bfa      	ldrb	r2, [r7, #15]
 8002f98:	6879      	ldr	r1, [r7, #4]
 8002f9a:	4613      	mov	r3, r2
 8002f9c:	00db      	lsls	r3, r3, #3
 8002f9e:	1a9b      	subs	r3, r3, r2
 8002fa0:	009b      	lsls	r3, r3, #2
 8002fa2:	440b      	add	r3, r1
 8002fa4:	3350      	adds	r3, #80	; 0x50
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	601a      	str	r2, [r3, #0]
 8002faa:	7bfb      	ldrb	r3, [r7, #15]
 8002fac:	3301      	adds	r3, #1
 8002fae:	73fb      	strb	r3, [r7, #15]
 8002fb0:	7bfa      	ldrb	r2, [r7, #15]
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	685b      	ldr	r3, [r3, #4]
 8002fb6:	429a      	cmp	r2, r3
 8002fb8:	d3af      	bcc.n	8002f1a <HAL_PCD_Init+0xa2>
 8002fba:	2300      	movs	r3, #0
 8002fbc:	73fb      	strb	r3, [r7, #15]
 8002fbe:	e044      	b.n	800304a <HAL_PCD_Init+0x1d2>
 8002fc0:	7bfa      	ldrb	r2, [r7, #15]
 8002fc2:	6879      	ldr	r1, [r7, #4]
 8002fc4:	4613      	mov	r3, r2
 8002fc6:	00db      	lsls	r3, r3, #3
 8002fc8:	1a9b      	subs	r3, r3, r2
 8002fca:	009b      	lsls	r3, r3, #2
 8002fcc:	440b      	add	r3, r1
 8002fce:	f203 13fd 	addw	r3, r3, #509	; 0x1fd
 8002fd2:	2200      	movs	r2, #0
 8002fd4:	701a      	strb	r2, [r3, #0]
 8002fd6:	7bfa      	ldrb	r2, [r7, #15]
 8002fd8:	6879      	ldr	r1, [r7, #4]
 8002fda:	4613      	mov	r3, r2
 8002fdc:	00db      	lsls	r3, r3, #3
 8002fde:	1a9b      	subs	r3, r3, r2
 8002fe0:	009b      	lsls	r3, r3, #2
 8002fe2:	440b      	add	r3, r1
 8002fe4:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
 8002fe8:	7bfa      	ldrb	r2, [r7, #15]
 8002fea:	701a      	strb	r2, [r3, #0]
 8002fec:	7bfa      	ldrb	r2, [r7, #15]
 8002fee:	6879      	ldr	r1, [r7, #4]
 8002ff0:	4613      	mov	r3, r2
 8002ff2:	00db      	lsls	r3, r3, #3
 8002ff4:	1a9b      	subs	r3, r3, r2
 8002ff6:	009b      	lsls	r3, r3, #2
 8002ff8:	440b      	add	r3, r1
 8002ffa:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
 8002ffe:	2200      	movs	r2, #0
 8003000:	701a      	strb	r2, [r3, #0]
 8003002:	7bfa      	ldrb	r2, [r7, #15]
 8003004:	6879      	ldr	r1, [r7, #4]
 8003006:	4613      	mov	r3, r2
 8003008:	00db      	lsls	r3, r3, #3
 800300a:	1a9b      	subs	r3, r3, r2
 800300c:	009b      	lsls	r3, r3, #2
 800300e:	440b      	add	r3, r1
 8003010:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8003014:	2200      	movs	r2, #0
 8003016:	601a      	str	r2, [r3, #0]
 8003018:	7bfa      	ldrb	r2, [r7, #15]
 800301a:	6879      	ldr	r1, [r7, #4]
 800301c:	4613      	mov	r3, r2
 800301e:	00db      	lsls	r3, r3, #3
 8003020:	1a9b      	subs	r3, r3, r2
 8003022:	009b      	lsls	r3, r3, #2
 8003024:	440b      	add	r3, r1
 8003026:	f503 7302 	add.w	r3, r3, #520	; 0x208
 800302a:	2200      	movs	r2, #0
 800302c:	601a      	str	r2, [r3, #0]
 800302e:	7bfa      	ldrb	r2, [r7, #15]
 8003030:	6879      	ldr	r1, [r7, #4]
 8003032:	4613      	mov	r3, r2
 8003034:	00db      	lsls	r3, r3, #3
 8003036:	1a9b      	subs	r3, r3, r2
 8003038:	009b      	lsls	r3, r3, #2
 800303a:	440b      	add	r3, r1
 800303c:	f503 7304 	add.w	r3, r3, #528	; 0x210
 8003040:	2200      	movs	r2, #0
 8003042:	601a      	str	r2, [r3, #0]
 8003044:	7bfb      	ldrb	r3, [r7, #15]
 8003046:	3301      	adds	r3, #1
 8003048:	73fb      	strb	r3, [r7, #15]
 800304a:	7bfa      	ldrb	r2, [r7, #15]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	685b      	ldr	r3, [r3, #4]
 8003050:	429a      	cmp	r2, r3
 8003052:	d3b5      	bcc.n	8002fc0 <HAL_PCD_Init+0x148>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	603b      	str	r3, [r7, #0]
 800305a:	687e      	ldr	r6, [r7, #4]
 800305c:	466d      	mov	r5, sp
 800305e:	f106 0410 	add.w	r4, r6, #16
 8003062:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003064:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003066:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003068:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800306a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800306e:	e885 0003 	stmia.w	r5, {r0, r1}
 8003072:	1d33      	adds	r3, r6, #4
 8003074:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003076:	6838      	ldr	r0, [r7, #0]
 8003078:	f001 fffa 	bl	8005070 <USB_DevInit>
 800307c:	4603      	mov	r3, r0
 800307e:	2b00      	cmp	r3, #0
 8003080:	d005      	beq.n	800308e <HAL_PCD_Init+0x216>
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	2202      	movs	r2, #2
 8003086:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 800308a:	2301      	movs	r3, #1
 800308c:	e00d      	b.n	80030aa <HAL_PCD_Init+0x232>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	2200      	movs	r2, #0
 8003092:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	2201      	movs	r2, #1
 800309a:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	4618      	mov	r0, r3
 80030a4:	f003 f842 	bl	800612c <USB_DevDisconnect>
 80030a8:	2300      	movs	r3, #0
 80030aa:	4618      	mov	r0, r3
 80030ac:	3714      	adds	r7, #20
 80030ae:	46bd      	mov	sp, r7
 80030b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080030b2 <HAL_PCD_Start>:
 80030b2:	b580      	push	{r7, lr}
 80030b4:	b084      	sub	sp, #16
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	6078      	str	r0, [r7, #4]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	60fb      	str	r3, [r7, #12]
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 80030c6:	2b01      	cmp	r3, #1
 80030c8:	d101      	bne.n	80030ce <HAL_PCD_Start+0x1c>
 80030ca:	2302      	movs	r3, #2
 80030cc:	e020      	b.n	8003110 <HAL_PCD_Start+0x5e>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	2201      	movs	r2, #1
 80030d2:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030da:	2b01      	cmp	r3, #1
 80030dc:	d109      	bne.n	80030f2 <HAL_PCD_Start+0x40>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	699b      	ldr	r3, [r3, #24]
 80030e2:	2b01      	cmp	r3, #1
 80030e4:	d005      	beq.n	80030f2 <HAL_PCD_Start+0x40>
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80030ea:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	639a      	str	r2, [r3, #56]	; 0x38
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	4618      	mov	r0, r3
 80030f8:	f001 ff6e 	bl	8004fd8 <USB_EnableGlobalInt>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	4618      	mov	r0, r3
 8003102:	f002 fff2 	bl	80060ea <USB_DevConnect>
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	2200      	movs	r2, #0
 800310a:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 800310e:	2300      	movs	r3, #0
 8003110:	4618      	mov	r0, r3
 8003112:	3710      	adds	r7, #16
 8003114:	46bd      	mov	sp, r7
 8003116:	bd80      	pop	{r7, pc}

08003118 <HAL_PCD_IRQHandler>:
 8003118:	b590      	push	{r4, r7, lr}
 800311a:	b08d      	sub	sp, #52	; 0x34
 800311c:	af00      	add	r7, sp, #0
 800311e:	6078      	str	r0, [r7, #4]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	623b      	str	r3, [r7, #32]
 8003126:	6a3b      	ldr	r3, [r7, #32]
 8003128:	61fb      	str	r3, [r7, #28]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	4618      	mov	r0, r3
 8003130:	f003 f8b0 	bl	8006294 <USB_GetMode>
 8003134:	4603      	mov	r3, r0
 8003136:	2b00      	cmp	r3, #0
 8003138:	f040 839d 	bne.w	8003876 <HAL_PCD_IRQHandler+0x75e>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	4618      	mov	r0, r3
 8003142:	f003 f814 	bl	800616e <USB_ReadInterrupts>
 8003146:	4603      	mov	r3, r0
 8003148:	2b00      	cmp	r3, #0
 800314a:	f000 8393 	beq.w	8003874 <HAL_PCD_IRQHandler+0x75c>
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	4618      	mov	r0, r3
 8003154:	f003 f80b 	bl	800616e <USB_ReadInterrupts>
 8003158:	4603      	mov	r3, r0
 800315a:	f003 0302 	and.w	r3, r3, #2
 800315e:	2b02      	cmp	r3, #2
 8003160:	d107      	bne.n	8003172 <HAL_PCD_IRQHandler+0x5a>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	695a      	ldr	r2, [r3, #20]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	f002 0202 	and.w	r2, r2, #2
 8003170:	615a      	str	r2, [r3, #20]
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	4618      	mov	r0, r3
 8003178:	f002 fff9 	bl	800616e <USB_ReadInterrupts>
 800317c:	4603      	mov	r3, r0
 800317e:	f003 0310 	and.w	r3, r3, #16
 8003182:	2b10      	cmp	r3, #16
 8003184:	d161      	bne.n	800324a <HAL_PCD_IRQHandler+0x132>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	681b      	ldr	r3, [r3, #0]
 800318a:	699a      	ldr	r2, [r3, #24]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	f022 0210 	bic.w	r2, r2, #16
 8003194:	619a      	str	r2, [r3, #24]
 8003196:	6a3b      	ldr	r3, [r7, #32]
 8003198:	6a1b      	ldr	r3, [r3, #32]
 800319a:	61bb      	str	r3, [r7, #24]
 800319c:	69bb      	ldr	r3, [r7, #24]
 800319e:	f003 020f 	and.w	r2, r3, #15
 80031a2:	4613      	mov	r3, r2
 80031a4:	00db      	lsls	r3, r3, #3
 80031a6:	1a9b      	subs	r3, r3, r2
 80031a8:	009b      	lsls	r3, r3, #2
 80031aa:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 80031ae:	687a      	ldr	r2, [r7, #4]
 80031b0:	4413      	add	r3, r2
 80031b2:	3304      	adds	r3, #4
 80031b4:	617b      	str	r3, [r7, #20]
 80031b6:	69bb      	ldr	r3, [r7, #24]
 80031b8:	0c5b      	lsrs	r3, r3, #17
 80031ba:	f003 030f 	and.w	r3, r3, #15
 80031be:	2b02      	cmp	r3, #2
 80031c0:	d124      	bne.n	800320c <HAL_PCD_IRQHandler+0xf4>
 80031c2:	69ba      	ldr	r2, [r7, #24]
 80031c4:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 80031c8:	4013      	ands	r3, r2
 80031ca:	2b00      	cmp	r3, #0
 80031cc:	d035      	beq.n	800323a <HAL_PCD_IRQHandler+0x122>
 80031ce:	697b      	ldr	r3, [r7, #20]
 80031d0:	68d9      	ldr	r1, [r3, #12]
 80031d2:	69bb      	ldr	r3, [r7, #24]
 80031d4:	091b      	lsrs	r3, r3, #4
 80031d6:	b29b      	uxth	r3, r3
 80031d8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80031dc:	b29b      	uxth	r3, r3
 80031de:	461a      	mov	r2, r3
 80031e0:	6a38      	ldr	r0, [r7, #32]
 80031e2:	f002 fe5f 	bl	8005ea4 <USB_ReadPacket>
 80031e6:	697b      	ldr	r3, [r7, #20]
 80031e8:	68da      	ldr	r2, [r3, #12]
 80031ea:	69bb      	ldr	r3, [r7, #24]
 80031ec:	091b      	lsrs	r3, r3, #4
 80031ee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80031f2:	441a      	add	r2, r3
 80031f4:	697b      	ldr	r3, [r7, #20]
 80031f6:	60da      	str	r2, [r3, #12]
 80031f8:	697b      	ldr	r3, [r7, #20]
 80031fa:	699a      	ldr	r2, [r3, #24]
 80031fc:	69bb      	ldr	r3, [r7, #24]
 80031fe:	091b      	lsrs	r3, r3, #4
 8003200:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003204:	441a      	add	r2, r3
 8003206:	697b      	ldr	r3, [r7, #20]
 8003208:	619a      	str	r2, [r3, #24]
 800320a:	e016      	b.n	800323a <HAL_PCD_IRQHandler+0x122>
 800320c:	69bb      	ldr	r3, [r7, #24]
 800320e:	0c5b      	lsrs	r3, r3, #17
 8003210:	f003 030f 	and.w	r3, r3, #15
 8003214:	2b06      	cmp	r3, #6
 8003216:	d110      	bne.n	800323a <HAL_PCD_IRQHandler+0x122>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 800321e:	2208      	movs	r2, #8
 8003220:	4619      	mov	r1, r3
 8003222:	6a38      	ldr	r0, [r7, #32]
 8003224:	f002 fe3e 	bl	8005ea4 <USB_ReadPacket>
 8003228:	697b      	ldr	r3, [r7, #20]
 800322a:	699a      	ldr	r2, [r3, #24]
 800322c:	69bb      	ldr	r3, [r7, #24]
 800322e:	091b      	lsrs	r3, r3, #4
 8003230:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003234:	441a      	add	r2, r3
 8003236:	697b      	ldr	r3, [r7, #20]
 8003238:	619a      	str	r2, [r3, #24]
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	699a      	ldr	r2, [r3, #24]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	f042 0210 	orr.w	r2, r2, #16
 8003248:	619a      	str	r2, [r3, #24]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	4618      	mov	r0, r3
 8003250:	f002 ff8d 	bl	800616e <USB_ReadInterrupts>
 8003254:	4603      	mov	r3, r0
 8003256:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800325a:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 800325e:	d16e      	bne.n	800333e <HAL_PCD_IRQHandler+0x226>
 8003260:	2300      	movs	r3, #0
 8003262:	627b      	str	r3, [r7, #36]	; 0x24
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	4618      	mov	r0, r3
 800326a:	f002 ff93 	bl	8006194 <USB_ReadDevAllOutEpInterrupt>
 800326e:	62b8      	str	r0, [r7, #40]	; 0x28
 8003270:	e062      	b.n	8003338 <HAL_PCD_IRQHandler+0x220>
 8003272:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003274:	f003 0301 	and.w	r3, r3, #1
 8003278:	2b00      	cmp	r3, #0
 800327a:	d057      	beq.n	800332c <HAL_PCD_IRQHandler+0x214>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003282:	b2d2      	uxtb	r2, r2
 8003284:	4611      	mov	r1, r2
 8003286:	4618      	mov	r0, r3
 8003288:	f002 ffb8 	bl	80061fc <USB_ReadDevOutEPInterrupt>
 800328c:	6138      	str	r0, [r7, #16]
 800328e:	693b      	ldr	r3, [r7, #16]
 8003290:	f003 0301 	and.w	r3, r3, #1
 8003294:	2b00      	cmp	r3, #0
 8003296:	d00c      	beq.n	80032b2 <HAL_PCD_IRQHandler+0x19a>
 8003298:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800329a:	015a      	lsls	r2, r3, #5
 800329c:	69fb      	ldr	r3, [r7, #28]
 800329e:	4413      	add	r3, r2
 80032a0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80032a4:	461a      	mov	r2, r3
 80032a6:	2301      	movs	r3, #1
 80032a8:	6093      	str	r3, [r2, #8]
 80032aa:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80032ac:	6878      	ldr	r0, [r7, #4]
 80032ae:	f000 fdb1 	bl	8003e14 <PCD_EP_OutXfrComplete_int>
 80032b2:	693b      	ldr	r3, [r7, #16]
 80032b4:	f003 0308 	and.w	r3, r3, #8
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d00c      	beq.n	80032d6 <HAL_PCD_IRQHandler+0x1be>
 80032bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032be:	015a      	lsls	r2, r3, #5
 80032c0:	69fb      	ldr	r3, [r7, #28]
 80032c2:	4413      	add	r3, r2
 80032c4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80032c8:	461a      	mov	r2, r3
 80032ca:	2308      	movs	r3, #8
 80032cc:	6093      	str	r3, [r2, #8]
 80032ce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80032d0:	6878      	ldr	r0, [r7, #4]
 80032d2:	f000 feab 	bl	800402c <PCD_EP_OutSetupPacket_int>
 80032d6:	693b      	ldr	r3, [r7, #16]
 80032d8:	f003 0310 	and.w	r3, r3, #16
 80032dc:	2b00      	cmp	r3, #0
 80032de:	d008      	beq.n	80032f2 <HAL_PCD_IRQHandler+0x1da>
 80032e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032e2:	015a      	lsls	r2, r3, #5
 80032e4:	69fb      	ldr	r3, [r7, #28]
 80032e6:	4413      	add	r3, r2
 80032e8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80032ec:	461a      	mov	r2, r3
 80032ee:	2310      	movs	r3, #16
 80032f0:	6093      	str	r3, [r2, #8]
 80032f2:	693b      	ldr	r3, [r7, #16]
 80032f4:	f003 0320 	and.w	r3, r3, #32
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d008      	beq.n	800330e <HAL_PCD_IRQHandler+0x1f6>
 80032fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032fe:	015a      	lsls	r2, r3, #5
 8003300:	69fb      	ldr	r3, [r7, #28]
 8003302:	4413      	add	r3, r2
 8003304:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003308:	461a      	mov	r2, r3
 800330a:	2320      	movs	r3, #32
 800330c:	6093      	str	r3, [r2, #8]
 800330e:	693b      	ldr	r3, [r7, #16]
 8003310:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003314:	2b00      	cmp	r3, #0
 8003316:	d009      	beq.n	800332c <HAL_PCD_IRQHandler+0x214>
 8003318:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800331a:	015a      	lsls	r2, r3, #5
 800331c:	69fb      	ldr	r3, [r7, #28]
 800331e:	4413      	add	r3, r2
 8003320:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003324:	461a      	mov	r2, r3
 8003326:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800332a:	6093      	str	r3, [r2, #8]
 800332c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800332e:	3301      	adds	r3, #1
 8003330:	627b      	str	r3, [r7, #36]	; 0x24
 8003332:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003334:	085b      	lsrs	r3, r3, #1
 8003336:	62bb      	str	r3, [r7, #40]	; 0x28
 8003338:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800333a:	2b00      	cmp	r3, #0
 800333c:	d199      	bne.n	8003272 <HAL_PCD_IRQHandler+0x15a>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	4618      	mov	r0, r3
 8003344:	f002 ff13 	bl	800616e <USB_ReadInterrupts>
 8003348:	4603      	mov	r3, r0
 800334a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800334e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8003352:	f040 80c0 	bne.w	80034d6 <HAL_PCD_IRQHandler+0x3be>
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	4618      	mov	r0, r3
 800335c:	f002 ff34 	bl	80061c8 <USB_ReadDevAllInEpInterrupt>
 8003360:	62b8      	str	r0, [r7, #40]	; 0x28
 8003362:	2300      	movs	r3, #0
 8003364:	627b      	str	r3, [r7, #36]	; 0x24
 8003366:	e0b2      	b.n	80034ce <HAL_PCD_IRQHandler+0x3b6>
 8003368:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800336a:	f003 0301 	and.w	r3, r3, #1
 800336e:	2b00      	cmp	r3, #0
 8003370:	f000 80a7 	beq.w	80034c2 <HAL_PCD_IRQHandler+0x3aa>
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800337a:	b2d2      	uxtb	r2, r2
 800337c:	4611      	mov	r1, r2
 800337e:	4618      	mov	r0, r3
 8003380:	f002 ff5a 	bl	8006238 <USB_ReadDevInEPInterrupt>
 8003384:	6138      	str	r0, [r7, #16]
 8003386:	693b      	ldr	r3, [r7, #16]
 8003388:	f003 0301 	and.w	r3, r3, #1
 800338c:	2b00      	cmp	r3, #0
 800338e:	d057      	beq.n	8003440 <HAL_PCD_IRQHandler+0x328>
 8003390:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003392:	f003 030f 	and.w	r3, r3, #15
 8003396:	2201      	movs	r2, #1
 8003398:	fa02 f303 	lsl.w	r3, r2, r3
 800339c:	60fb      	str	r3, [r7, #12]
 800339e:	69fb      	ldr	r3, [r7, #28]
 80033a0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80033a4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	43db      	mvns	r3, r3
 80033aa:	69f9      	ldr	r1, [r7, #28]
 80033ac:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80033b0:	4013      	ands	r3, r2
 80033b2:	634b      	str	r3, [r1, #52]	; 0x34
 80033b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033b6:	015a      	lsls	r2, r3, #5
 80033b8:	69fb      	ldr	r3, [r7, #28]
 80033ba:	4413      	add	r3, r2
 80033bc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80033c0:	461a      	mov	r2, r3
 80033c2:	2301      	movs	r3, #1
 80033c4:	6093      	str	r3, [r2, #8]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	691b      	ldr	r3, [r3, #16]
 80033ca:	2b01      	cmp	r3, #1
 80033cc:	d132      	bne.n	8003434 <HAL_PCD_IRQHandler+0x31c>
 80033ce:	6879      	ldr	r1, [r7, #4]
 80033d0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80033d2:	4613      	mov	r3, r2
 80033d4:	00db      	lsls	r3, r3, #3
 80033d6:	1a9b      	subs	r3, r3, r2
 80033d8:	009b      	lsls	r3, r3, #2
 80033da:	440b      	add	r3, r1
 80033dc:	3348      	adds	r3, #72	; 0x48
 80033de:	6819      	ldr	r1, [r3, #0]
 80033e0:	6878      	ldr	r0, [r7, #4]
 80033e2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80033e4:	4613      	mov	r3, r2
 80033e6:	00db      	lsls	r3, r3, #3
 80033e8:	1a9b      	subs	r3, r3, r2
 80033ea:	009b      	lsls	r3, r3, #2
 80033ec:	4403      	add	r3, r0
 80033ee:	3344      	adds	r3, #68	; 0x44
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	4419      	add	r1, r3
 80033f4:	6878      	ldr	r0, [r7, #4]
 80033f6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80033f8:	4613      	mov	r3, r2
 80033fa:	00db      	lsls	r3, r3, #3
 80033fc:	1a9b      	subs	r3, r3, r2
 80033fe:	009b      	lsls	r3, r3, #2
 8003400:	4403      	add	r3, r0
 8003402:	3348      	adds	r3, #72	; 0x48
 8003404:	6019      	str	r1, [r3, #0]
 8003406:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003408:	2b00      	cmp	r3, #0
 800340a:	d113      	bne.n	8003434 <HAL_PCD_IRQHandler+0x31c>
 800340c:	6879      	ldr	r1, [r7, #4]
 800340e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003410:	4613      	mov	r3, r2
 8003412:	00db      	lsls	r3, r3, #3
 8003414:	1a9b      	subs	r3, r3, r2
 8003416:	009b      	lsls	r3, r3, #2
 8003418:	440b      	add	r3, r1
 800341a:	3350      	adds	r3, #80	; 0x50
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	2b00      	cmp	r3, #0
 8003420:	d108      	bne.n	8003434 <HAL_PCD_IRQHandler+0x31c>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	6818      	ldr	r0, [r3, #0]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 800342c:	461a      	mov	r2, r3
 800342e:	2101      	movs	r1, #1
 8003430:	f002 ff62 	bl	80062f8 <USB_EP0_OutStart>
 8003434:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003436:	b2db      	uxtb	r3, r3
 8003438:	4619      	mov	r1, r3
 800343a:	6878      	ldr	r0, [r7, #4]
 800343c:	f005 f8eb 	bl	8008616 <HAL_PCD_DataInStageCallback>
 8003440:	693b      	ldr	r3, [r7, #16]
 8003442:	f003 0308 	and.w	r3, r3, #8
 8003446:	2b00      	cmp	r3, #0
 8003448:	d008      	beq.n	800345c <HAL_PCD_IRQHandler+0x344>
 800344a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800344c:	015a      	lsls	r2, r3, #5
 800344e:	69fb      	ldr	r3, [r7, #28]
 8003450:	4413      	add	r3, r2
 8003452:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8003456:	461a      	mov	r2, r3
 8003458:	2308      	movs	r3, #8
 800345a:	6093      	str	r3, [r2, #8]
 800345c:	693b      	ldr	r3, [r7, #16]
 800345e:	f003 0310 	and.w	r3, r3, #16
 8003462:	2b00      	cmp	r3, #0
 8003464:	d008      	beq.n	8003478 <HAL_PCD_IRQHandler+0x360>
 8003466:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003468:	015a      	lsls	r2, r3, #5
 800346a:	69fb      	ldr	r3, [r7, #28]
 800346c:	4413      	add	r3, r2
 800346e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8003472:	461a      	mov	r2, r3
 8003474:	2310      	movs	r3, #16
 8003476:	6093      	str	r3, [r2, #8]
 8003478:	693b      	ldr	r3, [r7, #16]
 800347a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800347e:	2b00      	cmp	r3, #0
 8003480:	d008      	beq.n	8003494 <HAL_PCD_IRQHandler+0x37c>
 8003482:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003484:	015a      	lsls	r2, r3, #5
 8003486:	69fb      	ldr	r3, [r7, #28]
 8003488:	4413      	add	r3, r2
 800348a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800348e:	461a      	mov	r2, r3
 8003490:	2340      	movs	r3, #64	; 0x40
 8003492:	6093      	str	r3, [r2, #8]
 8003494:	693b      	ldr	r3, [r7, #16]
 8003496:	f003 0302 	and.w	r3, r3, #2
 800349a:	2b00      	cmp	r3, #0
 800349c:	d008      	beq.n	80034b0 <HAL_PCD_IRQHandler+0x398>
 800349e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80034a0:	015a      	lsls	r2, r3, #5
 80034a2:	69fb      	ldr	r3, [r7, #28]
 80034a4:	4413      	add	r3, r2
 80034a6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80034aa:	461a      	mov	r2, r3
 80034ac:	2302      	movs	r3, #2
 80034ae:	6093      	str	r3, [r2, #8]
 80034b0:	693b      	ldr	r3, [r7, #16]
 80034b2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d003      	beq.n	80034c2 <HAL_PCD_IRQHandler+0x3aa>
 80034ba:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80034bc:	6878      	ldr	r0, [r7, #4]
 80034be:	f000 fc1b 	bl	8003cf8 <PCD_WriteEmptyTxFifo>
 80034c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80034c4:	3301      	adds	r3, #1
 80034c6:	627b      	str	r3, [r7, #36]	; 0x24
 80034c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80034ca:	085b      	lsrs	r3, r3, #1
 80034cc:	62bb      	str	r3, [r7, #40]	; 0x28
 80034ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	f47f af49 	bne.w	8003368 <HAL_PCD_IRQHandler+0x250>
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	4618      	mov	r0, r3
 80034dc:	f002 fe47 	bl	800616e <USB_ReadInterrupts>
 80034e0:	4603      	mov	r3, r0
 80034e2:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80034e6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80034ea:	d122      	bne.n	8003532 <HAL_PCD_IRQHandler+0x41a>
 80034ec:	69fb      	ldr	r3, [r7, #28]
 80034ee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80034f2:	685b      	ldr	r3, [r3, #4]
 80034f4:	69fa      	ldr	r2, [r7, #28]
 80034f6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80034fa:	f023 0301 	bic.w	r3, r3, #1
 80034fe:	6053      	str	r3, [r2, #4]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	f893 33f4 	ldrb.w	r3, [r3, #1012]	; 0x3f4
 8003506:	2b01      	cmp	r3, #1
 8003508:	d108      	bne.n	800351c <HAL_PCD_IRQHandler+0x404>
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	2200      	movs	r2, #0
 800350e:	f883 23f4 	strb.w	r2, [r3, #1012]	; 0x3f4
 8003512:	2100      	movs	r1, #0
 8003514:	6878      	ldr	r0, [r7, #4]
 8003516:	f000 fe27 	bl	8004168 <HAL_PCDEx_LPM_Callback>
 800351a:	e002      	b.n	8003522 <HAL_PCD_IRQHandler+0x40a>
 800351c:	6878      	ldr	r0, [r7, #4]
 800351e:	f005 f8f1 	bl	8008704 <HAL_PCD_ResumeCallback>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	695a      	ldr	r2, [r3, #20]
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8003530:	615a      	str	r2, [r3, #20]
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	4618      	mov	r0, r3
 8003538:	f002 fe19 	bl	800616e <USB_ReadInterrupts>
 800353c:	4603      	mov	r3, r0
 800353e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003542:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003546:	d112      	bne.n	800356e <HAL_PCD_IRQHandler+0x456>
 8003548:	69fb      	ldr	r3, [r7, #28]
 800354a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800354e:	689b      	ldr	r3, [r3, #8]
 8003550:	f003 0301 	and.w	r3, r3, #1
 8003554:	2b01      	cmp	r3, #1
 8003556:	d102      	bne.n	800355e <HAL_PCD_IRQHandler+0x446>
 8003558:	6878      	ldr	r0, [r7, #4]
 800355a:	f005 f8ad 	bl	80086b8 <HAL_PCD_SuspendCallback>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	695a      	ldr	r2, [r3, #20]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 800356c:	615a      	str	r2, [r3, #20]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	4618      	mov	r0, r3
 8003574:	f002 fdfb 	bl	800616e <USB_ReadInterrupts>
 8003578:	4603      	mov	r3, r0
 800357a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800357e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003582:	f040 80c7 	bne.w	8003714 <HAL_PCD_IRQHandler+0x5fc>
 8003586:	69fb      	ldr	r3, [r7, #28]
 8003588:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800358c:	685b      	ldr	r3, [r3, #4]
 800358e:	69fa      	ldr	r2, [r7, #28]
 8003590:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003594:	f023 0301 	bic.w	r3, r3, #1
 8003598:	6053      	str	r3, [r2, #4]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	2110      	movs	r1, #16
 80035a0:	4618      	mov	r0, r3
 80035a2:	f001 fec9 	bl	8005338 <USB_FlushTxFifo>
 80035a6:	2300      	movs	r3, #0
 80035a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80035aa:	e056      	b.n	800365a <HAL_PCD_IRQHandler+0x542>
 80035ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035ae:	015a      	lsls	r2, r3, #5
 80035b0:	69fb      	ldr	r3, [r7, #28]
 80035b2:	4413      	add	r3, r2
 80035b4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80035b8:	461a      	mov	r2, r3
 80035ba:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80035be:	6093      	str	r3, [r2, #8]
 80035c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035c2:	015a      	lsls	r2, r3, #5
 80035c4:	69fb      	ldr	r3, [r7, #28]
 80035c6:	4413      	add	r3, r2
 80035c8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80035d0:	0151      	lsls	r1, r2, #5
 80035d2:	69fa      	ldr	r2, [r7, #28]
 80035d4:	440a      	add	r2, r1
 80035d6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80035da:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80035de:	6013      	str	r3, [r2, #0]
 80035e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035e2:	015a      	lsls	r2, r3, #5
 80035e4:	69fb      	ldr	r3, [r7, #28]
 80035e6:	4413      	add	r3, r2
 80035e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80035f0:	0151      	lsls	r1, r2, #5
 80035f2:	69fa      	ldr	r2, [r7, #28]
 80035f4:	440a      	add	r2, r1
 80035f6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80035fa:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80035fe:	6013      	str	r3, [r2, #0]
 8003600:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003602:	015a      	lsls	r2, r3, #5
 8003604:	69fb      	ldr	r3, [r7, #28]
 8003606:	4413      	add	r3, r2
 8003608:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800360c:	461a      	mov	r2, r3
 800360e:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8003612:	6093      	str	r3, [r2, #8]
 8003614:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003616:	015a      	lsls	r2, r3, #5
 8003618:	69fb      	ldr	r3, [r7, #28]
 800361a:	4413      	add	r3, r2
 800361c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003624:	0151      	lsls	r1, r2, #5
 8003626:	69fa      	ldr	r2, [r7, #28]
 8003628:	440a      	add	r2, r1
 800362a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800362e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003632:	6013      	str	r3, [r2, #0]
 8003634:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003636:	015a      	lsls	r2, r3, #5
 8003638:	69fb      	ldr	r3, [r7, #28]
 800363a:	4413      	add	r3, r2
 800363c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003644:	0151      	lsls	r1, r2, #5
 8003646:	69fa      	ldr	r2, [r7, #28]
 8003648:	440a      	add	r2, r1
 800364a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800364e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8003652:	6013      	str	r3, [r2, #0]
 8003654:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003656:	3301      	adds	r3, #1
 8003658:	62fb      	str	r3, [r7, #44]	; 0x2c
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	685b      	ldr	r3, [r3, #4]
 800365e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003660:	429a      	cmp	r2, r3
 8003662:	d3a3      	bcc.n	80035ac <HAL_PCD_IRQHandler+0x494>
 8003664:	69fb      	ldr	r3, [r7, #28]
 8003666:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800366a:	69db      	ldr	r3, [r3, #28]
 800366c:	69fa      	ldr	r2, [r7, #28]
 800366e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003672:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8003676:	61d3      	str	r3, [r2, #28]
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800367c:	2b00      	cmp	r3, #0
 800367e:	d016      	beq.n	80036ae <HAL_PCD_IRQHandler+0x596>
 8003680:	69fb      	ldr	r3, [r7, #28]
 8003682:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003686:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800368a:	69fa      	ldr	r2, [r7, #28]
 800368c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003690:	f043 030b 	orr.w	r3, r3, #11
 8003694:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8003698:	69fb      	ldr	r3, [r7, #28]
 800369a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800369e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036a0:	69fa      	ldr	r2, [r7, #28]
 80036a2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80036a6:	f043 030b 	orr.w	r3, r3, #11
 80036aa:	6453      	str	r3, [r2, #68]	; 0x44
 80036ac:	e015      	b.n	80036da <HAL_PCD_IRQHandler+0x5c2>
 80036ae:	69fb      	ldr	r3, [r7, #28]
 80036b0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80036b4:	695b      	ldr	r3, [r3, #20]
 80036b6:	69fa      	ldr	r2, [r7, #28]
 80036b8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80036bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80036c0:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 80036c4:	6153      	str	r3, [r2, #20]
 80036c6:	69fb      	ldr	r3, [r7, #28]
 80036c8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80036cc:	691b      	ldr	r3, [r3, #16]
 80036ce:	69fa      	ldr	r2, [r7, #28]
 80036d0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80036d4:	f043 030b 	orr.w	r3, r3, #11
 80036d8:	6113      	str	r3, [r2, #16]
 80036da:	69fb      	ldr	r3, [r7, #28]
 80036dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	69fa      	ldr	r2, [r7, #28]
 80036e4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80036e8:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80036ec:	6013      	str	r3, [r2, #0]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	6818      	ldr	r0, [r3, #0]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	691b      	ldr	r3, [r3, #16]
 80036f6:	b2d9      	uxtb	r1, r3
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 80036fe:	461a      	mov	r2, r3
 8003700:	f002 fdfa 	bl	80062f8 <USB_EP0_OutStart>
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	695a      	ldr	r2, [r3, #20]
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8003712:	615a      	str	r2, [r3, #20]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	4618      	mov	r0, r3
 800371a:	f002 fd28 	bl	800616e <USB_ReadInterrupts>
 800371e:	4603      	mov	r3, r0
 8003720:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003724:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003728:	d124      	bne.n	8003774 <HAL_PCD_IRQHandler+0x65c>
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	4618      	mov	r0, r3
 8003730:	f002 fdbe 	bl	80062b0 <USB_ActivateSetup>
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	4618      	mov	r0, r3
 800373a:	f001 fe5e 	bl	80053fa <USB_GetDevSpeed>
 800373e:	4603      	mov	r3, r0
 8003740:	461a      	mov	r2, r3
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	60da      	str	r2, [r3, #12]
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681c      	ldr	r4, [r3, #0]
 800374a:	f001 f959 	bl	8004a00 <HAL_RCC_GetHCLKFreq>
 800374e:	4601      	mov	r1, r0
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	68db      	ldr	r3, [r3, #12]
 8003754:	b2db      	uxtb	r3, r3
 8003756:	461a      	mov	r2, r3
 8003758:	4620      	mov	r0, r4
 800375a:	f001 fb9b 	bl	8004e94 <USB_SetTurnaroundTime>
 800375e:	6878      	ldr	r0, [r7, #4]
 8003760:	f004 ff81 	bl	8008666 <HAL_PCD_ResetCallback>
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	695a      	ldr	r2, [r3, #20]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8003772:	615a      	str	r2, [r3, #20]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	4618      	mov	r0, r3
 800377a:	f002 fcf8 	bl	800616e <USB_ReadInterrupts>
 800377e:	4603      	mov	r3, r0
 8003780:	f003 0308 	and.w	r3, r3, #8
 8003784:	2b08      	cmp	r3, #8
 8003786:	d10a      	bne.n	800379e <HAL_PCD_IRQHandler+0x686>
 8003788:	6878      	ldr	r0, [r7, #4]
 800378a:	f004 ff5e 	bl	800864a <HAL_PCD_SOFCallback>
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	695a      	ldr	r2, [r3, #20]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	f002 0208 	and.w	r2, r2, #8
 800379c:	615a      	str	r2, [r3, #20]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	4618      	mov	r0, r3
 80037a4:	f002 fce3 	bl	800616e <USB_ReadInterrupts>
 80037a8:	4603      	mov	r3, r0
 80037aa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80037ae:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80037b2:	d10f      	bne.n	80037d4 <HAL_PCD_IRQHandler+0x6bc>
 80037b4:	2300      	movs	r3, #0
 80037b6:	627b      	str	r3, [r7, #36]	; 0x24
 80037b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037ba:	b2db      	uxtb	r3, r3
 80037bc:	4619      	mov	r1, r3
 80037be:	6878      	ldr	r0, [r7, #4]
 80037c0:	f004 ffc0 	bl	8008744 <HAL_PCD_ISOINIncompleteCallback>
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	695a      	ldr	r2, [r3, #20]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80037d2:	615a      	str	r2, [r3, #20]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	4618      	mov	r0, r3
 80037da:	f002 fcc8 	bl	800616e <USB_ReadInterrupts>
 80037de:	4603      	mov	r3, r0
 80037e0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80037e4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80037e8:	d10f      	bne.n	800380a <HAL_PCD_IRQHandler+0x6f2>
 80037ea:	2300      	movs	r3, #0
 80037ec:	627b      	str	r3, [r7, #36]	; 0x24
 80037ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037f0:	b2db      	uxtb	r3, r3
 80037f2:	4619      	mov	r1, r3
 80037f4:	6878      	ldr	r0, [r7, #4]
 80037f6:	f004 ff93 	bl	8008720 <HAL_PCD_ISOOUTIncompleteCallback>
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	695a      	ldr	r2, [r3, #20]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8003808:	615a      	str	r2, [r3, #20]
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	4618      	mov	r0, r3
 8003810:	f002 fcad 	bl	800616e <USB_ReadInterrupts>
 8003814:	4603      	mov	r3, r0
 8003816:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800381a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800381e:	d10a      	bne.n	8003836 <HAL_PCD_IRQHandler+0x71e>
 8003820:	6878      	ldr	r0, [r7, #4]
 8003822:	f004 ffa1 	bl	8008768 <HAL_PCD_ConnectCallback>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	695a      	ldr	r2, [r3, #20]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8003834:	615a      	str	r2, [r3, #20]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	4618      	mov	r0, r3
 800383c:	f002 fc97 	bl	800616e <USB_ReadInterrupts>
 8003840:	4603      	mov	r3, r0
 8003842:	f003 0304 	and.w	r3, r3, #4
 8003846:	2b04      	cmp	r3, #4
 8003848:	d115      	bne.n	8003876 <HAL_PCD_IRQHandler+0x75e>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	685b      	ldr	r3, [r3, #4]
 8003850:	61bb      	str	r3, [r7, #24]
 8003852:	69bb      	ldr	r3, [r7, #24]
 8003854:	f003 0304 	and.w	r3, r3, #4
 8003858:	2b00      	cmp	r3, #0
 800385a:	d002      	beq.n	8003862 <HAL_PCD_IRQHandler+0x74a>
 800385c:	6878      	ldr	r0, [r7, #4]
 800385e:	f004 ff91 	bl	8008784 <HAL_PCD_DisconnectCallback>
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	6859      	ldr	r1, [r3, #4]
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	69ba      	ldr	r2, [r7, #24]
 800386e:	430a      	orrs	r2, r1
 8003870:	605a      	str	r2, [r3, #4]
 8003872:	e000      	b.n	8003876 <HAL_PCD_IRQHandler+0x75e>
 8003874:	bf00      	nop
 8003876:	3734      	adds	r7, #52	; 0x34
 8003878:	46bd      	mov	sp, r7
 800387a:	bd90      	pop	{r4, r7, pc}

0800387c <HAL_PCD_SetAddress>:
 800387c:	b580      	push	{r7, lr}
 800387e:	b082      	sub	sp, #8
 8003880:	af00      	add	r7, sp, #0
 8003882:	6078      	str	r0, [r7, #4]
 8003884:	460b      	mov	r3, r1
 8003886:	70fb      	strb	r3, [r7, #3]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 800388e:	2b01      	cmp	r3, #1
 8003890:	d101      	bne.n	8003896 <HAL_PCD_SetAddress+0x1a>
 8003892:	2302      	movs	r3, #2
 8003894:	e013      	b.n	80038be <HAL_PCD_SetAddress+0x42>
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	2201      	movs	r2, #1
 800389a:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	78fa      	ldrb	r2, [r7, #3]
 80038a2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	78fa      	ldrb	r2, [r7, #3]
 80038ac:	4611      	mov	r1, r2
 80038ae:	4618      	mov	r0, r3
 80038b0:	f002 fbf5 	bl	800609e <USB_SetDevAddress>
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	2200      	movs	r2, #0
 80038b8:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 80038bc:	2300      	movs	r3, #0
 80038be:	4618      	mov	r0, r3
 80038c0:	3708      	adds	r7, #8
 80038c2:	46bd      	mov	sp, r7
 80038c4:	bd80      	pop	{r7, pc}

080038c6 <HAL_PCD_EP_Open>:
 80038c6:	b580      	push	{r7, lr}
 80038c8:	b084      	sub	sp, #16
 80038ca:	af00      	add	r7, sp, #0
 80038cc:	6078      	str	r0, [r7, #4]
 80038ce:	4608      	mov	r0, r1
 80038d0:	4611      	mov	r1, r2
 80038d2:	461a      	mov	r2, r3
 80038d4:	4603      	mov	r3, r0
 80038d6:	70fb      	strb	r3, [r7, #3]
 80038d8:	460b      	mov	r3, r1
 80038da:	803b      	strh	r3, [r7, #0]
 80038dc:	4613      	mov	r3, r2
 80038de:	70bb      	strb	r3, [r7, #2]
 80038e0:	2300      	movs	r3, #0
 80038e2:	72fb      	strb	r3, [r7, #11]
 80038e4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	da0f      	bge.n	800390c <HAL_PCD_EP_Open+0x46>
 80038ec:	78fb      	ldrb	r3, [r7, #3]
 80038ee:	f003 020f 	and.w	r2, r3, #15
 80038f2:	4613      	mov	r3, r2
 80038f4:	00db      	lsls	r3, r3, #3
 80038f6:	1a9b      	subs	r3, r3, r2
 80038f8:	009b      	lsls	r3, r3, #2
 80038fa:	3338      	adds	r3, #56	; 0x38
 80038fc:	687a      	ldr	r2, [r7, #4]
 80038fe:	4413      	add	r3, r2
 8003900:	3304      	adds	r3, #4
 8003902:	60fb      	str	r3, [r7, #12]
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	2201      	movs	r2, #1
 8003908:	705a      	strb	r2, [r3, #1]
 800390a:	e00f      	b.n	800392c <HAL_PCD_EP_Open+0x66>
 800390c:	78fb      	ldrb	r3, [r7, #3]
 800390e:	f003 020f 	and.w	r2, r3, #15
 8003912:	4613      	mov	r3, r2
 8003914:	00db      	lsls	r3, r3, #3
 8003916:	1a9b      	subs	r3, r3, r2
 8003918:	009b      	lsls	r3, r3, #2
 800391a:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 800391e:	687a      	ldr	r2, [r7, #4]
 8003920:	4413      	add	r3, r2
 8003922:	3304      	adds	r3, #4
 8003924:	60fb      	str	r3, [r7, #12]
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	2200      	movs	r2, #0
 800392a:	705a      	strb	r2, [r3, #1]
 800392c:	78fb      	ldrb	r3, [r7, #3]
 800392e:	f003 030f 	and.w	r3, r3, #15
 8003932:	b2da      	uxtb	r2, r3
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	701a      	strb	r2, [r3, #0]
 8003938:	883a      	ldrh	r2, [r7, #0]
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	609a      	str	r2, [r3, #8]
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	78ba      	ldrb	r2, [r7, #2]
 8003942:	70da      	strb	r2, [r3, #3]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	785b      	ldrb	r3, [r3, #1]
 8003948:	2b00      	cmp	r3, #0
 800394a:	d004      	beq.n	8003956 <HAL_PCD_EP_Open+0x90>
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	781b      	ldrb	r3, [r3, #0]
 8003950:	b29a      	uxth	r2, r3
 8003952:	68fb      	ldr	r3, [r7, #12]
 8003954:	80da      	strh	r2, [r3, #6]
 8003956:	78bb      	ldrb	r3, [r7, #2]
 8003958:	2b02      	cmp	r3, #2
 800395a:	d102      	bne.n	8003962 <HAL_PCD_EP_Open+0x9c>
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	2200      	movs	r2, #0
 8003960:	711a      	strb	r2, [r3, #4]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 8003968:	2b01      	cmp	r3, #1
 800396a:	d101      	bne.n	8003970 <HAL_PCD_EP_Open+0xaa>
 800396c:	2302      	movs	r3, #2
 800396e:	e00e      	b.n	800398e <HAL_PCD_EP_Open+0xc8>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	2201      	movs	r2, #1
 8003974:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	68f9      	ldr	r1, [r7, #12]
 800397e:	4618      	mov	r0, r3
 8003980:	f001 fd60 	bl	8005444 <USB_ActivateEndpoint>
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	2200      	movs	r2, #0
 8003988:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 800398c:	7afb      	ldrb	r3, [r7, #11]
 800398e:	4618      	mov	r0, r3
 8003990:	3710      	adds	r7, #16
 8003992:	46bd      	mov	sp, r7
 8003994:	bd80      	pop	{r7, pc}

08003996 <HAL_PCD_EP_Close>:
 8003996:	b580      	push	{r7, lr}
 8003998:	b084      	sub	sp, #16
 800399a:	af00      	add	r7, sp, #0
 800399c:	6078      	str	r0, [r7, #4]
 800399e:	460b      	mov	r3, r1
 80039a0:	70fb      	strb	r3, [r7, #3]
 80039a2:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	da0f      	bge.n	80039ca <HAL_PCD_EP_Close+0x34>
 80039aa:	78fb      	ldrb	r3, [r7, #3]
 80039ac:	f003 020f 	and.w	r2, r3, #15
 80039b0:	4613      	mov	r3, r2
 80039b2:	00db      	lsls	r3, r3, #3
 80039b4:	1a9b      	subs	r3, r3, r2
 80039b6:	009b      	lsls	r3, r3, #2
 80039b8:	3338      	adds	r3, #56	; 0x38
 80039ba:	687a      	ldr	r2, [r7, #4]
 80039bc:	4413      	add	r3, r2
 80039be:	3304      	adds	r3, #4
 80039c0:	60fb      	str	r3, [r7, #12]
 80039c2:	68fb      	ldr	r3, [r7, #12]
 80039c4:	2201      	movs	r2, #1
 80039c6:	705a      	strb	r2, [r3, #1]
 80039c8:	e00f      	b.n	80039ea <HAL_PCD_EP_Close+0x54>
 80039ca:	78fb      	ldrb	r3, [r7, #3]
 80039cc:	f003 020f 	and.w	r2, r3, #15
 80039d0:	4613      	mov	r3, r2
 80039d2:	00db      	lsls	r3, r3, #3
 80039d4:	1a9b      	subs	r3, r3, r2
 80039d6:	009b      	lsls	r3, r3, #2
 80039d8:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 80039dc:	687a      	ldr	r2, [r7, #4]
 80039de:	4413      	add	r3, r2
 80039e0:	3304      	adds	r3, #4
 80039e2:	60fb      	str	r3, [r7, #12]
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	2200      	movs	r2, #0
 80039e8:	705a      	strb	r2, [r3, #1]
 80039ea:	78fb      	ldrb	r3, [r7, #3]
 80039ec:	f003 030f 	and.w	r3, r3, #15
 80039f0:	b2da      	uxtb	r2, r3
 80039f2:	68fb      	ldr	r3, [r7, #12]
 80039f4:	701a      	strb	r2, [r3, #0]
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 80039fc:	2b01      	cmp	r3, #1
 80039fe:	d101      	bne.n	8003a04 <HAL_PCD_EP_Close+0x6e>
 8003a00:	2302      	movs	r3, #2
 8003a02:	e00e      	b.n	8003a22 <HAL_PCD_EP_Close+0x8c>
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	2201      	movs	r2, #1
 8003a08:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	68f9      	ldr	r1, [r7, #12]
 8003a12:	4618      	mov	r0, r3
 8003a14:	f001 fd9e 	bl	8005554 <USB_DeactivateEndpoint>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003a20:	2300      	movs	r3, #0
 8003a22:	4618      	mov	r0, r3
 8003a24:	3710      	adds	r7, #16
 8003a26:	46bd      	mov	sp, r7
 8003a28:	bd80      	pop	{r7, pc}

08003a2a <HAL_PCD_EP_Receive>:
 8003a2a:	b580      	push	{r7, lr}
 8003a2c:	b086      	sub	sp, #24
 8003a2e:	af00      	add	r7, sp, #0
 8003a30:	60f8      	str	r0, [r7, #12]
 8003a32:	607a      	str	r2, [r7, #4]
 8003a34:	603b      	str	r3, [r7, #0]
 8003a36:	460b      	mov	r3, r1
 8003a38:	72fb      	strb	r3, [r7, #11]
 8003a3a:	7afb      	ldrb	r3, [r7, #11]
 8003a3c:	f003 020f 	and.w	r2, r3, #15
 8003a40:	4613      	mov	r3, r2
 8003a42:	00db      	lsls	r3, r3, #3
 8003a44:	1a9b      	subs	r3, r3, r2
 8003a46:	009b      	lsls	r3, r3, #2
 8003a48:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8003a4c:	68fa      	ldr	r2, [r7, #12]
 8003a4e:	4413      	add	r3, r2
 8003a50:	3304      	adds	r3, #4
 8003a52:	617b      	str	r3, [r7, #20]
 8003a54:	697b      	ldr	r3, [r7, #20]
 8003a56:	687a      	ldr	r2, [r7, #4]
 8003a58:	60da      	str	r2, [r3, #12]
 8003a5a:	697b      	ldr	r3, [r7, #20]
 8003a5c:	683a      	ldr	r2, [r7, #0]
 8003a5e:	615a      	str	r2, [r3, #20]
 8003a60:	697b      	ldr	r3, [r7, #20]
 8003a62:	2200      	movs	r2, #0
 8003a64:	619a      	str	r2, [r3, #24]
 8003a66:	697b      	ldr	r3, [r7, #20]
 8003a68:	2200      	movs	r2, #0
 8003a6a:	705a      	strb	r2, [r3, #1]
 8003a6c:	7afb      	ldrb	r3, [r7, #11]
 8003a6e:	f003 030f 	and.w	r3, r3, #15
 8003a72:	b2da      	uxtb	r2, r3
 8003a74:	697b      	ldr	r3, [r7, #20]
 8003a76:	701a      	strb	r2, [r3, #0]
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	691b      	ldr	r3, [r3, #16]
 8003a7c:	2b01      	cmp	r3, #1
 8003a7e:	d102      	bne.n	8003a86 <HAL_PCD_EP_Receive+0x5c>
 8003a80:	687a      	ldr	r2, [r7, #4]
 8003a82:	697b      	ldr	r3, [r7, #20]
 8003a84:	611a      	str	r2, [r3, #16]
 8003a86:	7afb      	ldrb	r3, [r7, #11]
 8003a88:	f003 030f 	and.w	r3, r3, #15
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d109      	bne.n	8003aa4 <HAL_PCD_EP_Receive+0x7a>
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	6818      	ldr	r0, [r3, #0]
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	691b      	ldr	r3, [r3, #16]
 8003a98:	b2db      	uxtb	r3, r3
 8003a9a:	461a      	mov	r2, r3
 8003a9c:	6979      	ldr	r1, [r7, #20]
 8003a9e:	f002 f879 	bl	8005b94 <USB_EP0StartXfer>
 8003aa2:	e008      	b.n	8003ab6 <HAL_PCD_EP_Receive+0x8c>
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	6818      	ldr	r0, [r3, #0]
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	691b      	ldr	r3, [r3, #16]
 8003aac:	b2db      	uxtb	r3, r3
 8003aae:	461a      	mov	r2, r3
 8003ab0:	6979      	ldr	r1, [r7, #20]
 8003ab2:	f001 fe2b 	bl	800570c <USB_EPStartXfer>
 8003ab6:	2300      	movs	r3, #0
 8003ab8:	4618      	mov	r0, r3
 8003aba:	3718      	adds	r7, #24
 8003abc:	46bd      	mov	sp, r7
 8003abe:	bd80      	pop	{r7, pc}

08003ac0 <HAL_PCD_EP_GetRxCount>:
 8003ac0:	b480      	push	{r7}
 8003ac2:	b083      	sub	sp, #12
 8003ac4:	af00      	add	r7, sp, #0
 8003ac6:	6078      	str	r0, [r7, #4]
 8003ac8:	460b      	mov	r3, r1
 8003aca:	70fb      	strb	r3, [r7, #3]
 8003acc:	78fb      	ldrb	r3, [r7, #3]
 8003ace:	f003 020f 	and.w	r2, r3, #15
 8003ad2:	6879      	ldr	r1, [r7, #4]
 8003ad4:	4613      	mov	r3, r2
 8003ad6:	00db      	lsls	r3, r3, #3
 8003ad8:	1a9b      	subs	r3, r3, r2
 8003ada:	009b      	lsls	r3, r3, #2
 8003adc:	440b      	add	r3, r1
 8003ade:	f503 7305 	add.w	r3, r3, #532	; 0x214
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	4618      	mov	r0, r3
 8003ae6:	370c      	adds	r7, #12
 8003ae8:	46bd      	mov	sp, r7
 8003aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aee:	4770      	bx	lr

08003af0 <HAL_PCD_EP_Transmit>:
 8003af0:	b580      	push	{r7, lr}
 8003af2:	b086      	sub	sp, #24
 8003af4:	af00      	add	r7, sp, #0
 8003af6:	60f8      	str	r0, [r7, #12]
 8003af8:	607a      	str	r2, [r7, #4]
 8003afa:	603b      	str	r3, [r7, #0]
 8003afc:	460b      	mov	r3, r1
 8003afe:	72fb      	strb	r3, [r7, #11]
 8003b00:	7afb      	ldrb	r3, [r7, #11]
 8003b02:	f003 020f 	and.w	r2, r3, #15
 8003b06:	4613      	mov	r3, r2
 8003b08:	00db      	lsls	r3, r3, #3
 8003b0a:	1a9b      	subs	r3, r3, r2
 8003b0c:	009b      	lsls	r3, r3, #2
 8003b0e:	3338      	adds	r3, #56	; 0x38
 8003b10:	68fa      	ldr	r2, [r7, #12]
 8003b12:	4413      	add	r3, r2
 8003b14:	3304      	adds	r3, #4
 8003b16:	617b      	str	r3, [r7, #20]
 8003b18:	697b      	ldr	r3, [r7, #20]
 8003b1a:	687a      	ldr	r2, [r7, #4]
 8003b1c:	60da      	str	r2, [r3, #12]
 8003b1e:	697b      	ldr	r3, [r7, #20]
 8003b20:	683a      	ldr	r2, [r7, #0]
 8003b22:	615a      	str	r2, [r3, #20]
 8003b24:	697b      	ldr	r3, [r7, #20]
 8003b26:	2200      	movs	r2, #0
 8003b28:	619a      	str	r2, [r3, #24]
 8003b2a:	697b      	ldr	r3, [r7, #20]
 8003b2c:	2201      	movs	r2, #1
 8003b2e:	705a      	strb	r2, [r3, #1]
 8003b30:	7afb      	ldrb	r3, [r7, #11]
 8003b32:	f003 030f 	and.w	r3, r3, #15
 8003b36:	b2da      	uxtb	r2, r3
 8003b38:	697b      	ldr	r3, [r7, #20]
 8003b3a:	701a      	strb	r2, [r3, #0]
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	691b      	ldr	r3, [r3, #16]
 8003b40:	2b01      	cmp	r3, #1
 8003b42:	d102      	bne.n	8003b4a <HAL_PCD_EP_Transmit+0x5a>
 8003b44:	687a      	ldr	r2, [r7, #4]
 8003b46:	697b      	ldr	r3, [r7, #20]
 8003b48:	611a      	str	r2, [r3, #16]
 8003b4a:	7afb      	ldrb	r3, [r7, #11]
 8003b4c:	f003 030f 	and.w	r3, r3, #15
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d109      	bne.n	8003b68 <HAL_PCD_EP_Transmit+0x78>
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	6818      	ldr	r0, [r3, #0]
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	691b      	ldr	r3, [r3, #16]
 8003b5c:	b2db      	uxtb	r3, r3
 8003b5e:	461a      	mov	r2, r3
 8003b60:	6979      	ldr	r1, [r7, #20]
 8003b62:	f002 f817 	bl	8005b94 <USB_EP0StartXfer>
 8003b66:	e008      	b.n	8003b7a <HAL_PCD_EP_Transmit+0x8a>
 8003b68:	68fb      	ldr	r3, [r7, #12]
 8003b6a:	6818      	ldr	r0, [r3, #0]
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	691b      	ldr	r3, [r3, #16]
 8003b70:	b2db      	uxtb	r3, r3
 8003b72:	461a      	mov	r2, r3
 8003b74:	6979      	ldr	r1, [r7, #20]
 8003b76:	f001 fdc9 	bl	800570c <USB_EPStartXfer>
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	4618      	mov	r0, r3
 8003b7e:	3718      	adds	r7, #24
 8003b80:	46bd      	mov	sp, r7
 8003b82:	bd80      	pop	{r7, pc}

08003b84 <HAL_PCD_EP_SetStall>:
 8003b84:	b580      	push	{r7, lr}
 8003b86:	b084      	sub	sp, #16
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
 8003b8c:	460b      	mov	r3, r1
 8003b8e:	70fb      	strb	r3, [r7, #3]
 8003b90:	78fb      	ldrb	r3, [r7, #3]
 8003b92:	f003 020f 	and.w	r2, r3, #15
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	685b      	ldr	r3, [r3, #4]
 8003b9a:	429a      	cmp	r2, r3
 8003b9c:	d901      	bls.n	8003ba2 <HAL_PCD_EP_SetStall+0x1e>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	e050      	b.n	8003c44 <HAL_PCD_EP_SetStall+0xc0>
 8003ba2:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	da0f      	bge.n	8003bca <HAL_PCD_EP_SetStall+0x46>
 8003baa:	78fb      	ldrb	r3, [r7, #3]
 8003bac:	f003 020f 	and.w	r2, r3, #15
 8003bb0:	4613      	mov	r3, r2
 8003bb2:	00db      	lsls	r3, r3, #3
 8003bb4:	1a9b      	subs	r3, r3, r2
 8003bb6:	009b      	lsls	r3, r3, #2
 8003bb8:	3338      	adds	r3, #56	; 0x38
 8003bba:	687a      	ldr	r2, [r7, #4]
 8003bbc:	4413      	add	r3, r2
 8003bbe:	3304      	adds	r3, #4
 8003bc0:	60fb      	str	r3, [r7, #12]
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	2201      	movs	r2, #1
 8003bc6:	705a      	strb	r2, [r3, #1]
 8003bc8:	e00d      	b.n	8003be6 <HAL_PCD_EP_SetStall+0x62>
 8003bca:	78fa      	ldrb	r2, [r7, #3]
 8003bcc:	4613      	mov	r3, r2
 8003bce:	00db      	lsls	r3, r3, #3
 8003bd0:	1a9b      	subs	r3, r3, r2
 8003bd2:	009b      	lsls	r3, r3, #2
 8003bd4:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8003bd8:	687a      	ldr	r2, [r7, #4]
 8003bda:	4413      	add	r3, r2
 8003bdc:	3304      	adds	r3, #4
 8003bde:	60fb      	str	r3, [r7, #12]
 8003be0:	68fb      	ldr	r3, [r7, #12]
 8003be2:	2200      	movs	r2, #0
 8003be4:	705a      	strb	r2, [r3, #1]
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	2201      	movs	r2, #1
 8003bea:	709a      	strb	r2, [r3, #2]
 8003bec:	78fb      	ldrb	r3, [r7, #3]
 8003bee:	f003 030f 	and.w	r3, r3, #15
 8003bf2:	b2da      	uxtb	r2, r3
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	701a      	strb	r2, [r3, #0]
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 8003bfe:	2b01      	cmp	r3, #1
 8003c00:	d101      	bne.n	8003c06 <HAL_PCD_EP_SetStall+0x82>
 8003c02:	2302      	movs	r3, #2
 8003c04:	e01e      	b.n	8003c44 <HAL_PCD_EP_SetStall+0xc0>
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	2201      	movs	r2, #1
 8003c0a:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	68f9      	ldr	r1, [r7, #12]
 8003c14:	4618      	mov	r0, r3
 8003c16:	f002 f96e 	bl	8005ef6 <USB_EPSetStall>
 8003c1a:	78fb      	ldrb	r3, [r7, #3]
 8003c1c:	f003 030f 	and.w	r3, r3, #15
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d10a      	bne.n	8003c3a <HAL_PCD_EP_SetStall+0xb6>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	6818      	ldr	r0, [r3, #0]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	691b      	ldr	r3, [r3, #16]
 8003c2c:	b2d9      	uxtb	r1, r3
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8003c34:	461a      	mov	r2, r3
 8003c36:	f002 fb5f 	bl	80062f8 <USB_EP0_OutStart>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	2200      	movs	r2, #0
 8003c3e:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003c42:	2300      	movs	r3, #0
 8003c44:	4618      	mov	r0, r3
 8003c46:	3710      	adds	r7, #16
 8003c48:	46bd      	mov	sp, r7
 8003c4a:	bd80      	pop	{r7, pc}

08003c4c <HAL_PCD_EP_ClrStall>:
 8003c4c:	b580      	push	{r7, lr}
 8003c4e:	b084      	sub	sp, #16
 8003c50:	af00      	add	r7, sp, #0
 8003c52:	6078      	str	r0, [r7, #4]
 8003c54:	460b      	mov	r3, r1
 8003c56:	70fb      	strb	r3, [r7, #3]
 8003c58:	78fb      	ldrb	r3, [r7, #3]
 8003c5a:	f003 020f 	and.w	r2, r3, #15
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	685b      	ldr	r3, [r3, #4]
 8003c62:	429a      	cmp	r2, r3
 8003c64:	d901      	bls.n	8003c6a <HAL_PCD_EP_ClrStall+0x1e>
 8003c66:	2301      	movs	r3, #1
 8003c68:	e042      	b.n	8003cf0 <HAL_PCD_EP_ClrStall+0xa4>
 8003c6a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	da0f      	bge.n	8003c92 <HAL_PCD_EP_ClrStall+0x46>
 8003c72:	78fb      	ldrb	r3, [r7, #3]
 8003c74:	f003 020f 	and.w	r2, r3, #15
 8003c78:	4613      	mov	r3, r2
 8003c7a:	00db      	lsls	r3, r3, #3
 8003c7c:	1a9b      	subs	r3, r3, r2
 8003c7e:	009b      	lsls	r3, r3, #2
 8003c80:	3338      	adds	r3, #56	; 0x38
 8003c82:	687a      	ldr	r2, [r7, #4]
 8003c84:	4413      	add	r3, r2
 8003c86:	3304      	adds	r3, #4
 8003c88:	60fb      	str	r3, [r7, #12]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	2201      	movs	r2, #1
 8003c8e:	705a      	strb	r2, [r3, #1]
 8003c90:	e00f      	b.n	8003cb2 <HAL_PCD_EP_ClrStall+0x66>
 8003c92:	78fb      	ldrb	r3, [r7, #3]
 8003c94:	f003 020f 	and.w	r2, r3, #15
 8003c98:	4613      	mov	r3, r2
 8003c9a:	00db      	lsls	r3, r3, #3
 8003c9c:	1a9b      	subs	r3, r3, r2
 8003c9e:	009b      	lsls	r3, r3, #2
 8003ca0:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8003ca4:	687a      	ldr	r2, [r7, #4]
 8003ca6:	4413      	add	r3, r2
 8003ca8:	3304      	adds	r3, #4
 8003caa:	60fb      	str	r3, [r7, #12]
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	2200      	movs	r2, #0
 8003cb0:	705a      	strb	r2, [r3, #1]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	709a      	strb	r2, [r3, #2]
 8003cb8:	78fb      	ldrb	r3, [r7, #3]
 8003cba:	f003 030f 	and.w	r3, r3, #15
 8003cbe:	b2da      	uxtb	r2, r3
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	701a      	strb	r2, [r3, #0]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
 8003cca:	2b01      	cmp	r3, #1
 8003ccc:	d101      	bne.n	8003cd2 <HAL_PCD_EP_ClrStall+0x86>
 8003cce:	2302      	movs	r3, #2
 8003cd0:	e00e      	b.n	8003cf0 <HAL_PCD_EP_ClrStall+0xa4>
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	2201      	movs	r2, #1
 8003cd6:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	68f9      	ldr	r1, [r7, #12]
 8003ce0:	4618      	mov	r0, r3
 8003ce2:	f002 f976 	bl	8005fd2 <USB_EPClearStall>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	2200      	movs	r2, #0
 8003cea:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8003cee:	2300      	movs	r3, #0
 8003cf0:	4618      	mov	r0, r3
 8003cf2:	3710      	adds	r7, #16
 8003cf4:	46bd      	mov	sp, r7
 8003cf6:	bd80      	pop	{r7, pc}

08003cf8 <PCD_WriteEmptyTxFifo>:
 8003cf8:	b580      	push	{r7, lr}
 8003cfa:	b08a      	sub	sp, #40	; 0x28
 8003cfc:	af02      	add	r7, sp, #8
 8003cfe:	6078      	str	r0, [r7, #4]
 8003d00:	6039      	str	r1, [r7, #0]
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	617b      	str	r3, [r7, #20]
 8003d08:	697b      	ldr	r3, [r7, #20]
 8003d0a:	613b      	str	r3, [r7, #16]
 8003d0c:	683a      	ldr	r2, [r7, #0]
 8003d0e:	4613      	mov	r3, r2
 8003d10:	00db      	lsls	r3, r3, #3
 8003d12:	1a9b      	subs	r3, r3, r2
 8003d14:	009b      	lsls	r3, r3, #2
 8003d16:	3338      	adds	r3, #56	; 0x38
 8003d18:	687a      	ldr	r2, [r7, #4]
 8003d1a:	4413      	add	r3, r2
 8003d1c:	3304      	adds	r3, #4
 8003d1e:	60fb      	str	r3, [r7, #12]
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	699a      	ldr	r2, [r3, #24]
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	695b      	ldr	r3, [r3, #20]
 8003d28:	429a      	cmp	r2, r3
 8003d2a:	d901      	bls.n	8003d30 <PCD_WriteEmptyTxFifo+0x38>
 8003d2c:	2301      	movs	r3, #1
 8003d2e:	e06c      	b.n	8003e0a <PCD_WriteEmptyTxFifo+0x112>
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	695a      	ldr	r2, [r3, #20]
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	699b      	ldr	r3, [r3, #24]
 8003d38:	1ad3      	subs	r3, r2, r3
 8003d3a:	61fb      	str	r3, [r7, #28]
 8003d3c:	68fb      	ldr	r3, [r7, #12]
 8003d3e:	689b      	ldr	r3, [r3, #8]
 8003d40:	69fa      	ldr	r2, [r7, #28]
 8003d42:	429a      	cmp	r2, r3
 8003d44:	d902      	bls.n	8003d4c <PCD_WriteEmptyTxFifo+0x54>
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	689b      	ldr	r3, [r3, #8]
 8003d4a:	61fb      	str	r3, [r7, #28]
 8003d4c:	69fb      	ldr	r3, [r7, #28]
 8003d4e:	3303      	adds	r3, #3
 8003d50:	089b      	lsrs	r3, r3, #2
 8003d52:	61bb      	str	r3, [r7, #24]
 8003d54:	e02b      	b.n	8003dae <PCD_WriteEmptyTxFifo+0xb6>
 8003d56:	68fb      	ldr	r3, [r7, #12]
 8003d58:	695a      	ldr	r2, [r3, #20]
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	699b      	ldr	r3, [r3, #24]
 8003d5e:	1ad3      	subs	r3, r2, r3
 8003d60:	61fb      	str	r3, [r7, #28]
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	689b      	ldr	r3, [r3, #8]
 8003d66:	69fa      	ldr	r2, [r7, #28]
 8003d68:	429a      	cmp	r2, r3
 8003d6a:	d902      	bls.n	8003d72 <PCD_WriteEmptyTxFifo+0x7a>
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	689b      	ldr	r3, [r3, #8]
 8003d70:	61fb      	str	r3, [r7, #28]
 8003d72:	69fb      	ldr	r3, [r7, #28]
 8003d74:	3303      	adds	r3, #3
 8003d76:	089b      	lsrs	r3, r3, #2
 8003d78:	61bb      	str	r3, [r7, #24]
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	68d9      	ldr	r1, [r3, #12]
 8003d7e:	683b      	ldr	r3, [r7, #0]
 8003d80:	b2da      	uxtb	r2, r3
 8003d82:	69fb      	ldr	r3, [r7, #28]
 8003d84:	b298      	uxth	r0, r3
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	691b      	ldr	r3, [r3, #16]
 8003d8a:	b2db      	uxtb	r3, r3
 8003d8c:	9300      	str	r3, [sp, #0]
 8003d8e:	4603      	mov	r3, r0
 8003d90:	6978      	ldr	r0, [r7, #20]
 8003d92:	f002 f852 	bl	8005e3a <USB_WritePacket>
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	68da      	ldr	r2, [r3, #12]
 8003d9a:	69fb      	ldr	r3, [r7, #28]
 8003d9c:	441a      	add	r2, r3
 8003d9e:	68fb      	ldr	r3, [r7, #12]
 8003da0:	60da      	str	r2, [r3, #12]
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	699a      	ldr	r2, [r3, #24]
 8003da6:	69fb      	ldr	r3, [r7, #28]
 8003da8:	441a      	add	r2, r3
 8003daa:	68fb      	ldr	r3, [r7, #12]
 8003dac:	619a      	str	r2, [r3, #24]
 8003dae:	683b      	ldr	r3, [r7, #0]
 8003db0:	015a      	lsls	r2, r3, #5
 8003db2:	693b      	ldr	r3, [r7, #16]
 8003db4:	4413      	add	r3, r2
 8003db6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8003dba:	699b      	ldr	r3, [r3, #24]
 8003dbc:	b29b      	uxth	r3, r3
 8003dbe:	69ba      	ldr	r2, [r7, #24]
 8003dc0:	429a      	cmp	r2, r3
 8003dc2:	d809      	bhi.n	8003dd8 <PCD_WriteEmptyTxFifo+0xe0>
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	699a      	ldr	r2, [r3, #24]
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	695b      	ldr	r3, [r3, #20]
 8003dcc:	429a      	cmp	r2, r3
 8003dce:	d203      	bcs.n	8003dd8 <PCD_WriteEmptyTxFifo+0xe0>
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	695b      	ldr	r3, [r3, #20]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d1be      	bne.n	8003d56 <PCD_WriteEmptyTxFifo+0x5e>
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	695a      	ldr	r2, [r3, #20]
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	699b      	ldr	r3, [r3, #24]
 8003de0:	429a      	cmp	r2, r3
 8003de2:	d811      	bhi.n	8003e08 <PCD_WriteEmptyTxFifo+0x110>
 8003de4:	683b      	ldr	r3, [r7, #0]
 8003de6:	f003 030f 	and.w	r3, r3, #15
 8003dea:	2201      	movs	r2, #1
 8003dec:	fa02 f303 	lsl.w	r3, r2, r3
 8003df0:	60bb      	str	r3, [r7, #8]
 8003df2:	693b      	ldr	r3, [r7, #16]
 8003df4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003df8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003dfa:	68bb      	ldr	r3, [r7, #8]
 8003dfc:	43db      	mvns	r3, r3
 8003dfe:	6939      	ldr	r1, [r7, #16]
 8003e00:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8003e04:	4013      	ands	r3, r2
 8003e06:	634b      	str	r3, [r1, #52]	; 0x34
 8003e08:	2300      	movs	r3, #0
 8003e0a:	4618      	mov	r0, r3
 8003e0c:	3720      	adds	r7, #32
 8003e0e:	46bd      	mov	sp, r7
 8003e10:	bd80      	pop	{r7, pc}
	...

08003e14 <PCD_EP_OutXfrComplete_int>:
 8003e14:	b580      	push	{r7, lr}
 8003e16:	b086      	sub	sp, #24
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	6078      	str	r0, [r7, #4]
 8003e1c:	6039      	str	r1, [r7, #0]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	617b      	str	r3, [r7, #20]
 8003e24:	697b      	ldr	r3, [r7, #20]
 8003e26:	613b      	str	r3, [r7, #16]
 8003e28:	697b      	ldr	r3, [r7, #20]
 8003e2a:	333c      	adds	r3, #60	; 0x3c
 8003e2c:	3304      	adds	r3, #4
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	60fb      	str	r3, [r7, #12]
 8003e32:	683b      	ldr	r3, [r7, #0]
 8003e34:	015a      	lsls	r2, r3, #5
 8003e36:	693b      	ldr	r3, [r7, #16]
 8003e38:	4413      	add	r3, r2
 8003e3a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003e3e:	689b      	ldr	r3, [r3, #8]
 8003e40:	60bb      	str	r3, [r7, #8]
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	691b      	ldr	r3, [r3, #16]
 8003e46:	2b01      	cmp	r3, #1
 8003e48:	f040 80a0 	bne.w	8003f8c <PCD_EP_OutXfrComplete_int+0x178>
 8003e4c:	68bb      	ldr	r3, [r7, #8]
 8003e4e:	f003 0308 	and.w	r3, r3, #8
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d015      	beq.n	8003e82 <PCD_EP_OutXfrComplete_int+0x6e>
 8003e56:	68fb      	ldr	r3, [r7, #12]
 8003e58:	4a72      	ldr	r2, [pc, #456]	; (8004024 <PCD_EP_OutXfrComplete_int+0x210>)
 8003e5a:	4293      	cmp	r3, r2
 8003e5c:	f240 80dd 	bls.w	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003e60:	68bb      	ldr	r3, [r7, #8]
 8003e62:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	f000 80d7 	beq.w	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	015a      	lsls	r2, r3, #5
 8003e70:	693b      	ldr	r3, [r7, #16]
 8003e72:	4413      	add	r3, r2
 8003e74:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003e78:	461a      	mov	r2, r3
 8003e7a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003e7e:	6093      	str	r3, [r2, #8]
 8003e80:	e0cb      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003e82:	68bb      	ldr	r3, [r7, #8]
 8003e84:	f003 0320 	and.w	r3, r3, #32
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d009      	beq.n	8003ea0 <PCD_EP_OutXfrComplete_int+0x8c>
 8003e8c:	683b      	ldr	r3, [r7, #0]
 8003e8e:	015a      	lsls	r2, r3, #5
 8003e90:	693b      	ldr	r3, [r7, #16]
 8003e92:	4413      	add	r3, r2
 8003e94:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003e98:	461a      	mov	r2, r3
 8003e9a:	2320      	movs	r3, #32
 8003e9c:	6093      	str	r3, [r2, #8]
 8003e9e:	e0bc      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003ea0:	68bb      	ldr	r3, [r7, #8]
 8003ea2:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	f040 80b7 	bne.w	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	4a5d      	ldr	r2, [pc, #372]	; (8004024 <PCD_EP_OutXfrComplete_int+0x210>)
 8003eb0:	4293      	cmp	r3, r2
 8003eb2:	d90f      	bls.n	8003ed4 <PCD_EP_OutXfrComplete_int+0xc0>
 8003eb4:	68bb      	ldr	r3, [r7, #8]
 8003eb6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d00a      	beq.n	8003ed4 <PCD_EP_OutXfrComplete_int+0xc0>
 8003ebe:	683b      	ldr	r3, [r7, #0]
 8003ec0:	015a      	lsls	r2, r3, #5
 8003ec2:	693b      	ldr	r3, [r7, #16]
 8003ec4:	4413      	add	r3, r2
 8003ec6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003eca:	461a      	mov	r2, r3
 8003ecc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003ed0:	6093      	str	r3, [r2, #8]
 8003ed2:	e0a2      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003ed4:	6879      	ldr	r1, [r7, #4]
 8003ed6:	683a      	ldr	r2, [r7, #0]
 8003ed8:	4613      	mov	r3, r2
 8003eda:	00db      	lsls	r3, r3, #3
 8003edc:	1a9b      	subs	r3, r3, r2
 8003ede:	009b      	lsls	r3, r3, #2
 8003ee0:	440b      	add	r3, r1
 8003ee2:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8003ee6:	681a      	ldr	r2, [r3, #0]
 8003ee8:	683b      	ldr	r3, [r7, #0]
 8003eea:	0159      	lsls	r1, r3, #5
 8003eec:	693b      	ldr	r3, [r7, #16]
 8003eee:	440b      	add	r3, r1
 8003ef0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003ef4:	691b      	ldr	r3, [r3, #16]
 8003ef6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003efa:	1ad1      	subs	r1, r2, r3
 8003efc:	6878      	ldr	r0, [r7, #4]
 8003efe:	683a      	ldr	r2, [r7, #0]
 8003f00:	4613      	mov	r3, r2
 8003f02:	00db      	lsls	r3, r3, #3
 8003f04:	1a9b      	subs	r3, r3, r2
 8003f06:	009b      	lsls	r3, r3, #2
 8003f08:	4403      	add	r3, r0
 8003f0a:	f503 7305 	add.w	r3, r3, #532	; 0x214
 8003f0e:	6019      	str	r1, [r3, #0]
 8003f10:	6879      	ldr	r1, [r7, #4]
 8003f12:	683a      	ldr	r2, [r7, #0]
 8003f14:	4613      	mov	r3, r2
 8003f16:	00db      	lsls	r3, r3, #3
 8003f18:	1a9b      	subs	r3, r3, r2
 8003f1a:	009b      	lsls	r3, r3, #2
 8003f1c:	440b      	add	r3, r1
 8003f1e:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003f22:	6819      	ldr	r1, [r3, #0]
 8003f24:	6878      	ldr	r0, [r7, #4]
 8003f26:	683a      	ldr	r2, [r7, #0]
 8003f28:	4613      	mov	r3, r2
 8003f2a:	00db      	lsls	r3, r3, #3
 8003f2c:	1a9b      	subs	r3, r3, r2
 8003f2e:	009b      	lsls	r3, r3, #2
 8003f30:	4403      	add	r3, r0
 8003f32:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	4419      	add	r1, r3
 8003f3a:	6878      	ldr	r0, [r7, #4]
 8003f3c:	683a      	ldr	r2, [r7, #0]
 8003f3e:	4613      	mov	r3, r2
 8003f40:	00db      	lsls	r3, r3, #3
 8003f42:	1a9b      	subs	r3, r3, r2
 8003f44:	009b      	lsls	r3, r3, #2
 8003f46:	4403      	add	r3, r0
 8003f48:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003f4c:	6019      	str	r1, [r3, #0]
 8003f4e:	683b      	ldr	r3, [r7, #0]
 8003f50:	2b00      	cmp	r3, #0
 8003f52:	d114      	bne.n	8003f7e <PCD_EP_OutXfrComplete_int+0x16a>
 8003f54:	6879      	ldr	r1, [r7, #4]
 8003f56:	683a      	ldr	r2, [r7, #0]
 8003f58:	4613      	mov	r3, r2
 8003f5a:	00db      	lsls	r3, r3, #3
 8003f5c:	1a9b      	subs	r3, r3, r2
 8003f5e:	009b      	lsls	r3, r3, #2
 8003f60:	440b      	add	r3, r1
 8003f62:	f503 7304 	add.w	r3, r3, #528	; 0x210
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d108      	bne.n	8003f7e <PCD_EP_OutXfrComplete_int+0x16a>
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	6818      	ldr	r0, [r3, #0]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8003f76:	461a      	mov	r2, r3
 8003f78:	2101      	movs	r1, #1
 8003f7a:	f002 f9bd 	bl	80062f8 <USB_EP0_OutStart>
 8003f7e:	683b      	ldr	r3, [r7, #0]
 8003f80:	b2db      	uxtb	r3, r3
 8003f82:	4619      	mov	r1, r3
 8003f84:	6878      	ldr	r0, [r7, #4]
 8003f86:	f004 fb2b 	bl	80085e0 <HAL_PCD_DataOutStageCallback>
 8003f8a:	e046      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	4a26      	ldr	r2, [pc, #152]	; (8004028 <PCD_EP_OutXfrComplete_int+0x214>)
 8003f90:	4293      	cmp	r3, r2
 8003f92:	d124      	bne.n	8003fde <PCD_EP_OutXfrComplete_int+0x1ca>
 8003f94:	68bb      	ldr	r3, [r7, #8]
 8003f96:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d00a      	beq.n	8003fb4 <PCD_EP_OutXfrComplete_int+0x1a0>
 8003f9e:	683b      	ldr	r3, [r7, #0]
 8003fa0:	015a      	lsls	r2, r3, #5
 8003fa2:	693b      	ldr	r3, [r7, #16]
 8003fa4:	4413      	add	r3, r2
 8003fa6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003faa:	461a      	mov	r2, r3
 8003fac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003fb0:	6093      	str	r3, [r2, #8]
 8003fb2:	e032      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003fb4:	68bb      	ldr	r3, [r7, #8]
 8003fb6:	f003 0320 	and.w	r3, r3, #32
 8003fba:	2b00      	cmp	r3, #0
 8003fbc:	d008      	beq.n	8003fd0 <PCD_EP_OutXfrComplete_int+0x1bc>
 8003fbe:	683b      	ldr	r3, [r7, #0]
 8003fc0:	015a      	lsls	r2, r3, #5
 8003fc2:	693b      	ldr	r3, [r7, #16]
 8003fc4:	4413      	add	r3, r2
 8003fc6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003fca:	461a      	mov	r2, r3
 8003fcc:	2320      	movs	r3, #32
 8003fce:	6093      	str	r3, [r2, #8]
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	b2db      	uxtb	r3, r3
 8003fd4:	4619      	mov	r1, r3
 8003fd6:	6878      	ldr	r0, [r7, #4]
 8003fd8:	f004 fb02 	bl	80085e0 <HAL_PCD_DataOutStageCallback>
 8003fdc:	e01d      	b.n	800401a <PCD_EP_OutXfrComplete_int+0x206>
 8003fde:	683b      	ldr	r3, [r7, #0]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d114      	bne.n	800400e <PCD_EP_OutXfrComplete_int+0x1fa>
 8003fe4:	6879      	ldr	r1, [r7, #4]
 8003fe6:	683a      	ldr	r2, [r7, #0]
 8003fe8:	4613      	mov	r3, r2
 8003fea:	00db      	lsls	r3, r3, #3
 8003fec:	1a9b      	subs	r3, r3, r2
 8003fee:	009b      	lsls	r3, r3, #2
 8003ff0:	440b      	add	r3, r1
 8003ff2:	f503 7304 	add.w	r3, r3, #528	; 0x210
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d108      	bne.n	800400e <PCD_EP_OutXfrComplete_int+0x1fa>
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	6818      	ldr	r0, [r3, #0]
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8004006:	461a      	mov	r2, r3
 8004008:	2100      	movs	r1, #0
 800400a:	f002 f975 	bl	80062f8 <USB_EP0_OutStart>
 800400e:	683b      	ldr	r3, [r7, #0]
 8004010:	b2db      	uxtb	r3, r3
 8004012:	4619      	mov	r1, r3
 8004014:	6878      	ldr	r0, [r7, #4]
 8004016:	f004 fae3 	bl	80085e0 <HAL_PCD_DataOutStageCallback>
 800401a:	2300      	movs	r3, #0
 800401c:	4618      	mov	r0, r3
 800401e:	3718      	adds	r7, #24
 8004020:	46bd      	mov	sp, r7
 8004022:	bd80      	pop	{r7, pc}
 8004024:	4f54300a 	.word	0x4f54300a
 8004028:	4f54310a 	.word	0x4f54310a

0800402c <PCD_EP_OutSetupPacket_int>:
 800402c:	b580      	push	{r7, lr}
 800402e:	b086      	sub	sp, #24
 8004030:	af00      	add	r7, sp, #0
 8004032:	6078      	str	r0, [r7, #4]
 8004034:	6039      	str	r1, [r7, #0]
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	617b      	str	r3, [r7, #20]
 800403c:	697b      	ldr	r3, [r7, #20]
 800403e:	613b      	str	r3, [r7, #16]
 8004040:	697b      	ldr	r3, [r7, #20]
 8004042:	333c      	adds	r3, #60	; 0x3c
 8004044:	3304      	adds	r3, #4
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	60fb      	str	r3, [r7, #12]
 800404a:	683b      	ldr	r3, [r7, #0]
 800404c:	015a      	lsls	r2, r3, #5
 800404e:	693b      	ldr	r3, [r7, #16]
 8004050:	4413      	add	r3, r2
 8004052:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004056:	689b      	ldr	r3, [r3, #8]
 8004058:	60bb      	str	r3, [r7, #8]
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	4a15      	ldr	r2, [pc, #84]	; (80040b4 <PCD_EP_OutSetupPacket_int+0x88>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d90e      	bls.n	8004080 <PCD_EP_OutSetupPacket_int+0x54>
 8004062:	68bb      	ldr	r3, [r7, #8]
 8004064:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004068:	2b00      	cmp	r3, #0
 800406a:	d009      	beq.n	8004080 <PCD_EP_OutSetupPacket_int+0x54>
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	015a      	lsls	r2, r3, #5
 8004070:	693b      	ldr	r3, [r7, #16]
 8004072:	4413      	add	r3, r2
 8004074:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004078:	461a      	mov	r2, r3
 800407a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800407e:	6093      	str	r3, [r2, #8]
 8004080:	6878      	ldr	r0, [r7, #4]
 8004082:	f004 fa9b 	bl	80085bc <HAL_PCD_SetupStageCallback>
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	4a0a      	ldr	r2, [pc, #40]	; (80040b4 <PCD_EP_OutSetupPacket_int+0x88>)
 800408a:	4293      	cmp	r3, r2
 800408c:	d90c      	bls.n	80040a8 <PCD_EP_OutSetupPacket_int+0x7c>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	691b      	ldr	r3, [r3, #16]
 8004092:	2b01      	cmp	r3, #1
 8004094:	d108      	bne.n	80040a8 <PCD_EP_OutSetupPacket_int+0x7c>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	6818      	ldr	r0, [r3, #0]
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 80040a0:	461a      	mov	r2, r3
 80040a2:	2101      	movs	r1, #1
 80040a4:	f002 f928 	bl	80062f8 <USB_EP0_OutStart>
 80040a8:	2300      	movs	r3, #0
 80040aa:	4618      	mov	r0, r3
 80040ac:	3718      	adds	r7, #24
 80040ae:	46bd      	mov	sp, r7
 80040b0:	bd80      	pop	{r7, pc}
 80040b2:	bf00      	nop
 80040b4:	4f54300a 	.word	0x4f54300a

080040b8 <HAL_PCDEx_SetTxFiFo>:
 80040b8:	b480      	push	{r7}
 80040ba:	b085      	sub	sp, #20
 80040bc:	af00      	add	r7, sp, #0
 80040be:	6078      	str	r0, [r7, #4]
 80040c0:	460b      	mov	r3, r1
 80040c2:	70fb      	strb	r3, [r7, #3]
 80040c4:	4613      	mov	r3, r2
 80040c6:	803b      	strh	r3, [r7, #0]
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ce:	60bb      	str	r3, [r7, #8]
 80040d0:	78fb      	ldrb	r3, [r7, #3]
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d107      	bne.n	80040e6 <HAL_PCDEx_SetTxFiFo+0x2e>
 80040d6:	883b      	ldrh	r3, [r7, #0]
 80040d8:	0419      	lsls	r1, r3, #16
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	68ba      	ldr	r2, [r7, #8]
 80040e0:	430a      	orrs	r2, r1
 80040e2:	629a      	str	r2, [r3, #40]	; 0x28
 80040e4:	e028      	b.n	8004138 <HAL_PCDEx_SetTxFiFo+0x80>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80040ec:	0c1b      	lsrs	r3, r3, #16
 80040ee:	68ba      	ldr	r2, [r7, #8]
 80040f0:	4413      	add	r3, r2
 80040f2:	60bb      	str	r3, [r7, #8]
 80040f4:	2300      	movs	r3, #0
 80040f6:	73fb      	strb	r3, [r7, #15]
 80040f8:	e00d      	b.n	8004116 <HAL_PCDEx_SetTxFiFo+0x5e>
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681a      	ldr	r2, [r3, #0]
 80040fe:	7bfb      	ldrb	r3, [r7, #15]
 8004100:	3340      	adds	r3, #64	; 0x40
 8004102:	009b      	lsls	r3, r3, #2
 8004104:	4413      	add	r3, r2
 8004106:	685b      	ldr	r3, [r3, #4]
 8004108:	0c1b      	lsrs	r3, r3, #16
 800410a:	68ba      	ldr	r2, [r7, #8]
 800410c:	4413      	add	r3, r2
 800410e:	60bb      	str	r3, [r7, #8]
 8004110:	7bfb      	ldrb	r3, [r7, #15]
 8004112:	3301      	adds	r3, #1
 8004114:	73fb      	strb	r3, [r7, #15]
 8004116:	7bfa      	ldrb	r2, [r7, #15]
 8004118:	78fb      	ldrb	r3, [r7, #3]
 800411a:	3b01      	subs	r3, #1
 800411c:	429a      	cmp	r2, r3
 800411e:	d3ec      	bcc.n	80040fa <HAL_PCDEx_SetTxFiFo+0x42>
 8004120:	883b      	ldrh	r3, [r7, #0]
 8004122:	0418      	lsls	r0, r3, #16
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	6819      	ldr	r1, [r3, #0]
 8004128:	78fb      	ldrb	r3, [r7, #3]
 800412a:	3b01      	subs	r3, #1
 800412c:	68ba      	ldr	r2, [r7, #8]
 800412e:	4302      	orrs	r2, r0
 8004130:	3340      	adds	r3, #64	; 0x40
 8004132:	009b      	lsls	r3, r3, #2
 8004134:	440b      	add	r3, r1
 8004136:	605a      	str	r2, [r3, #4]
 8004138:	2300      	movs	r3, #0
 800413a:	4618      	mov	r0, r3
 800413c:	3714      	adds	r7, #20
 800413e:	46bd      	mov	sp, r7
 8004140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004144:	4770      	bx	lr

08004146 <HAL_PCDEx_SetRxFiFo>:
 8004146:	b480      	push	{r7}
 8004148:	b083      	sub	sp, #12
 800414a:	af00      	add	r7, sp, #0
 800414c:	6078      	str	r0, [r7, #4]
 800414e:	460b      	mov	r3, r1
 8004150:	807b      	strh	r3, [r7, #2]
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	887a      	ldrh	r2, [r7, #2]
 8004158:	625a      	str	r2, [r3, #36]	; 0x24
 800415a:	2300      	movs	r3, #0
 800415c:	4618      	mov	r0, r3
 800415e:	370c      	adds	r7, #12
 8004160:	46bd      	mov	sp, r7
 8004162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004166:	4770      	bx	lr

08004168 <HAL_PCDEx_LPM_Callback>:
 8004168:	b480      	push	{r7}
 800416a:	b083      	sub	sp, #12
 800416c:	af00      	add	r7, sp, #0
 800416e:	6078      	str	r0, [r7, #4]
 8004170:	460b      	mov	r3, r1
 8004172:	70fb      	strb	r3, [r7, #3]
 8004174:	bf00      	nop
 8004176:	370c      	adds	r7, #12
 8004178:	46bd      	mov	sp, r7
 800417a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417e:	4770      	bx	lr

08004180 <HAL_RCC_OscConfig>:
 8004180:	b580      	push	{r7, lr}
 8004182:	b086      	sub	sp, #24
 8004184:	af00      	add	r7, sp, #0
 8004186:	6078      	str	r0, [r7, #4]
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	2b00      	cmp	r3, #0
 800418c:	d101      	bne.n	8004192 <HAL_RCC_OscConfig+0x12>
 800418e:	2301      	movs	r3, #1
 8004190:	e264      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	f003 0301 	and.w	r3, r3, #1
 800419a:	2b00      	cmp	r3, #0
 800419c:	d075      	beq.n	800428a <HAL_RCC_OscConfig+0x10a>
 800419e:	4ba3      	ldr	r3, [pc, #652]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041a0:	689b      	ldr	r3, [r3, #8]
 80041a2:	f003 030c 	and.w	r3, r3, #12
 80041a6:	2b04      	cmp	r3, #4
 80041a8:	d00c      	beq.n	80041c4 <HAL_RCC_OscConfig+0x44>
 80041aa:	4ba0      	ldr	r3, [pc, #640]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	f003 030c 	and.w	r3, r3, #12
 80041b2:	2b08      	cmp	r3, #8
 80041b4:	d112      	bne.n	80041dc <HAL_RCC_OscConfig+0x5c>
 80041b6:	4b9d      	ldr	r3, [pc, #628]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041b8:	685b      	ldr	r3, [r3, #4]
 80041ba:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80041be:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80041c2:	d10b      	bne.n	80041dc <HAL_RCC_OscConfig+0x5c>
 80041c4:	4b99      	ldr	r3, [pc, #612]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d05b      	beq.n	8004288 <HAL_RCC_OscConfig+0x108>
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	685b      	ldr	r3, [r3, #4]
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d157      	bne.n	8004288 <HAL_RCC_OscConfig+0x108>
 80041d8:	2301      	movs	r3, #1
 80041da:	e23f      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	685b      	ldr	r3, [r3, #4]
 80041e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80041e4:	d106      	bne.n	80041f4 <HAL_RCC_OscConfig+0x74>
 80041e6:	4b91      	ldr	r3, [pc, #580]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	4a90      	ldr	r2, [pc, #576]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80041ec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80041f0:	6013      	str	r3, [r2, #0]
 80041f2:	e01d      	b.n	8004230 <HAL_RCC_OscConfig+0xb0>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	685b      	ldr	r3, [r3, #4]
 80041f8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80041fc:	d10c      	bne.n	8004218 <HAL_RCC_OscConfig+0x98>
 80041fe:	4b8b      	ldr	r3, [pc, #556]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	4a8a      	ldr	r2, [pc, #552]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004204:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004208:	6013      	str	r3, [r2, #0]
 800420a:	4b88      	ldr	r3, [pc, #544]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	4a87      	ldr	r2, [pc, #540]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004210:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004214:	6013      	str	r3, [r2, #0]
 8004216:	e00b      	b.n	8004230 <HAL_RCC_OscConfig+0xb0>
 8004218:	4b84      	ldr	r3, [pc, #528]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	4a83      	ldr	r2, [pc, #524]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800421e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004222:	6013      	str	r3, [r2, #0]
 8004224:	4b81      	ldr	r3, [pc, #516]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	4a80      	ldr	r2, [pc, #512]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800422a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800422e:	6013      	str	r3, [r2, #0]
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	685b      	ldr	r3, [r3, #4]
 8004234:	2b00      	cmp	r3, #0
 8004236:	d013      	beq.n	8004260 <HAL_RCC_OscConfig+0xe0>
 8004238:	f7fd fd42 	bl	8001cc0 <HAL_GetTick>
 800423c:	6138      	str	r0, [r7, #16]
 800423e:	e008      	b.n	8004252 <HAL_RCC_OscConfig+0xd2>
 8004240:	f7fd fd3e 	bl	8001cc0 <HAL_GetTick>
 8004244:	4602      	mov	r2, r0
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	1ad3      	subs	r3, r2, r3
 800424a:	2b64      	cmp	r3, #100	; 0x64
 800424c:	d901      	bls.n	8004252 <HAL_RCC_OscConfig+0xd2>
 800424e:	2303      	movs	r3, #3
 8004250:	e204      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004252:	4b76      	ldr	r3, [pc, #472]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800425a:	2b00      	cmp	r3, #0
 800425c:	d0f0      	beq.n	8004240 <HAL_RCC_OscConfig+0xc0>
 800425e:	e014      	b.n	800428a <HAL_RCC_OscConfig+0x10a>
 8004260:	f7fd fd2e 	bl	8001cc0 <HAL_GetTick>
 8004264:	6138      	str	r0, [r7, #16]
 8004266:	e008      	b.n	800427a <HAL_RCC_OscConfig+0xfa>
 8004268:	f7fd fd2a 	bl	8001cc0 <HAL_GetTick>
 800426c:	4602      	mov	r2, r0
 800426e:	693b      	ldr	r3, [r7, #16]
 8004270:	1ad3      	subs	r3, r2, r3
 8004272:	2b64      	cmp	r3, #100	; 0x64
 8004274:	d901      	bls.n	800427a <HAL_RCC_OscConfig+0xfa>
 8004276:	2303      	movs	r3, #3
 8004278:	e1f0      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 800427a:	4b6c      	ldr	r3, [pc, #432]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004282:	2b00      	cmp	r3, #0
 8004284:	d1f0      	bne.n	8004268 <HAL_RCC_OscConfig+0xe8>
 8004286:	e000      	b.n	800428a <HAL_RCC_OscConfig+0x10a>
 8004288:	bf00      	nop
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	f003 0302 	and.w	r3, r3, #2
 8004292:	2b00      	cmp	r3, #0
 8004294:	d063      	beq.n	800435e <HAL_RCC_OscConfig+0x1de>
 8004296:	4b65      	ldr	r3, [pc, #404]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004298:	689b      	ldr	r3, [r3, #8]
 800429a:	f003 030c 	and.w	r3, r3, #12
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d00b      	beq.n	80042ba <HAL_RCC_OscConfig+0x13a>
 80042a2:	4b62      	ldr	r3, [pc, #392]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80042a4:	689b      	ldr	r3, [r3, #8]
 80042a6:	f003 030c 	and.w	r3, r3, #12
 80042aa:	2b08      	cmp	r3, #8
 80042ac:	d11c      	bne.n	80042e8 <HAL_RCC_OscConfig+0x168>
 80042ae:	4b5f      	ldr	r3, [pc, #380]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80042b0:	685b      	ldr	r3, [r3, #4]
 80042b2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d116      	bne.n	80042e8 <HAL_RCC_OscConfig+0x168>
 80042ba:	4b5c      	ldr	r3, [pc, #368]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	f003 0302 	and.w	r3, r3, #2
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d005      	beq.n	80042d2 <HAL_RCC_OscConfig+0x152>
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	68db      	ldr	r3, [r3, #12]
 80042ca:	2b01      	cmp	r3, #1
 80042cc:	d001      	beq.n	80042d2 <HAL_RCC_OscConfig+0x152>
 80042ce:	2301      	movs	r3, #1
 80042d0:	e1c4      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80042d2:	4b56      	ldr	r3, [pc, #344]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	691b      	ldr	r3, [r3, #16]
 80042de:	00db      	lsls	r3, r3, #3
 80042e0:	4952      	ldr	r1, [pc, #328]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80042e2:	4313      	orrs	r3, r2
 80042e4:	600b      	str	r3, [r1, #0]
 80042e6:	e03a      	b.n	800435e <HAL_RCC_OscConfig+0x1de>
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	68db      	ldr	r3, [r3, #12]
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d020      	beq.n	8004332 <HAL_RCC_OscConfig+0x1b2>
 80042f0:	4b4f      	ldr	r3, [pc, #316]	; (8004430 <HAL_RCC_OscConfig+0x2b0>)
 80042f2:	2201      	movs	r2, #1
 80042f4:	601a      	str	r2, [r3, #0]
 80042f6:	f7fd fce3 	bl	8001cc0 <HAL_GetTick>
 80042fa:	6138      	str	r0, [r7, #16]
 80042fc:	e008      	b.n	8004310 <HAL_RCC_OscConfig+0x190>
 80042fe:	f7fd fcdf 	bl	8001cc0 <HAL_GetTick>
 8004302:	4602      	mov	r2, r0
 8004304:	693b      	ldr	r3, [r7, #16]
 8004306:	1ad3      	subs	r3, r2, r3
 8004308:	2b02      	cmp	r3, #2
 800430a:	d901      	bls.n	8004310 <HAL_RCC_OscConfig+0x190>
 800430c:	2303      	movs	r3, #3
 800430e:	e1a5      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004310:	4b46      	ldr	r3, [pc, #280]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	f003 0302 	and.w	r3, r3, #2
 8004318:	2b00      	cmp	r3, #0
 800431a:	d0f0      	beq.n	80042fe <HAL_RCC_OscConfig+0x17e>
 800431c:	4b43      	ldr	r3, [pc, #268]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	691b      	ldr	r3, [r3, #16]
 8004328:	00db      	lsls	r3, r3, #3
 800432a:	4940      	ldr	r1, [pc, #256]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 800432c:	4313      	orrs	r3, r2
 800432e:	600b      	str	r3, [r1, #0]
 8004330:	e015      	b.n	800435e <HAL_RCC_OscConfig+0x1de>
 8004332:	4b3f      	ldr	r3, [pc, #252]	; (8004430 <HAL_RCC_OscConfig+0x2b0>)
 8004334:	2200      	movs	r2, #0
 8004336:	601a      	str	r2, [r3, #0]
 8004338:	f7fd fcc2 	bl	8001cc0 <HAL_GetTick>
 800433c:	6138      	str	r0, [r7, #16]
 800433e:	e008      	b.n	8004352 <HAL_RCC_OscConfig+0x1d2>
 8004340:	f7fd fcbe 	bl	8001cc0 <HAL_GetTick>
 8004344:	4602      	mov	r2, r0
 8004346:	693b      	ldr	r3, [r7, #16]
 8004348:	1ad3      	subs	r3, r2, r3
 800434a:	2b02      	cmp	r3, #2
 800434c:	d901      	bls.n	8004352 <HAL_RCC_OscConfig+0x1d2>
 800434e:	2303      	movs	r3, #3
 8004350:	e184      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004352:	4b36      	ldr	r3, [pc, #216]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	f003 0302 	and.w	r3, r3, #2
 800435a:	2b00      	cmp	r3, #0
 800435c:	d1f0      	bne.n	8004340 <HAL_RCC_OscConfig+0x1c0>
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	f003 0308 	and.w	r3, r3, #8
 8004366:	2b00      	cmp	r3, #0
 8004368:	d030      	beq.n	80043cc <HAL_RCC_OscConfig+0x24c>
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	695b      	ldr	r3, [r3, #20]
 800436e:	2b00      	cmp	r3, #0
 8004370:	d016      	beq.n	80043a0 <HAL_RCC_OscConfig+0x220>
 8004372:	4b30      	ldr	r3, [pc, #192]	; (8004434 <HAL_RCC_OscConfig+0x2b4>)
 8004374:	2201      	movs	r2, #1
 8004376:	601a      	str	r2, [r3, #0]
 8004378:	f7fd fca2 	bl	8001cc0 <HAL_GetTick>
 800437c:	6138      	str	r0, [r7, #16]
 800437e:	e008      	b.n	8004392 <HAL_RCC_OscConfig+0x212>
 8004380:	f7fd fc9e 	bl	8001cc0 <HAL_GetTick>
 8004384:	4602      	mov	r2, r0
 8004386:	693b      	ldr	r3, [r7, #16]
 8004388:	1ad3      	subs	r3, r2, r3
 800438a:	2b02      	cmp	r3, #2
 800438c:	d901      	bls.n	8004392 <HAL_RCC_OscConfig+0x212>
 800438e:	2303      	movs	r3, #3
 8004390:	e164      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004392:	4b26      	ldr	r3, [pc, #152]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 8004394:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004396:	f003 0302 	and.w	r3, r3, #2
 800439a:	2b00      	cmp	r3, #0
 800439c:	d0f0      	beq.n	8004380 <HAL_RCC_OscConfig+0x200>
 800439e:	e015      	b.n	80043cc <HAL_RCC_OscConfig+0x24c>
 80043a0:	4b24      	ldr	r3, [pc, #144]	; (8004434 <HAL_RCC_OscConfig+0x2b4>)
 80043a2:	2200      	movs	r2, #0
 80043a4:	601a      	str	r2, [r3, #0]
 80043a6:	f7fd fc8b 	bl	8001cc0 <HAL_GetTick>
 80043aa:	6138      	str	r0, [r7, #16]
 80043ac:	e008      	b.n	80043c0 <HAL_RCC_OscConfig+0x240>
 80043ae:	f7fd fc87 	bl	8001cc0 <HAL_GetTick>
 80043b2:	4602      	mov	r2, r0
 80043b4:	693b      	ldr	r3, [r7, #16]
 80043b6:	1ad3      	subs	r3, r2, r3
 80043b8:	2b02      	cmp	r3, #2
 80043ba:	d901      	bls.n	80043c0 <HAL_RCC_OscConfig+0x240>
 80043bc:	2303      	movs	r3, #3
 80043be:	e14d      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80043c0:	4b1a      	ldr	r3, [pc, #104]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80043c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043c4:	f003 0302 	and.w	r3, r3, #2
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d1f0      	bne.n	80043ae <HAL_RCC_OscConfig+0x22e>
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	f003 0304 	and.w	r3, r3, #4
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	f000 80a0 	beq.w	800451a <HAL_RCC_OscConfig+0x39a>
 80043da:	2300      	movs	r3, #0
 80043dc:	75fb      	strb	r3, [r7, #23]
 80043de:	4b13      	ldr	r3, [pc, #76]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80043e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d10f      	bne.n	800440a <HAL_RCC_OscConfig+0x28a>
 80043ea:	2300      	movs	r3, #0
 80043ec:	60bb      	str	r3, [r7, #8]
 80043ee:	4b0f      	ldr	r3, [pc, #60]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80043f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043f2:	4a0e      	ldr	r2, [pc, #56]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80043f4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80043f8:	6413      	str	r3, [r2, #64]	; 0x40
 80043fa:	4b0c      	ldr	r3, [pc, #48]	; (800442c <HAL_RCC_OscConfig+0x2ac>)
 80043fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004402:	60bb      	str	r3, [r7, #8]
 8004404:	68bb      	ldr	r3, [r7, #8]
 8004406:	2301      	movs	r3, #1
 8004408:	75fb      	strb	r3, [r7, #23]
 800440a:	4b0b      	ldr	r3, [pc, #44]	; (8004438 <HAL_RCC_OscConfig+0x2b8>)
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004412:	2b00      	cmp	r3, #0
 8004414:	d121      	bne.n	800445a <HAL_RCC_OscConfig+0x2da>
 8004416:	4b08      	ldr	r3, [pc, #32]	; (8004438 <HAL_RCC_OscConfig+0x2b8>)
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	4a07      	ldr	r2, [pc, #28]	; (8004438 <HAL_RCC_OscConfig+0x2b8>)
 800441c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004420:	6013      	str	r3, [r2, #0]
 8004422:	f7fd fc4d 	bl	8001cc0 <HAL_GetTick>
 8004426:	6138      	str	r0, [r7, #16]
 8004428:	e011      	b.n	800444e <HAL_RCC_OscConfig+0x2ce>
 800442a:	bf00      	nop
 800442c:	40023800 	.word	0x40023800
 8004430:	42470000 	.word	0x42470000
 8004434:	42470e80 	.word	0x42470e80
 8004438:	40007000 	.word	0x40007000
 800443c:	f7fd fc40 	bl	8001cc0 <HAL_GetTick>
 8004440:	4602      	mov	r2, r0
 8004442:	693b      	ldr	r3, [r7, #16]
 8004444:	1ad3      	subs	r3, r2, r3
 8004446:	2b02      	cmp	r3, #2
 8004448:	d901      	bls.n	800444e <HAL_RCC_OscConfig+0x2ce>
 800444a:	2303      	movs	r3, #3
 800444c:	e106      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 800444e:	4b85      	ldr	r3, [pc, #532]	; (8004664 <HAL_RCC_OscConfig+0x4e4>)
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004456:	2b00      	cmp	r3, #0
 8004458:	d0f0      	beq.n	800443c <HAL_RCC_OscConfig+0x2bc>
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	689b      	ldr	r3, [r3, #8]
 800445e:	2b01      	cmp	r3, #1
 8004460:	d106      	bne.n	8004470 <HAL_RCC_OscConfig+0x2f0>
 8004462:	4b81      	ldr	r3, [pc, #516]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004464:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004466:	4a80      	ldr	r2, [pc, #512]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004468:	f043 0301 	orr.w	r3, r3, #1
 800446c:	6713      	str	r3, [r2, #112]	; 0x70
 800446e:	e01c      	b.n	80044aa <HAL_RCC_OscConfig+0x32a>
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	689b      	ldr	r3, [r3, #8]
 8004474:	2b05      	cmp	r3, #5
 8004476:	d10c      	bne.n	8004492 <HAL_RCC_OscConfig+0x312>
 8004478:	4b7b      	ldr	r3, [pc, #492]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 800447a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800447c:	4a7a      	ldr	r2, [pc, #488]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 800447e:	f043 0304 	orr.w	r3, r3, #4
 8004482:	6713      	str	r3, [r2, #112]	; 0x70
 8004484:	4b78      	ldr	r3, [pc, #480]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004486:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004488:	4a77      	ldr	r2, [pc, #476]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 800448a:	f043 0301 	orr.w	r3, r3, #1
 800448e:	6713      	str	r3, [r2, #112]	; 0x70
 8004490:	e00b      	b.n	80044aa <HAL_RCC_OscConfig+0x32a>
 8004492:	4b75      	ldr	r3, [pc, #468]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004494:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004496:	4a74      	ldr	r2, [pc, #464]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004498:	f023 0301 	bic.w	r3, r3, #1
 800449c:	6713      	str	r3, [r2, #112]	; 0x70
 800449e:	4b72      	ldr	r3, [pc, #456]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80044a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044a2:	4a71      	ldr	r2, [pc, #452]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80044a4:	f023 0304 	bic.w	r3, r3, #4
 80044a8:	6713      	str	r3, [r2, #112]	; 0x70
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	689b      	ldr	r3, [r3, #8]
 80044ae:	2b00      	cmp	r3, #0
 80044b0:	d015      	beq.n	80044de <HAL_RCC_OscConfig+0x35e>
 80044b2:	f7fd fc05 	bl	8001cc0 <HAL_GetTick>
 80044b6:	6138      	str	r0, [r7, #16]
 80044b8:	e00a      	b.n	80044d0 <HAL_RCC_OscConfig+0x350>
 80044ba:	f7fd fc01 	bl	8001cc0 <HAL_GetTick>
 80044be:	4602      	mov	r2, r0
 80044c0:	693b      	ldr	r3, [r7, #16]
 80044c2:	1ad3      	subs	r3, r2, r3
 80044c4:	f241 3288 	movw	r2, #5000	; 0x1388
 80044c8:	4293      	cmp	r3, r2
 80044ca:	d901      	bls.n	80044d0 <HAL_RCC_OscConfig+0x350>
 80044cc:	2303      	movs	r3, #3
 80044ce:	e0c5      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80044d0:	4b65      	ldr	r3, [pc, #404]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80044d2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044d4:	f003 0302 	and.w	r3, r3, #2
 80044d8:	2b00      	cmp	r3, #0
 80044da:	d0ee      	beq.n	80044ba <HAL_RCC_OscConfig+0x33a>
 80044dc:	e014      	b.n	8004508 <HAL_RCC_OscConfig+0x388>
 80044de:	f7fd fbef 	bl	8001cc0 <HAL_GetTick>
 80044e2:	6138      	str	r0, [r7, #16]
 80044e4:	e00a      	b.n	80044fc <HAL_RCC_OscConfig+0x37c>
 80044e6:	f7fd fbeb 	bl	8001cc0 <HAL_GetTick>
 80044ea:	4602      	mov	r2, r0
 80044ec:	693b      	ldr	r3, [r7, #16]
 80044ee:	1ad3      	subs	r3, r2, r3
 80044f0:	f241 3288 	movw	r2, #5000	; 0x1388
 80044f4:	4293      	cmp	r3, r2
 80044f6:	d901      	bls.n	80044fc <HAL_RCC_OscConfig+0x37c>
 80044f8:	2303      	movs	r3, #3
 80044fa:	e0af      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80044fc:	4b5a      	ldr	r3, [pc, #360]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80044fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004500:	f003 0302 	and.w	r3, r3, #2
 8004504:	2b00      	cmp	r3, #0
 8004506:	d1ee      	bne.n	80044e6 <HAL_RCC_OscConfig+0x366>
 8004508:	7dfb      	ldrb	r3, [r7, #23]
 800450a:	2b01      	cmp	r3, #1
 800450c:	d105      	bne.n	800451a <HAL_RCC_OscConfig+0x39a>
 800450e:	4b56      	ldr	r3, [pc, #344]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004510:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004512:	4a55      	ldr	r2, [pc, #340]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004514:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004518:	6413      	str	r3, [r2, #64]	; 0x40
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	699b      	ldr	r3, [r3, #24]
 800451e:	2b00      	cmp	r3, #0
 8004520:	f000 809b 	beq.w	800465a <HAL_RCC_OscConfig+0x4da>
 8004524:	4b50      	ldr	r3, [pc, #320]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 8004526:	689b      	ldr	r3, [r3, #8]
 8004528:	f003 030c 	and.w	r3, r3, #12
 800452c:	2b08      	cmp	r3, #8
 800452e:	d05c      	beq.n	80045ea <HAL_RCC_OscConfig+0x46a>
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	699b      	ldr	r3, [r3, #24]
 8004534:	2b02      	cmp	r3, #2
 8004536:	d141      	bne.n	80045bc <HAL_RCC_OscConfig+0x43c>
 8004538:	4b4c      	ldr	r3, [pc, #304]	; (800466c <HAL_RCC_OscConfig+0x4ec>)
 800453a:	2200      	movs	r2, #0
 800453c:	601a      	str	r2, [r3, #0]
 800453e:	f7fd fbbf 	bl	8001cc0 <HAL_GetTick>
 8004542:	6138      	str	r0, [r7, #16]
 8004544:	e008      	b.n	8004558 <HAL_RCC_OscConfig+0x3d8>
 8004546:	f7fd fbbb 	bl	8001cc0 <HAL_GetTick>
 800454a:	4602      	mov	r2, r0
 800454c:	693b      	ldr	r3, [r7, #16]
 800454e:	1ad3      	subs	r3, r2, r3
 8004550:	2b02      	cmp	r3, #2
 8004552:	d901      	bls.n	8004558 <HAL_RCC_OscConfig+0x3d8>
 8004554:	2303      	movs	r3, #3
 8004556:	e081      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 8004558:	4b43      	ldr	r3, [pc, #268]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004560:	2b00      	cmp	r3, #0
 8004562:	d1f0      	bne.n	8004546 <HAL_RCC_OscConfig+0x3c6>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	69da      	ldr	r2, [r3, #28]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	6a1b      	ldr	r3, [r3, #32]
 800456c:	431a      	orrs	r2, r3
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004572:	019b      	lsls	r3, r3, #6
 8004574:	431a      	orrs	r2, r3
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800457a:	085b      	lsrs	r3, r3, #1
 800457c:	3b01      	subs	r3, #1
 800457e:	041b      	lsls	r3, r3, #16
 8004580:	431a      	orrs	r2, r3
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004586:	061b      	lsls	r3, r3, #24
 8004588:	4937      	ldr	r1, [pc, #220]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 800458a:	4313      	orrs	r3, r2
 800458c:	604b      	str	r3, [r1, #4]
 800458e:	4b37      	ldr	r3, [pc, #220]	; (800466c <HAL_RCC_OscConfig+0x4ec>)
 8004590:	2201      	movs	r2, #1
 8004592:	601a      	str	r2, [r3, #0]
 8004594:	f7fd fb94 	bl	8001cc0 <HAL_GetTick>
 8004598:	6138      	str	r0, [r7, #16]
 800459a:	e008      	b.n	80045ae <HAL_RCC_OscConfig+0x42e>
 800459c:	f7fd fb90 	bl	8001cc0 <HAL_GetTick>
 80045a0:	4602      	mov	r2, r0
 80045a2:	693b      	ldr	r3, [r7, #16]
 80045a4:	1ad3      	subs	r3, r2, r3
 80045a6:	2b02      	cmp	r3, #2
 80045a8:	d901      	bls.n	80045ae <HAL_RCC_OscConfig+0x42e>
 80045aa:	2303      	movs	r3, #3
 80045ac:	e056      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80045ae:	4b2e      	ldr	r3, [pc, #184]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d0f0      	beq.n	800459c <HAL_RCC_OscConfig+0x41c>
 80045ba:	e04e      	b.n	800465a <HAL_RCC_OscConfig+0x4da>
 80045bc:	4b2b      	ldr	r3, [pc, #172]	; (800466c <HAL_RCC_OscConfig+0x4ec>)
 80045be:	2200      	movs	r2, #0
 80045c0:	601a      	str	r2, [r3, #0]
 80045c2:	f7fd fb7d 	bl	8001cc0 <HAL_GetTick>
 80045c6:	6138      	str	r0, [r7, #16]
 80045c8:	e008      	b.n	80045dc <HAL_RCC_OscConfig+0x45c>
 80045ca:	f7fd fb79 	bl	8001cc0 <HAL_GetTick>
 80045ce:	4602      	mov	r2, r0
 80045d0:	693b      	ldr	r3, [r7, #16]
 80045d2:	1ad3      	subs	r3, r2, r3
 80045d4:	2b02      	cmp	r3, #2
 80045d6:	d901      	bls.n	80045dc <HAL_RCC_OscConfig+0x45c>
 80045d8:	2303      	movs	r3, #3
 80045da:	e03f      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80045dc:	4b22      	ldr	r3, [pc, #136]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80045de:	681b      	ldr	r3, [r3, #0]
 80045e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d1f0      	bne.n	80045ca <HAL_RCC_OscConfig+0x44a>
 80045e8:	e037      	b.n	800465a <HAL_RCC_OscConfig+0x4da>
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	699b      	ldr	r3, [r3, #24]
 80045ee:	2b01      	cmp	r3, #1
 80045f0:	d101      	bne.n	80045f6 <HAL_RCC_OscConfig+0x476>
 80045f2:	2301      	movs	r3, #1
 80045f4:	e032      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 80045f6:	4b1c      	ldr	r3, [pc, #112]	; (8004668 <HAL_RCC_OscConfig+0x4e8>)
 80045f8:	685b      	ldr	r3, [r3, #4]
 80045fa:	60fb      	str	r3, [r7, #12]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	699b      	ldr	r3, [r3, #24]
 8004600:	2b01      	cmp	r3, #1
 8004602:	d028      	beq.n	8004656 <HAL_RCC_OscConfig+0x4d6>
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	69db      	ldr	r3, [r3, #28]
 800460e:	429a      	cmp	r2, r3
 8004610:	d121      	bne.n	8004656 <HAL_RCC_OscConfig+0x4d6>
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	6a1b      	ldr	r3, [r3, #32]
 800461c:	429a      	cmp	r2, r3
 800461e:	d11a      	bne.n	8004656 <HAL_RCC_OscConfig+0x4d6>
 8004620:	68fa      	ldr	r2, [r7, #12]
 8004622:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004626:	4013      	ands	r3, r2
 8004628:	687a      	ldr	r2, [r7, #4]
 800462a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800462c:	0192      	lsls	r2, r2, #6
 800462e:	4293      	cmp	r3, r2
 8004630:	d111      	bne.n	8004656 <HAL_RCC_OscConfig+0x4d6>
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800463c:	085b      	lsrs	r3, r3, #1
 800463e:	3b01      	subs	r3, #1
 8004640:	041b      	lsls	r3, r3, #16
 8004642:	429a      	cmp	r2, r3
 8004644:	d107      	bne.n	8004656 <HAL_RCC_OscConfig+0x4d6>
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004650:	061b      	lsls	r3, r3, #24
 8004652:	429a      	cmp	r2, r3
 8004654:	d001      	beq.n	800465a <HAL_RCC_OscConfig+0x4da>
 8004656:	2301      	movs	r3, #1
 8004658:	e000      	b.n	800465c <HAL_RCC_OscConfig+0x4dc>
 800465a:	2300      	movs	r3, #0
 800465c:	4618      	mov	r0, r3
 800465e:	3718      	adds	r7, #24
 8004660:	46bd      	mov	sp, r7
 8004662:	bd80      	pop	{r7, pc}
 8004664:	40007000 	.word	0x40007000
 8004668:	40023800 	.word	0x40023800
 800466c:	42470060 	.word	0x42470060

08004670 <HAL_RCC_ClockConfig>:
 8004670:	b580      	push	{r7, lr}
 8004672:	b084      	sub	sp, #16
 8004674:	af00      	add	r7, sp, #0
 8004676:	6078      	str	r0, [r7, #4]
 8004678:	6039      	str	r1, [r7, #0]
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	2b00      	cmp	r3, #0
 800467e:	d101      	bne.n	8004684 <HAL_RCC_ClockConfig+0x14>
 8004680:	2301      	movs	r3, #1
 8004682:	e0cc      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 8004684:	4b68      	ldr	r3, [pc, #416]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	f003 0307 	and.w	r3, r3, #7
 800468c:	683a      	ldr	r2, [r7, #0]
 800468e:	429a      	cmp	r2, r3
 8004690:	d90c      	bls.n	80046ac <HAL_RCC_ClockConfig+0x3c>
 8004692:	4b65      	ldr	r3, [pc, #404]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 8004694:	683a      	ldr	r2, [r7, #0]
 8004696:	b2d2      	uxtb	r2, r2
 8004698:	701a      	strb	r2, [r3, #0]
 800469a:	4b63      	ldr	r3, [pc, #396]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f003 0307 	and.w	r3, r3, #7
 80046a2:	683a      	ldr	r2, [r7, #0]
 80046a4:	429a      	cmp	r2, r3
 80046a6:	d001      	beq.n	80046ac <HAL_RCC_ClockConfig+0x3c>
 80046a8:	2301      	movs	r3, #1
 80046aa:	e0b8      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f003 0302 	and.w	r3, r3, #2
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d020      	beq.n	80046fa <HAL_RCC_ClockConfig+0x8a>
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	f003 0304 	and.w	r3, r3, #4
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d005      	beq.n	80046d0 <HAL_RCC_ClockConfig+0x60>
 80046c4:	4b59      	ldr	r3, [pc, #356]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046c6:	689b      	ldr	r3, [r3, #8]
 80046c8:	4a58      	ldr	r2, [pc, #352]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046ca:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80046ce:	6093      	str	r3, [r2, #8]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f003 0308 	and.w	r3, r3, #8
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d005      	beq.n	80046e8 <HAL_RCC_ClockConfig+0x78>
 80046dc:	4b53      	ldr	r3, [pc, #332]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046de:	689b      	ldr	r3, [r3, #8]
 80046e0:	4a52      	ldr	r2, [pc, #328]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046e2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80046e6:	6093      	str	r3, [r2, #8]
 80046e8:	4b50      	ldr	r3, [pc, #320]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046ea:	689b      	ldr	r3, [r3, #8]
 80046ec:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	689b      	ldr	r3, [r3, #8]
 80046f4:	494d      	ldr	r1, [pc, #308]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80046f6:	4313      	orrs	r3, r2
 80046f8:	608b      	str	r3, [r1, #8]
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	f003 0301 	and.w	r3, r3, #1
 8004702:	2b00      	cmp	r3, #0
 8004704:	d044      	beq.n	8004790 <HAL_RCC_ClockConfig+0x120>
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	685b      	ldr	r3, [r3, #4]
 800470a:	2b01      	cmp	r3, #1
 800470c:	d107      	bne.n	800471e <HAL_RCC_ClockConfig+0xae>
 800470e:	4b47      	ldr	r3, [pc, #284]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004716:	2b00      	cmp	r3, #0
 8004718:	d119      	bne.n	800474e <HAL_RCC_ClockConfig+0xde>
 800471a:	2301      	movs	r3, #1
 800471c:	e07f      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	685b      	ldr	r3, [r3, #4]
 8004722:	2b02      	cmp	r3, #2
 8004724:	d003      	beq.n	800472e <HAL_RCC_ClockConfig+0xbe>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	685b      	ldr	r3, [r3, #4]
 800472a:	2b03      	cmp	r3, #3
 800472c:	d107      	bne.n	800473e <HAL_RCC_ClockConfig+0xce>
 800472e:	4b3f      	ldr	r3, [pc, #252]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004736:	2b00      	cmp	r3, #0
 8004738:	d109      	bne.n	800474e <HAL_RCC_ClockConfig+0xde>
 800473a:	2301      	movs	r3, #1
 800473c:	e06f      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 800473e:	4b3b      	ldr	r3, [pc, #236]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	f003 0302 	and.w	r3, r3, #2
 8004746:	2b00      	cmp	r3, #0
 8004748:	d101      	bne.n	800474e <HAL_RCC_ClockConfig+0xde>
 800474a:	2301      	movs	r3, #1
 800474c:	e067      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 800474e:	4b37      	ldr	r3, [pc, #220]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 8004750:	689b      	ldr	r3, [r3, #8]
 8004752:	f023 0203 	bic.w	r2, r3, #3
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	685b      	ldr	r3, [r3, #4]
 800475a:	4934      	ldr	r1, [pc, #208]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 800475c:	4313      	orrs	r3, r2
 800475e:	608b      	str	r3, [r1, #8]
 8004760:	f7fd faae 	bl	8001cc0 <HAL_GetTick>
 8004764:	60f8      	str	r0, [r7, #12]
 8004766:	e00a      	b.n	800477e <HAL_RCC_ClockConfig+0x10e>
 8004768:	f7fd faaa 	bl	8001cc0 <HAL_GetTick>
 800476c:	4602      	mov	r2, r0
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	1ad3      	subs	r3, r2, r3
 8004772:	f241 3288 	movw	r2, #5000	; 0x1388
 8004776:	4293      	cmp	r3, r2
 8004778:	d901      	bls.n	800477e <HAL_RCC_ClockConfig+0x10e>
 800477a:	2303      	movs	r3, #3
 800477c:	e04f      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 800477e:	4b2b      	ldr	r3, [pc, #172]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 8004780:	689b      	ldr	r3, [r3, #8]
 8004782:	f003 020c 	and.w	r2, r3, #12
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	685b      	ldr	r3, [r3, #4]
 800478a:	009b      	lsls	r3, r3, #2
 800478c:	429a      	cmp	r2, r3
 800478e:	d1eb      	bne.n	8004768 <HAL_RCC_ClockConfig+0xf8>
 8004790:	4b25      	ldr	r3, [pc, #148]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	f003 0307 	and.w	r3, r3, #7
 8004798:	683a      	ldr	r2, [r7, #0]
 800479a:	429a      	cmp	r2, r3
 800479c:	d20c      	bcs.n	80047b8 <HAL_RCC_ClockConfig+0x148>
 800479e:	4b22      	ldr	r3, [pc, #136]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 80047a0:	683a      	ldr	r2, [r7, #0]
 80047a2:	b2d2      	uxtb	r2, r2
 80047a4:	701a      	strb	r2, [r3, #0]
 80047a6:	4b20      	ldr	r3, [pc, #128]	; (8004828 <HAL_RCC_ClockConfig+0x1b8>)
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f003 0307 	and.w	r3, r3, #7
 80047ae:	683a      	ldr	r2, [r7, #0]
 80047b0:	429a      	cmp	r2, r3
 80047b2:	d001      	beq.n	80047b8 <HAL_RCC_ClockConfig+0x148>
 80047b4:	2301      	movs	r3, #1
 80047b6:	e032      	b.n	800481e <HAL_RCC_ClockConfig+0x1ae>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	f003 0304 	and.w	r3, r3, #4
 80047c0:	2b00      	cmp	r3, #0
 80047c2:	d008      	beq.n	80047d6 <HAL_RCC_ClockConfig+0x166>
 80047c4:	4b19      	ldr	r3, [pc, #100]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80047c6:	689b      	ldr	r3, [r3, #8]
 80047c8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	68db      	ldr	r3, [r3, #12]
 80047d0:	4916      	ldr	r1, [pc, #88]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80047d2:	4313      	orrs	r3, r2
 80047d4:	608b      	str	r3, [r1, #8]
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	f003 0308 	and.w	r3, r3, #8
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d009      	beq.n	80047f6 <HAL_RCC_ClockConfig+0x186>
 80047e2:	4b12      	ldr	r3, [pc, #72]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80047e4:	689b      	ldr	r3, [r3, #8]
 80047e6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	691b      	ldr	r3, [r3, #16]
 80047ee:	00db      	lsls	r3, r3, #3
 80047f0:	490e      	ldr	r1, [pc, #56]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80047f2:	4313      	orrs	r3, r2
 80047f4:	608b      	str	r3, [r1, #8]
 80047f6:	f000 f821 	bl	800483c <HAL_RCC_GetSysClockFreq>
 80047fa:	4602      	mov	r2, r0
 80047fc:	4b0b      	ldr	r3, [pc, #44]	; (800482c <HAL_RCC_ClockConfig+0x1bc>)
 80047fe:	689b      	ldr	r3, [r3, #8]
 8004800:	091b      	lsrs	r3, r3, #4
 8004802:	f003 030f 	and.w	r3, r3, #15
 8004806:	490a      	ldr	r1, [pc, #40]	; (8004830 <HAL_RCC_ClockConfig+0x1c0>)
 8004808:	5ccb      	ldrb	r3, [r1, r3]
 800480a:	fa22 f303 	lsr.w	r3, r2, r3
 800480e:	4a09      	ldr	r2, [pc, #36]	; (8004834 <HAL_RCC_ClockConfig+0x1c4>)
 8004810:	6013      	str	r3, [r2, #0]
 8004812:	4b09      	ldr	r3, [pc, #36]	; (8004838 <HAL_RCC_ClockConfig+0x1c8>)
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	4618      	mov	r0, r3
 8004818:	f7fd fa0e 	bl	8001c38 <HAL_InitTick>
 800481c:	2300      	movs	r3, #0
 800481e:	4618      	mov	r0, r3
 8004820:	3710      	adds	r7, #16
 8004822:	46bd      	mov	sp, r7
 8004824:	bd80      	pop	{r7, pc}
 8004826:	bf00      	nop
 8004828:	40023c00 	.word	0x40023c00
 800482c:	40023800 	.word	0x40023800
 8004830:	08008d20 	.word	0x08008d20
 8004834:	20000000 	.word	0x20000000
 8004838:	20000004 	.word	0x20000004

0800483c <HAL_RCC_GetSysClockFreq>:
 800483c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004840:	b084      	sub	sp, #16
 8004842:	af00      	add	r7, sp, #0
 8004844:	2300      	movs	r3, #0
 8004846:	607b      	str	r3, [r7, #4]
 8004848:	2300      	movs	r3, #0
 800484a:	60fb      	str	r3, [r7, #12]
 800484c:	2300      	movs	r3, #0
 800484e:	603b      	str	r3, [r7, #0]
 8004850:	2300      	movs	r3, #0
 8004852:	60bb      	str	r3, [r7, #8]
 8004854:	4b67      	ldr	r3, [pc, #412]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004856:	689b      	ldr	r3, [r3, #8]
 8004858:	f003 030c 	and.w	r3, r3, #12
 800485c:	2b08      	cmp	r3, #8
 800485e:	d00d      	beq.n	800487c <HAL_RCC_GetSysClockFreq+0x40>
 8004860:	2b08      	cmp	r3, #8
 8004862:	f200 80bd 	bhi.w	80049e0 <HAL_RCC_GetSysClockFreq+0x1a4>
 8004866:	2b00      	cmp	r3, #0
 8004868:	d002      	beq.n	8004870 <HAL_RCC_GetSysClockFreq+0x34>
 800486a:	2b04      	cmp	r3, #4
 800486c:	d003      	beq.n	8004876 <HAL_RCC_GetSysClockFreq+0x3a>
 800486e:	e0b7      	b.n	80049e0 <HAL_RCC_GetSysClockFreq+0x1a4>
 8004870:	4b61      	ldr	r3, [pc, #388]	; (80049f8 <HAL_RCC_GetSysClockFreq+0x1bc>)
 8004872:	60bb      	str	r3, [r7, #8]
 8004874:	e0b7      	b.n	80049e6 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004876:	4b61      	ldr	r3, [pc, #388]	; (80049fc <HAL_RCC_GetSysClockFreq+0x1c0>)
 8004878:	60bb      	str	r3, [r7, #8]
 800487a:	e0b4      	b.n	80049e6 <HAL_RCC_GetSysClockFreq+0x1aa>
 800487c:	4b5d      	ldr	r3, [pc, #372]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 800487e:	685b      	ldr	r3, [r3, #4]
 8004880:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004884:	607b      	str	r3, [r7, #4]
 8004886:	4b5b      	ldr	r3, [pc, #364]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004888:	685b      	ldr	r3, [r3, #4]
 800488a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800488e:	2b00      	cmp	r3, #0
 8004890:	d04d      	beq.n	800492e <HAL_RCC_GetSysClockFreq+0xf2>
 8004892:	4b58      	ldr	r3, [pc, #352]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004894:	685b      	ldr	r3, [r3, #4]
 8004896:	099b      	lsrs	r3, r3, #6
 8004898:	461a      	mov	r2, r3
 800489a:	f04f 0300 	mov.w	r3, #0
 800489e:	f240 10ff 	movw	r0, #511	; 0x1ff
 80048a2:	f04f 0100 	mov.w	r1, #0
 80048a6:	ea02 0800 	and.w	r8, r2, r0
 80048aa:	ea03 0901 	and.w	r9, r3, r1
 80048ae:	4640      	mov	r0, r8
 80048b0:	4649      	mov	r1, r9
 80048b2:	f04f 0200 	mov.w	r2, #0
 80048b6:	f04f 0300 	mov.w	r3, #0
 80048ba:	014b      	lsls	r3, r1, #5
 80048bc:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80048c0:	0142      	lsls	r2, r0, #5
 80048c2:	4610      	mov	r0, r2
 80048c4:	4619      	mov	r1, r3
 80048c6:	ebb0 0008 	subs.w	r0, r0, r8
 80048ca:	eb61 0109 	sbc.w	r1, r1, r9
 80048ce:	f04f 0200 	mov.w	r2, #0
 80048d2:	f04f 0300 	mov.w	r3, #0
 80048d6:	018b      	lsls	r3, r1, #6
 80048d8:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80048dc:	0182      	lsls	r2, r0, #6
 80048de:	1a12      	subs	r2, r2, r0
 80048e0:	eb63 0301 	sbc.w	r3, r3, r1
 80048e4:	f04f 0000 	mov.w	r0, #0
 80048e8:	f04f 0100 	mov.w	r1, #0
 80048ec:	00d9      	lsls	r1, r3, #3
 80048ee:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80048f2:	00d0      	lsls	r0, r2, #3
 80048f4:	4602      	mov	r2, r0
 80048f6:	460b      	mov	r3, r1
 80048f8:	eb12 0208 	adds.w	r2, r2, r8
 80048fc:	eb43 0309 	adc.w	r3, r3, r9
 8004900:	f04f 0000 	mov.w	r0, #0
 8004904:	f04f 0100 	mov.w	r1, #0
 8004908:	0259      	lsls	r1, r3, #9
 800490a:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 800490e:	0250      	lsls	r0, r2, #9
 8004910:	4602      	mov	r2, r0
 8004912:	460b      	mov	r3, r1
 8004914:	4610      	mov	r0, r2
 8004916:	4619      	mov	r1, r3
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	461a      	mov	r2, r3
 800491c:	f04f 0300 	mov.w	r3, #0
 8004920:	f7fb fc52 	bl	80001c8 <__aeabi_uldivmod>
 8004924:	4602      	mov	r2, r0
 8004926:	460b      	mov	r3, r1
 8004928:	4613      	mov	r3, r2
 800492a:	60fb      	str	r3, [r7, #12]
 800492c:	e04a      	b.n	80049c4 <HAL_RCC_GetSysClockFreq+0x188>
 800492e:	4b31      	ldr	r3, [pc, #196]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004930:	685b      	ldr	r3, [r3, #4]
 8004932:	099b      	lsrs	r3, r3, #6
 8004934:	461a      	mov	r2, r3
 8004936:	f04f 0300 	mov.w	r3, #0
 800493a:	f240 10ff 	movw	r0, #511	; 0x1ff
 800493e:	f04f 0100 	mov.w	r1, #0
 8004942:	ea02 0400 	and.w	r4, r2, r0
 8004946:	ea03 0501 	and.w	r5, r3, r1
 800494a:	4620      	mov	r0, r4
 800494c:	4629      	mov	r1, r5
 800494e:	f04f 0200 	mov.w	r2, #0
 8004952:	f04f 0300 	mov.w	r3, #0
 8004956:	014b      	lsls	r3, r1, #5
 8004958:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800495c:	0142      	lsls	r2, r0, #5
 800495e:	4610      	mov	r0, r2
 8004960:	4619      	mov	r1, r3
 8004962:	1b00      	subs	r0, r0, r4
 8004964:	eb61 0105 	sbc.w	r1, r1, r5
 8004968:	f04f 0200 	mov.w	r2, #0
 800496c:	f04f 0300 	mov.w	r3, #0
 8004970:	018b      	lsls	r3, r1, #6
 8004972:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8004976:	0182      	lsls	r2, r0, #6
 8004978:	1a12      	subs	r2, r2, r0
 800497a:	eb63 0301 	sbc.w	r3, r3, r1
 800497e:	f04f 0000 	mov.w	r0, #0
 8004982:	f04f 0100 	mov.w	r1, #0
 8004986:	00d9      	lsls	r1, r3, #3
 8004988:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800498c:	00d0      	lsls	r0, r2, #3
 800498e:	4602      	mov	r2, r0
 8004990:	460b      	mov	r3, r1
 8004992:	1912      	adds	r2, r2, r4
 8004994:	eb45 0303 	adc.w	r3, r5, r3
 8004998:	f04f 0000 	mov.w	r0, #0
 800499c:	f04f 0100 	mov.w	r1, #0
 80049a0:	0299      	lsls	r1, r3, #10
 80049a2:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 80049a6:	0290      	lsls	r0, r2, #10
 80049a8:	4602      	mov	r2, r0
 80049aa:	460b      	mov	r3, r1
 80049ac:	4610      	mov	r0, r2
 80049ae:	4619      	mov	r1, r3
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	461a      	mov	r2, r3
 80049b4:	f04f 0300 	mov.w	r3, #0
 80049b8:	f7fb fc06 	bl	80001c8 <__aeabi_uldivmod>
 80049bc:	4602      	mov	r2, r0
 80049be:	460b      	mov	r3, r1
 80049c0:	4613      	mov	r3, r2
 80049c2:	60fb      	str	r3, [r7, #12]
 80049c4:	4b0b      	ldr	r3, [pc, #44]	; (80049f4 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80049c6:	685b      	ldr	r3, [r3, #4]
 80049c8:	0c1b      	lsrs	r3, r3, #16
 80049ca:	f003 0303 	and.w	r3, r3, #3
 80049ce:	3301      	adds	r3, #1
 80049d0:	005b      	lsls	r3, r3, #1
 80049d2:	603b      	str	r3, [r7, #0]
 80049d4:	68fa      	ldr	r2, [r7, #12]
 80049d6:	683b      	ldr	r3, [r7, #0]
 80049d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80049dc:	60bb      	str	r3, [r7, #8]
 80049de:	e002      	b.n	80049e6 <HAL_RCC_GetSysClockFreq+0x1aa>
 80049e0:	4b05      	ldr	r3, [pc, #20]	; (80049f8 <HAL_RCC_GetSysClockFreq+0x1bc>)
 80049e2:	60bb      	str	r3, [r7, #8]
 80049e4:	bf00      	nop
 80049e6:	68bb      	ldr	r3, [r7, #8]
 80049e8:	4618      	mov	r0, r3
 80049ea:	3710      	adds	r7, #16
 80049ec:	46bd      	mov	sp, r7
 80049ee:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80049f2:	bf00      	nop
 80049f4:	40023800 	.word	0x40023800
 80049f8:	00f42400 	.word	0x00f42400
 80049fc:	007a1200 	.word	0x007a1200

08004a00 <HAL_RCC_GetHCLKFreq>:
 8004a00:	b480      	push	{r7}
 8004a02:	af00      	add	r7, sp, #0
 8004a04:	4b03      	ldr	r3, [pc, #12]	; (8004a14 <HAL_RCC_GetHCLKFreq+0x14>)
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	4618      	mov	r0, r3
 8004a0a:	46bd      	mov	sp, r7
 8004a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a10:	4770      	bx	lr
 8004a12:	bf00      	nop
 8004a14:	20000000 	.word	0x20000000

08004a18 <HAL_RCC_GetPCLK1Freq>:
 8004a18:	b580      	push	{r7, lr}
 8004a1a:	af00      	add	r7, sp, #0
 8004a1c:	f7ff fff0 	bl	8004a00 <HAL_RCC_GetHCLKFreq>
 8004a20:	4602      	mov	r2, r0
 8004a22:	4b05      	ldr	r3, [pc, #20]	; (8004a38 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004a24:	689b      	ldr	r3, [r3, #8]
 8004a26:	0a9b      	lsrs	r3, r3, #10
 8004a28:	f003 0307 	and.w	r3, r3, #7
 8004a2c:	4903      	ldr	r1, [pc, #12]	; (8004a3c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004a2e:	5ccb      	ldrb	r3, [r1, r3]
 8004a30:	fa22 f303 	lsr.w	r3, r2, r3
 8004a34:	4618      	mov	r0, r3
 8004a36:	bd80      	pop	{r7, pc}
 8004a38:	40023800 	.word	0x40023800
 8004a3c:	08008d30 	.word	0x08008d30

08004a40 <HAL_RCCEx_PeriphCLKConfig>:
 8004a40:	b580      	push	{r7, lr}
 8004a42:	b086      	sub	sp, #24
 8004a44:	af00      	add	r7, sp, #0
 8004a46:	6078      	str	r0, [r7, #4]
 8004a48:	2300      	movs	r3, #0
 8004a4a:	617b      	str	r3, [r7, #20]
 8004a4c:	2300      	movs	r3, #0
 8004a4e:	613b      	str	r3, [r7, #16]
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	f003 0301 	and.w	r3, r3, #1
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d105      	bne.n	8004a68 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	f003 0304 	and.w	r3, r3, #4
 8004a64:	2b00      	cmp	r3, #0
 8004a66:	d035      	beq.n	8004ad4 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8004a68:	4b62      	ldr	r3, [pc, #392]	; (8004bf4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8004a6a:	2200      	movs	r2, #0
 8004a6c:	601a      	str	r2, [r3, #0]
 8004a6e:	f7fd f927 	bl	8001cc0 <HAL_GetTick>
 8004a72:	6178      	str	r0, [r7, #20]
 8004a74:	e008      	b.n	8004a88 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8004a76:	f7fd f923 	bl	8001cc0 <HAL_GetTick>
 8004a7a:	4602      	mov	r2, r0
 8004a7c:	697b      	ldr	r3, [r7, #20]
 8004a7e:	1ad3      	subs	r3, r2, r3
 8004a80:	2b02      	cmp	r3, #2
 8004a82:	d901      	bls.n	8004a88 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8004a84:	2303      	movs	r3, #3
 8004a86:	e0b0      	b.n	8004bea <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004a88:	4b5b      	ldr	r3, [pc, #364]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d1f0      	bne.n	8004a76 <HAL_RCCEx_PeriphCLKConfig+0x36>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	685b      	ldr	r3, [r3, #4]
 8004a98:	019a      	lsls	r2, r3, #6
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	689b      	ldr	r3, [r3, #8]
 8004a9e:	071b      	lsls	r3, r3, #28
 8004aa0:	4955      	ldr	r1, [pc, #340]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004aa2:	4313      	orrs	r3, r2
 8004aa4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8004aa8:	4b52      	ldr	r3, [pc, #328]	; (8004bf4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8004aaa:	2201      	movs	r2, #1
 8004aac:	601a      	str	r2, [r3, #0]
 8004aae:	f7fd f907 	bl	8001cc0 <HAL_GetTick>
 8004ab2:	6178      	str	r0, [r7, #20]
 8004ab4:	e008      	b.n	8004ac8 <HAL_RCCEx_PeriphCLKConfig+0x88>
 8004ab6:	f7fd f903 	bl	8001cc0 <HAL_GetTick>
 8004aba:	4602      	mov	r2, r0
 8004abc:	697b      	ldr	r3, [r7, #20]
 8004abe:	1ad3      	subs	r3, r2, r3
 8004ac0:	2b02      	cmp	r3, #2
 8004ac2:	d901      	bls.n	8004ac8 <HAL_RCCEx_PeriphCLKConfig+0x88>
 8004ac4:	2303      	movs	r3, #3
 8004ac6:	e090      	b.n	8004bea <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004ac8:	4b4b      	ldr	r3, [pc, #300]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d0f0      	beq.n	8004ab6 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	f003 0302 	and.w	r3, r3, #2
 8004adc:	2b00      	cmp	r3, #0
 8004ade:	f000 8083 	beq.w	8004be8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8004ae2:	2300      	movs	r3, #0
 8004ae4:	60fb      	str	r3, [r7, #12]
 8004ae6:	4b44      	ldr	r3, [pc, #272]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004ae8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004aea:	4a43      	ldr	r2, [pc, #268]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004aec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004af0:	6413      	str	r3, [r2, #64]	; 0x40
 8004af2:	4b41      	ldr	r3, [pc, #260]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004af4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004af6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004afa:	60fb      	str	r3, [r7, #12]
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	4b3f      	ldr	r3, [pc, #252]	; (8004bfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004b00:	681b      	ldr	r3, [r3, #0]
 8004b02:	4a3e      	ldr	r2, [pc, #248]	; (8004bfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004b04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b08:	6013      	str	r3, [r2, #0]
 8004b0a:	f7fd f8d9 	bl	8001cc0 <HAL_GetTick>
 8004b0e:	6178      	str	r0, [r7, #20]
 8004b10:	e008      	b.n	8004b24 <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8004b12:	f7fd f8d5 	bl	8001cc0 <HAL_GetTick>
 8004b16:	4602      	mov	r2, r0
 8004b18:	697b      	ldr	r3, [r7, #20]
 8004b1a:	1ad3      	subs	r3, r2, r3
 8004b1c:	2b02      	cmp	r3, #2
 8004b1e:	d901      	bls.n	8004b24 <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8004b20:	2303      	movs	r3, #3
 8004b22:	e062      	b.n	8004bea <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004b24:	4b35      	ldr	r3, [pc, #212]	; (8004bfc <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d0f0      	beq.n	8004b12 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8004b30:	4b31      	ldr	r3, [pc, #196]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004b32:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b34:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004b38:	613b      	str	r3, [r7, #16]
 8004b3a:	693b      	ldr	r3, [r7, #16]
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d02f      	beq.n	8004ba0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	68db      	ldr	r3, [r3, #12]
 8004b44:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004b48:	693a      	ldr	r2, [r7, #16]
 8004b4a:	429a      	cmp	r2, r3
 8004b4c:	d028      	beq.n	8004ba0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8004b4e:	4b2a      	ldr	r3, [pc, #168]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004b50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004b56:	613b      	str	r3, [r7, #16]
 8004b58:	4b29      	ldr	r3, [pc, #164]	; (8004c00 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004b5a:	2201      	movs	r2, #1
 8004b5c:	601a      	str	r2, [r3, #0]
 8004b5e:	4b28      	ldr	r3, [pc, #160]	; (8004c00 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004b60:	2200      	movs	r2, #0
 8004b62:	601a      	str	r2, [r3, #0]
 8004b64:	4a24      	ldr	r2, [pc, #144]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004b66:	693b      	ldr	r3, [r7, #16]
 8004b68:	6713      	str	r3, [r2, #112]	; 0x70
 8004b6a:	4b23      	ldr	r3, [pc, #140]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004b6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b6e:	f003 0301 	and.w	r3, r3, #1
 8004b72:	2b01      	cmp	r3, #1
 8004b74:	d114      	bne.n	8004ba0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8004b76:	f7fd f8a3 	bl	8001cc0 <HAL_GetTick>
 8004b7a:	6178      	str	r0, [r7, #20]
 8004b7c:	e00a      	b.n	8004b94 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8004b7e:	f7fd f89f 	bl	8001cc0 <HAL_GetTick>
 8004b82:	4602      	mov	r2, r0
 8004b84:	697b      	ldr	r3, [r7, #20]
 8004b86:	1ad3      	subs	r3, r2, r3
 8004b88:	f241 3288 	movw	r2, #5000	; 0x1388
 8004b8c:	4293      	cmp	r3, r2
 8004b8e:	d901      	bls.n	8004b94 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8004b90:	2303      	movs	r3, #3
 8004b92:	e02a      	b.n	8004bea <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004b94:	4b18      	ldr	r3, [pc, #96]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004b96:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b98:	f003 0302 	and.w	r3, r3, #2
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	d0ee      	beq.n	8004b7e <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	68db      	ldr	r3, [r3, #12]
 8004ba4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ba8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004bac:	d10d      	bne.n	8004bca <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8004bae:	4b12      	ldr	r3, [pc, #72]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004bb0:	689b      	ldr	r3, [r3, #8]
 8004bb2:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	68db      	ldr	r3, [r3, #12]
 8004bba:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8004bbe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004bc2:	490d      	ldr	r1, [pc, #52]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004bc4:	4313      	orrs	r3, r2
 8004bc6:	608b      	str	r3, [r1, #8]
 8004bc8:	e005      	b.n	8004bd6 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8004bca:	4b0b      	ldr	r3, [pc, #44]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004bcc:	689b      	ldr	r3, [r3, #8]
 8004bce:	4a0a      	ldr	r2, [pc, #40]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004bd0:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8004bd4:	6093      	str	r3, [r2, #8]
 8004bd6:	4b08      	ldr	r3, [pc, #32]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004bd8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	68db      	ldr	r3, [r3, #12]
 8004bde:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004be2:	4905      	ldr	r1, [pc, #20]	; (8004bf8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004be4:	4313      	orrs	r3, r2
 8004be6:	670b      	str	r3, [r1, #112]	; 0x70
 8004be8:	2300      	movs	r3, #0
 8004bea:	4618      	mov	r0, r3
 8004bec:	3718      	adds	r7, #24
 8004bee:	46bd      	mov	sp, r7
 8004bf0:	bd80      	pop	{r7, pc}
 8004bf2:	bf00      	nop
 8004bf4:	42470068 	.word	0x42470068
 8004bf8:	40023800 	.word	0x40023800
 8004bfc:	40007000 	.word	0x40007000
 8004c00:	42470e40 	.word	0x42470e40

08004c04 <HAL_RCCEx_GetPeriphCLKFreq>:
 8004c04:	b480      	push	{r7}
 8004c06:	b087      	sub	sp, #28
 8004c08:	af00      	add	r7, sp, #0
 8004c0a:	6078      	str	r0, [r7, #4]
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	617b      	str	r3, [r7, #20]
 8004c10:	2300      	movs	r3, #0
 8004c12:	613b      	str	r3, [r7, #16]
 8004c14:	2300      	movs	r3, #0
 8004c16:	60fb      	str	r3, [r7, #12]
 8004c18:	2300      	movs	r3, #0
 8004c1a:	60bb      	str	r3, [r7, #8]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	2b01      	cmp	r3, #1
 8004c20:	d13e      	bne.n	8004ca0 <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
 8004c22:	4b23      	ldr	r3, [pc, #140]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c24:	689b      	ldr	r3, [r3, #8]
 8004c26:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004c2a:	60fb      	str	r3, [r7, #12]
 8004c2c:	68fb      	ldr	r3, [r7, #12]
 8004c2e:	2b00      	cmp	r3, #0
 8004c30:	d005      	beq.n	8004c3e <HAL_RCCEx_GetPeriphCLKFreq+0x3a>
 8004c32:	68fb      	ldr	r3, [r7, #12]
 8004c34:	2b01      	cmp	r3, #1
 8004c36:	d12f      	bne.n	8004c98 <HAL_RCCEx_GetPeriphCLKFreq+0x94>
 8004c38:	4b1e      	ldr	r3, [pc, #120]	; (8004cb4 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8004c3a:	617b      	str	r3, [r7, #20]
 8004c3c:	e02f      	b.n	8004c9e <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8004c3e:	4b1c      	ldr	r3, [pc, #112]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c40:	685b      	ldr	r3, [r3, #4]
 8004c42:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004c46:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004c4a:	d108      	bne.n	8004c5e <HAL_RCCEx_GetPeriphCLKFreq+0x5a>
 8004c4c:	4b18      	ldr	r3, [pc, #96]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c4e:	685b      	ldr	r3, [r3, #4]
 8004c50:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004c54:	4a18      	ldr	r2, [pc, #96]	; (8004cb8 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>)
 8004c56:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c5a:	613b      	str	r3, [r7, #16]
 8004c5c:	e007      	b.n	8004c6e <HAL_RCCEx_GetPeriphCLKFreq+0x6a>
 8004c5e:	4b14      	ldr	r3, [pc, #80]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c60:	685b      	ldr	r3, [r3, #4]
 8004c62:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004c66:	4a15      	ldr	r2, [pc, #84]	; (8004cbc <HAL_RCCEx_GetPeriphCLKFreq+0xb8>)
 8004c68:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c6c:	613b      	str	r3, [r7, #16]
 8004c6e:	4b10      	ldr	r3, [pc, #64]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004c74:	099b      	lsrs	r3, r3, #6
 8004c76:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8004c7a:	693b      	ldr	r3, [r7, #16]
 8004c7c:	fb02 f303 	mul.w	r3, r2, r3
 8004c80:	60bb      	str	r3, [r7, #8]
 8004c82:	4b0b      	ldr	r3, [pc, #44]	; (8004cb0 <HAL_RCCEx_GetPeriphCLKFreq+0xac>)
 8004c84:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004c88:	0f1b      	lsrs	r3, r3, #28
 8004c8a:	f003 0307 	and.w	r3, r3, #7
 8004c8e:	68ba      	ldr	r2, [r7, #8]
 8004c90:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c94:	617b      	str	r3, [r7, #20]
 8004c96:	e002      	b.n	8004c9e <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8004c98:	2300      	movs	r3, #0
 8004c9a:	617b      	str	r3, [r7, #20]
 8004c9c:	bf00      	nop
 8004c9e:	bf00      	nop
 8004ca0:	697b      	ldr	r3, [r7, #20]
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	371c      	adds	r7, #28
 8004ca6:	46bd      	mov	sp, r7
 8004ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cac:	4770      	bx	lr
 8004cae:	bf00      	nop
 8004cb0:	40023800 	.word	0x40023800
 8004cb4:	00bb8000 	.word	0x00bb8000
 8004cb8:	007a1200 	.word	0x007a1200
 8004cbc:	00f42400 	.word	0x00f42400

08004cc0 <HAL_SPI_Init>:
 8004cc0:	b580      	push	{r7, lr}
 8004cc2:	b082      	sub	sp, #8
 8004cc4:	af00      	add	r7, sp, #0
 8004cc6:	6078      	str	r0, [r7, #4]
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	d101      	bne.n	8004cd2 <HAL_SPI_Init+0x12>
 8004cce:	2301      	movs	r3, #1
 8004cd0:	e07b      	b.n	8004dca <HAL_SPI_Init+0x10a>
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d108      	bne.n	8004cec <HAL_SPI_Init+0x2c>
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	685b      	ldr	r3, [r3, #4]
 8004cde:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004ce2:	d009      	beq.n	8004cf8 <HAL_SPI_Init+0x38>
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	61da      	str	r2, [r3, #28]
 8004cea:	e005      	b.n	8004cf8 <HAL_SPI_Init+0x38>
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	2200      	movs	r2, #0
 8004cf0:	611a      	str	r2, [r3, #16]
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	2200      	movs	r2, #0
 8004cf6:	615a      	str	r2, [r3, #20]
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	2200      	movs	r2, #0
 8004cfc:	629a      	str	r2, [r3, #40]	; 0x28
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004d04:	b2db      	uxtb	r3, r3
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d106      	bne.n	8004d18 <HAL_SPI_Init+0x58>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	2200      	movs	r2, #0
 8004d0e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004d12:	6878      	ldr	r0, [r7, #4]
 8004d14:	f7fc fe94 	bl	8001a40 <HAL_SPI_MspInit>
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	2202      	movs	r2, #2
 8004d1c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	681a      	ldr	r2, [r3, #0]
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004d2e:	601a      	str	r2, [r3, #0]
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	685b      	ldr	r3, [r3, #4]
 8004d34:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	689b      	ldr	r3, [r3, #8]
 8004d3c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004d40:	431a      	orrs	r2, r3
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	68db      	ldr	r3, [r3, #12]
 8004d46:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004d4a:	431a      	orrs	r2, r3
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	691b      	ldr	r3, [r3, #16]
 8004d50:	f003 0302 	and.w	r3, r3, #2
 8004d54:	431a      	orrs	r2, r3
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	695b      	ldr	r3, [r3, #20]
 8004d5a:	f003 0301 	and.w	r3, r3, #1
 8004d5e:	431a      	orrs	r2, r3
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	699b      	ldr	r3, [r3, #24]
 8004d64:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004d68:	431a      	orrs	r2, r3
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	69db      	ldr	r3, [r3, #28]
 8004d6e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004d72:	431a      	orrs	r2, r3
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	6a1b      	ldr	r3, [r3, #32]
 8004d78:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d7c:	ea42 0103 	orr.w	r1, r2, r3
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d84:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	430a      	orrs	r2, r1
 8004d8e:	601a      	str	r2, [r3, #0]
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	699b      	ldr	r3, [r3, #24]
 8004d94:	0c1b      	lsrs	r3, r3, #16
 8004d96:	f003 0104 	and.w	r1, r3, #4
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d9e:	f003 0210 	and.w	r2, r3, #16
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	430a      	orrs	r2, r1
 8004da8:	605a      	str	r2, [r3, #4]
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	69da      	ldr	r2, [r3, #28]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004db8:	61da      	str	r2, [r3, #28]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	2200      	movs	r2, #0
 8004dbe:	655a      	str	r2, [r3, #84]	; 0x54
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	2201      	movs	r2, #1
 8004dc4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004dc8:	2300      	movs	r3, #0
 8004dca:	4618      	mov	r0, r3
 8004dcc:	3708      	adds	r7, #8
 8004dce:	46bd      	mov	sp, r7
 8004dd0:	bd80      	pop	{r7, pc}

08004dd2 <USB_CoreInit>:
 8004dd2:	b084      	sub	sp, #16
 8004dd4:	b580      	push	{r7, lr}
 8004dd6:	b084      	sub	sp, #16
 8004dd8:	af00      	add	r7, sp, #0
 8004dda:	6078      	str	r0, [r7, #4]
 8004ddc:	f107 001c 	add.w	r0, r7, #28
 8004de0:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8004de4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004de6:	2b01      	cmp	r3, #1
 8004de8:	d122      	bne.n	8004e30 <USB_CoreInit+0x5e>
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004dee:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	639a      	str	r2, [r3, #56]	; 0x38
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	68db      	ldr	r3, [r3, #12]
 8004dfa:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8004dfe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004e02:	687a      	ldr	r2, [r7, #4]
 8004e04:	60d3      	str	r3, [r2, #12]
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	68db      	ldr	r3, [r3, #12]
 8004e0a:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	60da      	str	r2, [r3, #12]
 8004e12:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004e14:	2b01      	cmp	r3, #1
 8004e16:	d105      	bne.n	8004e24 <USB_CoreInit+0x52>
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	68db      	ldr	r3, [r3, #12]
 8004e1c:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	60da      	str	r2, [r3, #12]
 8004e24:	6878      	ldr	r0, [r7, #4]
 8004e26:	f001 fac5 	bl	80063b4 <USB_CoreReset>
 8004e2a:	4603      	mov	r3, r0
 8004e2c:	73fb      	strb	r3, [r7, #15]
 8004e2e:	e01a      	b.n	8004e66 <USB_CoreInit+0x94>
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	68db      	ldr	r3, [r3, #12]
 8004e34:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	60da      	str	r2, [r3, #12]
 8004e3c:	6878      	ldr	r0, [r7, #4]
 8004e3e:	f001 fab9 	bl	80063b4 <USB_CoreReset>
 8004e42:	4603      	mov	r3, r0
 8004e44:	73fb      	strb	r3, [r7, #15]
 8004e46:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004e48:	2b00      	cmp	r3, #0
 8004e4a:	d106      	bne.n	8004e5a <USB_CoreInit+0x88>
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e50:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	639a      	str	r2, [r3, #56]	; 0x38
 8004e58:	e005      	b.n	8004e66 <USB_CoreInit+0x94>
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e5e:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	639a      	str	r2, [r3, #56]	; 0x38
 8004e66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004e68:	2b01      	cmp	r3, #1
 8004e6a:	d10b      	bne.n	8004e84 <USB_CoreInit+0xb2>
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	689b      	ldr	r3, [r3, #8]
 8004e70:	f043 0206 	orr.w	r2, r3, #6
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	609a      	str	r2, [r3, #8]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	689b      	ldr	r3, [r3, #8]
 8004e7c:	f043 0220 	orr.w	r2, r3, #32
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	609a      	str	r2, [r3, #8]
 8004e84:	7bfb      	ldrb	r3, [r7, #15]
 8004e86:	4618      	mov	r0, r3
 8004e88:	3710      	adds	r7, #16
 8004e8a:	46bd      	mov	sp, r7
 8004e8c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8004e90:	b004      	add	sp, #16
 8004e92:	4770      	bx	lr

08004e94 <USB_SetTurnaroundTime>:
 8004e94:	b480      	push	{r7}
 8004e96:	b087      	sub	sp, #28
 8004e98:	af00      	add	r7, sp, #0
 8004e9a:	60f8      	str	r0, [r7, #12]
 8004e9c:	60b9      	str	r1, [r7, #8]
 8004e9e:	4613      	mov	r3, r2
 8004ea0:	71fb      	strb	r3, [r7, #7]
 8004ea2:	79fb      	ldrb	r3, [r7, #7]
 8004ea4:	2b02      	cmp	r3, #2
 8004ea6:	d165      	bne.n	8004f74 <USB_SetTurnaroundTime+0xe0>
 8004ea8:	68bb      	ldr	r3, [r7, #8]
 8004eaa:	4a41      	ldr	r2, [pc, #260]	; (8004fb0 <USB_SetTurnaroundTime+0x11c>)
 8004eac:	4293      	cmp	r3, r2
 8004eae:	d906      	bls.n	8004ebe <USB_SetTurnaroundTime+0x2a>
 8004eb0:	68bb      	ldr	r3, [r7, #8]
 8004eb2:	4a40      	ldr	r2, [pc, #256]	; (8004fb4 <USB_SetTurnaroundTime+0x120>)
 8004eb4:	4293      	cmp	r3, r2
 8004eb6:	d202      	bcs.n	8004ebe <USB_SetTurnaroundTime+0x2a>
 8004eb8:	230f      	movs	r3, #15
 8004eba:	617b      	str	r3, [r7, #20]
 8004ebc:	e062      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004ebe:	68bb      	ldr	r3, [r7, #8]
 8004ec0:	4a3c      	ldr	r2, [pc, #240]	; (8004fb4 <USB_SetTurnaroundTime+0x120>)
 8004ec2:	4293      	cmp	r3, r2
 8004ec4:	d306      	bcc.n	8004ed4 <USB_SetTurnaroundTime+0x40>
 8004ec6:	68bb      	ldr	r3, [r7, #8]
 8004ec8:	4a3b      	ldr	r2, [pc, #236]	; (8004fb8 <USB_SetTurnaroundTime+0x124>)
 8004eca:	4293      	cmp	r3, r2
 8004ecc:	d202      	bcs.n	8004ed4 <USB_SetTurnaroundTime+0x40>
 8004ece:	230e      	movs	r3, #14
 8004ed0:	617b      	str	r3, [r7, #20]
 8004ed2:	e057      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004ed4:	68bb      	ldr	r3, [r7, #8]
 8004ed6:	4a38      	ldr	r2, [pc, #224]	; (8004fb8 <USB_SetTurnaroundTime+0x124>)
 8004ed8:	4293      	cmp	r3, r2
 8004eda:	d306      	bcc.n	8004eea <USB_SetTurnaroundTime+0x56>
 8004edc:	68bb      	ldr	r3, [r7, #8]
 8004ede:	4a37      	ldr	r2, [pc, #220]	; (8004fbc <USB_SetTurnaroundTime+0x128>)
 8004ee0:	4293      	cmp	r3, r2
 8004ee2:	d202      	bcs.n	8004eea <USB_SetTurnaroundTime+0x56>
 8004ee4:	230d      	movs	r3, #13
 8004ee6:	617b      	str	r3, [r7, #20]
 8004ee8:	e04c      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004eea:	68bb      	ldr	r3, [r7, #8]
 8004eec:	4a33      	ldr	r2, [pc, #204]	; (8004fbc <USB_SetTurnaroundTime+0x128>)
 8004eee:	4293      	cmp	r3, r2
 8004ef0:	d306      	bcc.n	8004f00 <USB_SetTurnaroundTime+0x6c>
 8004ef2:	68bb      	ldr	r3, [r7, #8]
 8004ef4:	4a32      	ldr	r2, [pc, #200]	; (8004fc0 <USB_SetTurnaroundTime+0x12c>)
 8004ef6:	4293      	cmp	r3, r2
 8004ef8:	d802      	bhi.n	8004f00 <USB_SetTurnaroundTime+0x6c>
 8004efa:	230c      	movs	r3, #12
 8004efc:	617b      	str	r3, [r7, #20]
 8004efe:	e041      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f00:	68bb      	ldr	r3, [r7, #8]
 8004f02:	4a2f      	ldr	r2, [pc, #188]	; (8004fc0 <USB_SetTurnaroundTime+0x12c>)
 8004f04:	4293      	cmp	r3, r2
 8004f06:	d906      	bls.n	8004f16 <USB_SetTurnaroundTime+0x82>
 8004f08:	68bb      	ldr	r3, [r7, #8]
 8004f0a:	4a2e      	ldr	r2, [pc, #184]	; (8004fc4 <USB_SetTurnaroundTime+0x130>)
 8004f0c:	4293      	cmp	r3, r2
 8004f0e:	d802      	bhi.n	8004f16 <USB_SetTurnaroundTime+0x82>
 8004f10:	230b      	movs	r3, #11
 8004f12:	617b      	str	r3, [r7, #20]
 8004f14:	e036      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f16:	68bb      	ldr	r3, [r7, #8]
 8004f18:	4a2a      	ldr	r2, [pc, #168]	; (8004fc4 <USB_SetTurnaroundTime+0x130>)
 8004f1a:	4293      	cmp	r3, r2
 8004f1c:	d906      	bls.n	8004f2c <USB_SetTurnaroundTime+0x98>
 8004f1e:	68bb      	ldr	r3, [r7, #8]
 8004f20:	4a29      	ldr	r2, [pc, #164]	; (8004fc8 <USB_SetTurnaroundTime+0x134>)
 8004f22:	4293      	cmp	r3, r2
 8004f24:	d802      	bhi.n	8004f2c <USB_SetTurnaroundTime+0x98>
 8004f26:	230a      	movs	r3, #10
 8004f28:	617b      	str	r3, [r7, #20]
 8004f2a:	e02b      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f2c:	68bb      	ldr	r3, [r7, #8]
 8004f2e:	4a26      	ldr	r2, [pc, #152]	; (8004fc8 <USB_SetTurnaroundTime+0x134>)
 8004f30:	4293      	cmp	r3, r2
 8004f32:	d906      	bls.n	8004f42 <USB_SetTurnaroundTime+0xae>
 8004f34:	68bb      	ldr	r3, [r7, #8]
 8004f36:	4a25      	ldr	r2, [pc, #148]	; (8004fcc <USB_SetTurnaroundTime+0x138>)
 8004f38:	4293      	cmp	r3, r2
 8004f3a:	d202      	bcs.n	8004f42 <USB_SetTurnaroundTime+0xae>
 8004f3c:	2309      	movs	r3, #9
 8004f3e:	617b      	str	r3, [r7, #20]
 8004f40:	e020      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f42:	68bb      	ldr	r3, [r7, #8]
 8004f44:	4a21      	ldr	r2, [pc, #132]	; (8004fcc <USB_SetTurnaroundTime+0x138>)
 8004f46:	4293      	cmp	r3, r2
 8004f48:	d306      	bcc.n	8004f58 <USB_SetTurnaroundTime+0xc4>
 8004f4a:	68bb      	ldr	r3, [r7, #8]
 8004f4c:	4a20      	ldr	r2, [pc, #128]	; (8004fd0 <USB_SetTurnaroundTime+0x13c>)
 8004f4e:	4293      	cmp	r3, r2
 8004f50:	d802      	bhi.n	8004f58 <USB_SetTurnaroundTime+0xc4>
 8004f52:	2308      	movs	r3, #8
 8004f54:	617b      	str	r3, [r7, #20]
 8004f56:	e015      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f58:	68bb      	ldr	r3, [r7, #8]
 8004f5a:	4a1d      	ldr	r2, [pc, #116]	; (8004fd0 <USB_SetTurnaroundTime+0x13c>)
 8004f5c:	4293      	cmp	r3, r2
 8004f5e:	d906      	bls.n	8004f6e <USB_SetTurnaroundTime+0xda>
 8004f60:	68bb      	ldr	r3, [r7, #8]
 8004f62:	4a1c      	ldr	r2, [pc, #112]	; (8004fd4 <USB_SetTurnaroundTime+0x140>)
 8004f64:	4293      	cmp	r3, r2
 8004f66:	d202      	bcs.n	8004f6e <USB_SetTurnaroundTime+0xda>
 8004f68:	2307      	movs	r3, #7
 8004f6a:	617b      	str	r3, [r7, #20]
 8004f6c:	e00a      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f6e:	2306      	movs	r3, #6
 8004f70:	617b      	str	r3, [r7, #20]
 8004f72:	e007      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f74:	79fb      	ldrb	r3, [r7, #7]
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d102      	bne.n	8004f80 <USB_SetTurnaroundTime+0xec>
 8004f7a:	2309      	movs	r3, #9
 8004f7c:	617b      	str	r3, [r7, #20]
 8004f7e:	e001      	b.n	8004f84 <USB_SetTurnaroundTime+0xf0>
 8004f80:	2309      	movs	r3, #9
 8004f82:	617b      	str	r3, [r7, #20]
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	68db      	ldr	r3, [r3, #12]
 8004f88:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	60da      	str	r2, [r3, #12]
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	68da      	ldr	r2, [r3, #12]
 8004f94:	697b      	ldr	r3, [r7, #20]
 8004f96:	029b      	lsls	r3, r3, #10
 8004f98:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 8004f9c:	431a      	orrs	r2, r3
 8004f9e:	68fb      	ldr	r3, [r7, #12]
 8004fa0:	60da      	str	r2, [r3, #12]
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	4618      	mov	r0, r3
 8004fa6:	371c      	adds	r7, #28
 8004fa8:	46bd      	mov	sp, r7
 8004faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fae:	4770      	bx	lr
 8004fb0:	00d8acbf 	.word	0x00d8acbf
 8004fb4:	00e4e1c0 	.word	0x00e4e1c0
 8004fb8:	00f42400 	.word	0x00f42400
 8004fbc:	01067380 	.word	0x01067380
 8004fc0:	011a499f 	.word	0x011a499f
 8004fc4:	01312cff 	.word	0x01312cff
 8004fc8:	014ca43f 	.word	0x014ca43f
 8004fcc:	016e3600 	.word	0x016e3600
 8004fd0:	01a6ab1f 	.word	0x01a6ab1f
 8004fd4:	01e84800 	.word	0x01e84800

08004fd8 <USB_EnableGlobalInt>:
 8004fd8:	b480      	push	{r7}
 8004fda:	b083      	sub	sp, #12
 8004fdc:	af00      	add	r7, sp, #0
 8004fde:	6078      	str	r0, [r7, #4]
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	689b      	ldr	r3, [r3, #8]
 8004fe4:	f043 0201 	orr.w	r2, r3, #1
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	609a      	str	r2, [r3, #8]
 8004fec:	2300      	movs	r3, #0
 8004fee:	4618      	mov	r0, r3
 8004ff0:	370c      	adds	r7, #12
 8004ff2:	46bd      	mov	sp, r7
 8004ff4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ff8:	4770      	bx	lr

08004ffa <USB_DisableGlobalInt>:
 8004ffa:	b480      	push	{r7}
 8004ffc:	b083      	sub	sp, #12
 8004ffe:	af00      	add	r7, sp, #0
 8005000:	6078      	str	r0, [r7, #4]
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	689b      	ldr	r3, [r3, #8]
 8005006:	f023 0201 	bic.w	r2, r3, #1
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	609a      	str	r2, [r3, #8]
 800500e:	2300      	movs	r3, #0
 8005010:	4618      	mov	r0, r3
 8005012:	370c      	adds	r7, #12
 8005014:	46bd      	mov	sp, r7
 8005016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800501a:	4770      	bx	lr

0800501c <USB_SetCurrentMode>:
 800501c:	b580      	push	{r7, lr}
 800501e:	b082      	sub	sp, #8
 8005020:	af00      	add	r7, sp, #0
 8005022:	6078      	str	r0, [r7, #4]
 8005024:	460b      	mov	r3, r1
 8005026:	70fb      	strb	r3, [r7, #3]
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	68db      	ldr	r3, [r3, #12]
 800502c:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	60da      	str	r2, [r3, #12]
 8005034:	78fb      	ldrb	r3, [r7, #3]
 8005036:	2b01      	cmp	r3, #1
 8005038:	d106      	bne.n	8005048 <USB_SetCurrentMode+0x2c>
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	68db      	ldr	r3, [r3, #12]
 800503e:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	60da      	str	r2, [r3, #12]
 8005046:	e00b      	b.n	8005060 <USB_SetCurrentMode+0x44>
 8005048:	78fb      	ldrb	r3, [r7, #3]
 800504a:	2b00      	cmp	r3, #0
 800504c:	d106      	bne.n	800505c <USB_SetCurrentMode+0x40>
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	68db      	ldr	r3, [r3, #12]
 8005052:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	60da      	str	r2, [r3, #12]
 800505a:	e001      	b.n	8005060 <USB_SetCurrentMode+0x44>
 800505c:	2301      	movs	r3, #1
 800505e:	e003      	b.n	8005068 <USB_SetCurrentMode+0x4c>
 8005060:	2032      	movs	r0, #50	; 0x32
 8005062:	f7fc fe39 	bl	8001cd8 <HAL_Delay>
 8005066:	2300      	movs	r3, #0
 8005068:	4618      	mov	r0, r3
 800506a:	3708      	adds	r7, #8
 800506c:	46bd      	mov	sp, r7
 800506e:	bd80      	pop	{r7, pc}

08005070 <USB_DevInit>:
 8005070:	b084      	sub	sp, #16
 8005072:	b580      	push	{r7, lr}
 8005074:	b086      	sub	sp, #24
 8005076:	af00      	add	r7, sp, #0
 8005078:	6078      	str	r0, [r7, #4]
 800507a:	f107 0024 	add.w	r0, r7, #36	; 0x24
 800507e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8005082:	2300      	movs	r3, #0
 8005084:	75fb      	strb	r3, [r7, #23]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	60fb      	str	r3, [r7, #12]
 800508a:	2300      	movs	r3, #0
 800508c:	613b      	str	r3, [r7, #16]
 800508e:	e009      	b.n	80050a4 <USB_DevInit+0x34>
 8005090:	687a      	ldr	r2, [r7, #4]
 8005092:	693b      	ldr	r3, [r7, #16]
 8005094:	3340      	adds	r3, #64	; 0x40
 8005096:	009b      	lsls	r3, r3, #2
 8005098:	4413      	add	r3, r2
 800509a:	2200      	movs	r2, #0
 800509c:	605a      	str	r2, [r3, #4]
 800509e:	693b      	ldr	r3, [r7, #16]
 80050a0:	3301      	adds	r3, #1
 80050a2:	613b      	str	r3, [r7, #16]
 80050a4:	693b      	ldr	r3, [r7, #16]
 80050a6:	2b0e      	cmp	r3, #14
 80050a8:	d9f2      	bls.n	8005090 <USB_DevInit+0x20>
 80050aa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d11c      	bne.n	80050ea <USB_DevInit+0x7a>
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80050b6:	685b      	ldr	r3, [r3, #4]
 80050b8:	68fa      	ldr	r2, [r7, #12]
 80050ba:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80050be:	f043 0302 	orr.w	r3, r3, #2
 80050c2:	6053      	str	r3, [r2, #4]
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050c8:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	639a      	str	r2, [r3, #56]	; 0x38
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050d4:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	639a      	str	r2, [r3, #56]	; 0x38
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050e0:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	639a      	str	r2, [r3, #56]	; 0x38
 80050e8:	e00b      	b.n	8005102 <USB_DevInit+0x92>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050ee:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	639a      	str	r2, [r3, #56]	; 0x38
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050fa:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	639a      	str	r2, [r3, #56]	; 0x38
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8005108:	461a      	mov	r2, r3
 800510a:	2300      	movs	r3, #0
 800510c:	6013      	str	r3, [r2, #0]
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005114:	4619      	mov	r1, r3
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800511c:	461a      	mov	r2, r3
 800511e:	680b      	ldr	r3, [r1, #0]
 8005120:	6013      	str	r3, [r2, #0]
 8005122:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005124:	2b01      	cmp	r3, #1
 8005126:	d10c      	bne.n	8005142 <USB_DevInit+0xd2>
 8005128:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800512a:	2b00      	cmp	r3, #0
 800512c:	d104      	bne.n	8005138 <USB_DevInit+0xc8>
 800512e:	2100      	movs	r1, #0
 8005130:	6878      	ldr	r0, [r7, #4]
 8005132:	f000 f949 	bl	80053c8 <USB_SetDevSpeed>
 8005136:	e008      	b.n	800514a <USB_DevInit+0xda>
 8005138:	2101      	movs	r1, #1
 800513a:	6878      	ldr	r0, [r7, #4]
 800513c:	f000 f944 	bl	80053c8 <USB_SetDevSpeed>
 8005140:	e003      	b.n	800514a <USB_DevInit+0xda>
 8005142:	2103      	movs	r1, #3
 8005144:	6878      	ldr	r0, [r7, #4]
 8005146:	f000 f93f 	bl	80053c8 <USB_SetDevSpeed>
 800514a:	2110      	movs	r1, #16
 800514c:	6878      	ldr	r0, [r7, #4]
 800514e:	f000 f8f3 	bl	8005338 <USB_FlushTxFifo>
 8005152:	4603      	mov	r3, r0
 8005154:	2b00      	cmp	r3, #0
 8005156:	d001      	beq.n	800515c <USB_DevInit+0xec>
 8005158:	2301      	movs	r3, #1
 800515a:	75fb      	strb	r3, [r7, #23]
 800515c:	6878      	ldr	r0, [r7, #4]
 800515e:	f000 f911 	bl	8005384 <USB_FlushRxFifo>
 8005162:	4603      	mov	r3, r0
 8005164:	2b00      	cmp	r3, #0
 8005166:	d001      	beq.n	800516c <USB_DevInit+0xfc>
 8005168:	2301      	movs	r3, #1
 800516a:	75fb      	strb	r3, [r7, #23]
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005172:	461a      	mov	r2, r3
 8005174:	2300      	movs	r3, #0
 8005176:	6113      	str	r3, [r2, #16]
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800517e:	461a      	mov	r2, r3
 8005180:	2300      	movs	r3, #0
 8005182:	6153      	str	r3, [r2, #20]
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800518a:	461a      	mov	r2, r3
 800518c:	2300      	movs	r3, #0
 800518e:	61d3      	str	r3, [r2, #28]
 8005190:	2300      	movs	r3, #0
 8005192:	613b      	str	r3, [r7, #16]
 8005194:	e043      	b.n	800521e <USB_DevInit+0x1ae>
 8005196:	693b      	ldr	r3, [r7, #16]
 8005198:	015a      	lsls	r2, r3, #5
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	4413      	add	r3, r2
 800519e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80051a8:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80051ac:	d118      	bne.n	80051e0 <USB_DevInit+0x170>
 80051ae:	693b      	ldr	r3, [r7, #16]
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d10a      	bne.n	80051ca <USB_DevInit+0x15a>
 80051b4:	693b      	ldr	r3, [r7, #16]
 80051b6:	015a      	lsls	r2, r3, #5
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	4413      	add	r3, r2
 80051bc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80051c0:	461a      	mov	r2, r3
 80051c2:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80051c6:	6013      	str	r3, [r2, #0]
 80051c8:	e013      	b.n	80051f2 <USB_DevInit+0x182>
 80051ca:	693b      	ldr	r3, [r7, #16]
 80051cc:	015a      	lsls	r2, r3, #5
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	4413      	add	r3, r2
 80051d2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80051d6:	461a      	mov	r2, r3
 80051d8:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80051dc:	6013      	str	r3, [r2, #0]
 80051de:	e008      	b.n	80051f2 <USB_DevInit+0x182>
 80051e0:	693b      	ldr	r3, [r7, #16]
 80051e2:	015a      	lsls	r2, r3, #5
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	4413      	add	r3, r2
 80051e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80051ec:	461a      	mov	r2, r3
 80051ee:	2300      	movs	r3, #0
 80051f0:	6013      	str	r3, [r2, #0]
 80051f2:	693b      	ldr	r3, [r7, #16]
 80051f4:	015a      	lsls	r2, r3, #5
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	4413      	add	r3, r2
 80051fa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80051fe:	461a      	mov	r2, r3
 8005200:	2300      	movs	r3, #0
 8005202:	6113      	str	r3, [r2, #16]
 8005204:	693b      	ldr	r3, [r7, #16]
 8005206:	015a      	lsls	r2, r3, #5
 8005208:	68fb      	ldr	r3, [r7, #12]
 800520a:	4413      	add	r3, r2
 800520c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005210:	461a      	mov	r2, r3
 8005212:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8005216:	6093      	str	r3, [r2, #8]
 8005218:	693b      	ldr	r3, [r7, #16]
 800521a:	3301      	adds	r3, #1
 800521c:	613b      	str	r3, [r7, #16]
 800521e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005220:	693a      	ldr	r2, [r7, #16]
 8005222:	429a      	cmp	r2, r3
 8005224:	d3b7      	bcc.n	8005196 <USB_DevInit+0x126>
 8005226:	2300      	movs	r3, #0
 8005228:	613b      	str	r3, [r7, #16]
 800522a:	e043      	b.n	80052b4 <USB_DevInit+0x244>
 800522c:	693b      	ldr	r3, [r7, #16]
 800522e:	015a      	lsls	r2, r3, #5
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	4413      	add	r3, r2
 8005234:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800523e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8005242:	d118      	bne.n	8005276 <USB_DevInit+0x206>
 8005244:	693b      	ldr	r3, [r7, #16]
 8005246:	2b00      	cmp	r3, #0
 8005248:	d10a      	bne.n	8005260 <USB_DevInit+0x1f0>
 800524a:	693b      	ldr	r3, [r7, #16]
 800524c:	015a      	lsls	r2, r3, #5
 800524e:	68fb      	ldr	r3, [r7, #12]
 8005250:	4413      	add	r3, r2
 8005252:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005256:	461a      	mov	r2, r3
 8005258:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800525c:	6013      	str	r3, [r2, #0]
 800525e:	e013      	b.n	8005288 <USB_DevInit+0x218>
 8005260:	693b      	ldr	r3, [r7, #16]
 8005262:	015a      	lsls	r2, r3, #5
 8005264:	68fb      	ldr	r3, [r7, #12]
 8005266:	4413      	add	r3, r2
 8005268:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800526c:	461a      	mov	r2, r3
 800526e:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8005272:	6013      	str	r3, [r2, #0]
 8005274:	e008      	b.n	8005288 <USB_DevInit+0x218>
 8005276:	693b      	ldr	r3, [r7, #16]
 8005278:	015a      	lsls	r2, r3, #5
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	4413      	add	r3, r2
 800527e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005282:	461a      	mov	r2, r3
 8005284:	2300      	movs	r3, #0
 8005286:	6013      	str	r3, [r2, #0]
 8005288:	693b      	ldr	r3, [r7, #16]
 800528a:	015a      	lsls	r2, r3, #5
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	4413      	add	r3, r2
 8005290:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005294:	461a      	mov	r2, r3
 8005296:	2300      	movs	r3, #0
 8005298:	6113      	str	r3, [r2, #16]
 800529a:	693b      	ldr	r3, [r7, #16]
 800529c:	015a      	lsls	r2, r3, #5
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	4413      	add	r3, r2
 80052a2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80052a6:	461a      	mov	r2, r3
 80052a8:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80052ac:	6093      	str	r3, [r2, #8]
 80052ae:	693b      	ldr	r3, [r7, #16]
 80052b0:	3301      	adds	r3, #1
 80052b2:	613b      	str	r3, [r7, #16]
 80052b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052b6:	693a      	ldr	r2, [r7, #16]
 80052b8:	429a      	cmp	r2, r3
 80052ba:	d3b7      	bcc.n	800522c <USB_DevInit+0x1bc>
 80052bc:	68fb      	ldr	r3, [r7, #12]
 80052be:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80052c2:	691b      	ldr	r3, [r3, #16]
 80052c4:	68fa      	ldr	r2, [r7, #12]
 80052c6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80052ca:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80052ce:	6113      	str	r3, [r2, #16]
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	2200      	movs	r2, #0
 80052d4:	619a      	str	r2, [r3, #24]
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 80052dc:	615a      	str	r2, [r3, #20]
 80052de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	d105      	bne.n	80052f0 <USB_DevInit+0x280>
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	699b      	ldr	r3, [r3, #24]
 80052e8:	f043 0210 	orr.w	r2, r3, #16
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	619a      	str	r2, [r3, #24]
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	699a      	ldr	r2, [r3, #24]
 80052f4:	4b0f      	ldr	r3, [pc, #60]	; (8005334 <USB_DevInit+0x2c4>)
 80052f6:	4313      	orrs	r3, r2
 80052f8:	687a      	ldr	r2, [r7, #4]
 80052fa:	6193      	str	r3, [r2, #24]
 80052fc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80052fe:	2b00      	cmp	r3, #0
 8005300:	d005      	beq.n	800530e <USB_DevInit+0x29e>
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	699b      	ldr	r3, [r3, #24]
 8005306:	f043 0208 	orr.w	r2, r3, #8
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	619a      	str	r2, [r3, #24]
 800530e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005310:	2b01      	cmp	r3, #1
 8005312:	d107      	bne.n	8005324 <USB_DevInit+0x2b4>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	699b      	ldr	r3, [r3, #24]
 8005318:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800531c:	f043 0304 	orr.w	r3, r3, #4
 8005320:	687a      	ldr	r2, [r7, #4]
 8005322:	6193      	str	r3, [r2, #24]
 8005324:	7dfb      	ldrb	r3, [r7, #23]
 8005326:	4618      	mov	r0, r3
 8005328:	3718      	adds	r7, #24
 800532a:	46bd      	mov	sp, r7
 800532c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005330:	b004      	add	sp, #16
 8005332:	4770      	bx	lr
 8005334:	803c3800 	.word	0x803c3800

08005338 <USB_FlushTxFifo>:
 8005338:	b480      	push	{r7}
 800533a:	b085      	sub	sp, #20
 800533c:	af00      	add	r7, sp, #0
 800533e:	6078      	str	r0, [r7, #4]
 8005340:	6039      	str	r1, [r7, #0]
 8005342:	2300      	movs	r3, #0
 8005344:	60fb      	str	r3, [r7, #12]
 8005346:	683b      	ldr	r3, [r7, #0]
 8005348:	019b      	lsls	r3, r3, #6
 800534a:	f043 0220 	orr.w	r2, r3, #32
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	611a      	str	r2, [r3, #16]
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	3301      	adds	r3, #1
 8005356:	60fb      	str	r3, [r7, #12]
 8005358:	68fb      	ldr	r3, [r7, #12]
 800535a:	4a09      	ldr	r2, [pc, #36]	; (8005380 <USB_FlushTxFifo+0x48>)
 800535c:	4293      	cmp	r3, r2
 800535e:	d901      	bls.n	8005364 <USB_FlushTxFifo+0x2c>
 8005360:	2303      	movs	r3, #3
 8005362:	e006      	b.n	8005372 <USB_FlushTxFifo+0x3a>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	691b      	ldr	r3, [r3, #16]
 8005368:	f003 0320 	and.w	r3, r3, #32
 800536c:	2b20      	cmp	r3, #32
 800536e:	d0f0      	beq.n	8005352 <USB_FlushTxFifo+0x1a>
 8005370:	2300      	movs	r3, #0
 8005372:	4618      	mov	r0, r3
 8005374:	3714      	adds	r7, #20
 8005376:	46bd      	mov	sp, r7
 8005378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800537c:	4770      	bx	lr
 800537e:	bf00      	nop
 8005380:	00030d40 	.word	0x00030d40

08005384 <USB_FlushRxFifo>:
 8005384:	b480      	push	{r7}
 8005386:	b085      	sub	sp, #20
 8005388:	af00      	add	r7, sp, #0
 800538a:	6078      	str	r0, [r7, #4]
 800538c:	2300      	movs	r3, #0
 800538e:	60fb      	str	r3, [r7, #12]
 8005390:	687b      	ldr	r3, [r7, #4]
 8005392:	2210      	movs	r2, #16
 8005394:	611a      	str	r2, [r3, #16]
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	3301      	adds	r3, #1
 800539a:	60fb      	str	r3, [r7, #12]
 800539c:	68fb      	ldr	r3, [r7, #12]
 800539e:	4a09      	ldr	r2, [pc, #36]	; (80053c4 <USB_FlushRxFifo+0x40>)
 80053a0:	4293      	cmp	r3, r2
 80053a2:	d901      	bls.n	80053a8 <USB_FlushRxFifo+0x24>
 80053a4:	2303      	movs	r3, #3
 80053a6:	e006      	b.n	80053b6 <USB_FlushRxFifo+0x32>
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	691b      	ldr	r3, [r3, #16]
 80053ac:	f003 0310 	and.w	r3, r3, #16
 80053b0:	2b10      	cmp	r3, #16
 80053b2:	d0f0      	beq.n	8005396 <USB_FlushRxFifo+0x12>
 80053b4:	2300      	movs	r3, #0
 80053b6:	4618      	mov	r0, r3
 80053b8:	3714      	adds	r7, #20
 80053ba:	46bd      	mov	sp, r7
 80053bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053c0:	4770      	bx	lr
 80053c2:	bf00      	nop
 80053c4:	00030d40 	.word	0x00030d40

080053c8 <USB_SetDevSpeed>:
 80053c8:	b480      	push	{r7}
 80053ca:	b085      	sub	sp, #20
 80053cc:	af00      	add	r7, sp, #0
 80053ce:	6078      	str	r0, [r7, #4]
 80053d0:	460b      	mov	r3, r1
 80053d2:	70fb      	strb	r3, [r7, #3]
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	60fb      	str	r3, [r7, #12]
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80053de:	681a      	ldr	r2, [r3, #0]
 80053e0:	78fb      	ldrb	r3, [r7, #3]
 80053e2:	68f9      	ldr	r1, [r7, #12]
 80053e4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80053e8:	4313      	orrs	r3, r2
 80053ea:	600b      	str	r3, [r1, #0]
 80053ec:	2300      	movs	r3, #0
 80053ee:	4618      	mov	r0, r3
 80053f0:	3714      	adds	r7, #20
 80053f2:	46bd      	mov	sp, r7
 80053f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053f8:	4770      	bx	lr

080053fa <USB_GetDevSpeed>:
 80053fa:	b480      	push	{r7}
 80053fc:	b087      	sub	sp, #28
 80053fe:	af00      	add	r7, sp, #0
 8005400:	6078      	str	r0, [r7, #4]
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	613b      	str	r3, [r7, #16]
 8005406:	693b      	ldr	r3, [r7, #16]
 8005408:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800540c:	689b      	ldr	r3, [r3, #8]
 800540e:	f003 0306 	and.w	r3, r3, #6
 8005412:	60fb      	str	r3, [r7, #12]
 8005414:	68fb      	ldr	r3, [r7, #12]
 8005416:	2b00      	cmp	r3, #0
 8005418:	d102      	bne.n	8005420 <USB_GetDevSpeed+0x26>
 800541a:	2300      	movs	r3, #0
 800541c:	75fb      	strb	r3, [r7, #23]
 800541e:	e00a      	b.n	8005436 <USB_GetDevSpeed+0x3c>
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	2b02      	cmp	r3, #2
 8005424:	d002      	beq.n	800542c <USB_GetDevSpeed+0x32>
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	2b06      	cmp	r3, #6
 800542a:	d102      	bne.n	8005432 <USB_GetDevSpeed+0x38>
 800542c:	2302      	movs	r3, #2
 800542e:	75fb      	strb	r3, [r7, #23]
 8005430:	e001      	b.n	8005436 <USB_GetDevSpeed+0x3c>
 8005432:	230f      	movs	r3, #15
 8005434:	75fb      	strb	r3, [r7, #23]
 8005436:	7dfb      	ldrb	r3, [r7, #23]
 8005438:	4618      	mov	r0, r3
 800543a:	371c      	adds	r7, #28
 800543c:	46bd      	mov	sp, r7
 800543e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005442:	4770      	bx	lr

08005444 <USB_ActivateEndpoint>:
 8005444:	b480      	push	{r7}
 8005446:	b085      	sub	sp, #20
 8005448:	af00      	add	r7, sp, #0
 800544a:	6078      	str	r0, [r7, #4]
 800544c:	6039      	str	r1, [r7, #0]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	60fb      	str	r3, [r7, #12]
 8005452:	683b      	ldr	r3, [r7, #0]
 8005454:	781b      	ldrb	r3, [r3, #0]
 8005456:	60bb      	str	r3, [r7, #8]
 8005458:	683b      	ldr	r3, [r7, #0]
 800545a:	785b      	ldrb	r3, [r3, #1]
 800545c:	2b01      	cmp	r3, #1
 800545e:	d13a      	bne.n	80054d6 <USB_ActivateEndpoint+0x92>
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005466:	69da      	ldr	r2, [r3, #28]
 8005468:	683b      	ldr	r3, [r7, #0]
 800546a:	781b      	ldrb	r3, [r3, #0]
 800546c:	f003 030f 	and.w	r3, r3, #15
 8005470:	2101      	movs	r1, #1
 8005472:	fa01 f303 	lsl.w	r3, r1, r3
 8005476:	b29b      	uxth	r3, r3
 8005478:	68f9      	ldr	r1, [r7, #12]
 800547a:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800547e:	4313      	orrs	r3, r2
 8005480:	61cb      	str	r3, [r1, #28]
 8005482:	68bb      	ldr	r3, [r7, #8]
 8005484:	015a      	lsls	r2, r3, #5
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	4413      	add	r3, r2
 800548a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005494:	2b00      	cmp	r3, #0
 8005496:	d155      	bne.n	8005544 <USB_ActivateEndpoint+0x100>
 8005498:	68bb      	ldr	r3, [r7, #8]
 800549a:	015a      	lsls	r2, r3, #5
 800549c:	68fb      	ldr	r3, [r7, #12]
 800549e:	4413      	add	r3, r2
 80054a0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80054a4:	681a      	ldr	r2, [r3, #0]
 80054a6:	683b      	ldr	r3, [r7, #0]
 80054a8:	689b      	ldr	r3, [r3, #8]
 80054aa:	f3c3 010a 	ubfx	r1, r3, #0, #11
 80054ae:	683b      	ldr	r3, [r7, #0]
 80054b0:	78db      	ldrb	r3, [r3, #3]
 80054b2:	049b      	lsls	r3, r3, #18
 80054b4:	4319      	orrs	r1, r3
 80054b6:	68bb      	ldr	r3, [r7, #8]
 80054b8:	059b      	lsls	r3, r3, #22
 80054ba:	430b      	orrs	r3, r1
 80054bc:	4313      	orrs	r3, r2
 80054be:	68ba      	ldr	r2, [r7, #8]
 80054c0:	0151      	lsls	r1, r2, #5
 80054c2:	68fa      	ldr	r2, [r7, #12]
 80054c4:	440a      	add	r2, r1
 80054c6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80054ca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80054ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80054d2:	6013      	str	r3, [r2, #0]
 80054d4:	e036      	b.n	8005544 <USB_ActivateEndpoint+0x100>
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80054dc:	69da      	ldr	r2, [r3, #28]
 80054de:	683b      	ldr	r3, [r7, #0]
 80054e0:	781b      	ldrb	r3, [r3, #0]
 80054e2:	f003 030f 	and.w	r3, r3, #15
 80054e6:	2101      	movs	r1, #1
 80054e8:	fa01 f303 	lsl.w	r3, r1, r3
 80054ec:	041b      	lsls	r3, r3, #16
 80054ee:	68f9      	ldr	r1, [r7, #12]
 80054f0:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80054f4:	4313      	orrs	r3, r2
 80054f6:	61cb      	str	r3, [r1, #28]
 80054f8:	68bb      	ldr	r3, [r7, #8]
 80054fa:	015a      	lsls	r2, r3, #5
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	4413      	add	r3, r2
 8005500:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005504:	681b      	ldr	r3, [r3, #0]
 8005506:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800550a:	2b00      	cmp	r3, #0
 800550c:	d11a      	bne.n	8005544 <USB_ActivateEndpoint+0x100>
 800550e:	68bb      	ldr	r3, [r7, #8]
 8005510:	015a      	lsls	r2, r3, #5
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	4413      	add	r3, r2
 8005516:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800551a:	681a      	ldr	r2, [r3, #0]
 800551c:	683b      	ldr	r3, [r7, #0]
 800551e:	689b      	ldr	r3, [r3, #8]
 8005520:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8005524:	683b      	ldr	r3, [r7, #0]
 8005526:	78db      	ldrb	r3, [r3, #3]
 8005528:	049b      	lsls	r3, r3, #18
 800552a:	430b      	orrs	r3, r1
 800552c:	4313      	orrs	r3, r2
 800552e:	68ba      	ldr	r2, [r7, #8]
 8005530:	0151      	lsls	r1, r2, #5
 8005532:	68fa      	ldr	r2, [r7, #12]
 8005534:	440a      	add	r2, r1
 8005536:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800553a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800553e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005542:	6013      	str	r3, [r2, #0]
 8005544:	2300      	movs	r3, #0
 8005546:	4618      	mov	r0, r3
 8005548:	3714      	adds	r7, #20
 800554a:	46bd      	mov	sp, r7
 800554c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005550:	4770      	bx	lr
	...

08005554 <USB_DeactivateEndpoint>:
 8005554:	b480      	push	{r7}
 8005556:	b085      	sub	sp, #20
 8005558:	af00      	add	r7, sp, #0
 800555a:	6078      	str	r0, [r7, #4]
 800555c:	6039      	str	r1, [r7, #0]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	60fb      	str	r3, [r7, #12]
 8005562:	683b      	ldr	r3, [r7, #0]
 8005564:	781b      	ldrb	r3, [r3, #0]
 8005566:	60bb      	str	r3, [r7, #8]
 8005568:	683b      	ldr	r3, [r7, #0]
 800556a:	785b      	ldrb	r3, [r3, #1]
 800556c:	2b01      	cmp	r3, #1
 800556e:	d161      	bne.n	8005634 <USB_DeactivateEndpoint+0xe0>
 8005570:	68bb      	ldr	r3, [r7, #8]
 8005572:	015a      	lsls	r2, r3, #5
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	4413      	add	r3, r2
 8005578:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005582:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8005586:	d11f      	bne.n	80055c8 <USB_DeactivateEndpoint+0x74>
 8005588:	68bb      	ldr	r3, [r7, #8]
 800558a:	015a      	lsls	r2, r3, #5
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	4413      	add	r3, r2
 8005590:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	68ba      	ldr	r2, [r7, #8]
 8005598:	0151      	lsls	r1, r2, #5
 800559a:	68fa      	ldr	r2, [r7, #12]
 800559c:	440a      	add	r2, r1
 800559e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80055a2:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80055a6:	6013      	str	r3, [r2, #0]
 80055a8:	68bb      	ldr	r3, [r7, #8]
 80055aa:	015a      	lsls	r2, r3, #5
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	4413      	add	r3, r2
 80055b0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	68ba      	ldr	r2, [r7, #8]
 80055b8:	0151      	lsls	r1, r2, #5
 80055ba:	68fa      	ldr	r2, [r7, #12]
 80055bc:	440a      	add	r2, r1
 80055be:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80055c2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80055c6:	6013      	str	r3, [r2, #0]
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80055ce:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80055d0:	683b      	ldr	r3, [r7, #0]
 80055d2:	781b      	ldrb	r3, [r3, #0]
 80055d4:	f003 030f 	and.w	r3, r3, #15
 80055d8:	2101      	movs	r1, #1
 80055da:	fa01 f303 	lsl.w	r3, r1, r3
 80055de:	b29b      	uxth	r3, r3
 80055e0:	43db      	mvns	r3, r3
 80055e2:	68f9      	ldr	r1, [r7, #12]
 80055e4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80055e8:	4013      	ands	r3, r2
 80055ea:	63cb      	str	r3, [r1, #60]	; 0x3c
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80055f2:	69da      	ldr	r2, [r3, #28]
 80055f4:	683b      	ldr	r3, [r7, #0]
 80055f6:	781b      	ldrb	r3, [r3, #0]
 80055f8:	f003 030f 	and.w	r3, r3, #15
 80055fc:	2101      	movs	r1, #1
 80055fe:	fa01 f303 	lsl.w	r3, r1, r3
 8005602:	b29b      	uxth	r3, r3
 8005604:	43db      	mvns	r3, r3
 8005606:	68f9      	ldr	r1, [r7, #12]
 8005608:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800560c:	4013      	ands	r3, r2
 800560e:	61cb      	str	r3, [r1, #28]
 8005610:	68bb      	ldr	r3, [r7, #8]
 8005612:	015a      	lsls	r2, r3, #5
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	4413      	add	r3, r2
 8005618:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800561c:	681a      	ldr	r2, [r3, #0]
 800561e:	68bb      	ldr	r3, [r7, #8]
 8005620:	0159      	lsls	r1, r3, #5
 8005622:	68fb      	ldr	r3, [r7, #12]
 8005624:	440b      	add	r3, r1
 8005626:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800562a:	4619      	mov	r1, r3
 800562c:	4b35      	ldr	r3, [pc, #212]	; (8005704 <USB_DeactivateEndpoint+0x1b0>)
 800562e:	4013      	ands	r3, r2
 8005630:	600b      	str	r3, [r1, #0]
 8005632:	e060      	b.n	80056f6 <USB_DeactivateEndpoint+0x1a2>
 8005634:	68bb      	ldr	r3, [r7, #8]
 8005636:	015a      	lsls	r2, r3, #5
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	4413      	add	r3, r2
 800563c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005640:	681b      	ldr	r3, [r3, #0]
 8005642:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005646:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800564a:	d11f      	bne.n	800568c <USB_DeactivateEndpoint+0x138>
 800564c:	68bb      	ldr	r3, [r7, #8]
 800564e:	015a      	lsls	r2, r3, #5
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	4413      	add	r3, r2
 8005654:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005658:	681b      	ldr	r3, [r3, #0]
 800565a:	68ba      	ldr	r2, [r7, #8]
 800565c:	0151      	lsls	r1, r2, #5
 800565e:	68fa      	ldr	r2, [r7, #12]
 8005660:	440a      	add	r2, r1
 8005662:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005666:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800566a:	6013      	str	r3, [r2, #0]
 800566c:	68bb      	ldr	r3, [r7, #8]
 800566e:	015a      	lsls	r2, r3, #5
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	4413      	add	r3, r2
 8005674:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	68ba      	ldr	r2, [r7, #8]
 800567c:	0151      	lsls	r1, r2, #5
 800567e:	68fa      	ldr	r2, [r7, #12]
 8005680:	440a      	add	r2, r1
 8005682:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005686:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800568a:	6013      	str	r3, [r2, #0]
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005692:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8005694:	683b      	ldr	r3, [r7, #0]
 8005696:	781b      	ldrb	r3, [r3, #0]
 8005698:	f003 030f 	and.w	r3, r3, #15
 800569c:	2101      	movs	r1, #1
 800569e:	fa01 f303 	lsl.w	r3, r1, r3
 80056a2:	041b      	lsls	r3, r3, #16
 80056a4:	43db      	mvns	r3, r3
 80056a6:	68f9      	ldr	r1, [r7, #12]
 80056a8:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80056ac:	4013      	ands	r3, r2
 80056ae:	63cb      	str	r3, [r1, #60]	; 0x3c
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80056b6:	69da      	ldr	r2, [r3, #28]
 80056b8:	683b      	ldr	r3, [r7, #0]
 80056ba:	781b      	ldrb	r3, [r3, #0]
 80056bc:	f003 030f 	and.w	r3, r3, #15
 80056c0:	2101      	movs	r1, #1
 80056c2:	fa01 f303 	lsl.w	r3, r1, r3
 80056c6:	041b      	lsls	r3, r3, #16
 80056c8:	43db      	mvns	r3, r3
 80056ca:	68f9      	ldr	r1, [r7, #12]
 80056cc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80056d0:	4013      	ands	r3, r2
 80056d2:	61cb      	str	r3, [r1, #28]
 80056d4:	68bb      	ldr	r3, [r7, #8]
 80056d6:	015a      	lsls	r2, r3, #5
 80056d8:	68fb      	ldr	r3, [r7, #12]
 80056da:	4413      	add	r3, r2
 80056dc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80056e0:	681a      	ldr	r2, [r3, #0]
 80056e2:	68bb      	ldr	r3, [r7, #8]
 80056e4:	0159      	lsls	r1, r3, #5
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	440b      	add	r3, r1
 80056ea:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80056ee:	4619      	mov	r1, r3
 80056f0:	4b05      	ldr	r3, [pc, #20]	; (8005708 <USB_DeactivateEndpoint+0x1b4>)
 80056f2:	4013      	ands	r3, r2
 80056f4:	600b      	str	r3, [r1, #0]
 80056f6:	2300      	movs	r3, #0
 80056f8:	4618      	mov	r0, r3
 80056fa:	3714      	adds	r7, #20
 80056fc:	46bd      	mov	sp, r7
 80056fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005702:	4770      	bx	lr
 8005704:	ec337800 	.word	0xec337800
 8005708:	eff37800 	.word	0xeff37800

0800570c <USB_EPStartXfer>:
 800570c:	b580      	push	{r7, lr}
 800570e:	b08a      	sub	sp, #40	; 0x28
 8005710:	af02      	add	r7, sp, #8
 8005712:	60f8      	str	r0, [r7, #12]
 8005714:	60b9      	str	r1, [r7, #8]
 8005716:	4613      	mov	r3, r2
 8005718:	71fb      	strb	r3, [r7, #7]
 800571a:	68fb      	ldr	r3, [r7, #12]
 800571c:	61fb      	str	r3, [r7, #28]
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	781b      	ldrb	r3, [r3, #0]
 8005722:	61bb      	str	r3, [r7, #24]
 8005724:	68bb      	ldr	r3, [r7, #8]
 8005726:	785b      	ldrb	r3, [r3, #1]
 8005728:	2b01      	cmp	r3, #1
 800572a:	f040 815c 	bne.w	80059e6 <USB_EPStartXfer+0x2da>
 800572e:	68bb      	ldr	r3, [r7, #8]
 8005730:	695b      	ldr	r3, [r3, #20]
 8005732:	2b00      	cmp	r3, #0
 8005734:	d132      	bne.n	800579c <USB_EPStartXfer+0x90>
 8005736:	69bb      	ldr	r3, [r7, #24]
 8005738:	015a      	lsls	r2, r3, #5
 800573a:	69fb      	ldr	r3, [r7, #28]
 800573c:	4413      	add	r3, r2
 800573e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005742:	691b      	ldr	r3, [r3, #16]
 8005744:	69ba      	ldr	r2, [r7, #24]
 8005746:	0151      	lsls	r1, r2, #5
 8005748:	69fa      	ldr	r2, [r7, #28]
 800574a:	440a      	add	r2, r1
 800574c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005750:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8005754:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8005758:	6113      	str	r3, [r2, #16]
 800575a:	69bb      	ldr	r3, [r7, #24]
 800575c:	015a      	lsls	r2, r3, #5
 800575e:	69fb      	ldr	r3, [r7, #28]
 8005760:	4413      	add	r3, r2
 8005762:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005766:	691b      	ldr	r3, [r3, #16]
 8005768:	69ba      	ldr	r2, [r7, #24]
 800576a:	0151      	lsls	r1, r2, #5
 800576c:	69fa      	ldr	r2, [r7, #28]
 800576e:	440a      	add	r2, r1
 8005770:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005774:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005778:	6113      	str	r3, [r2, #16]
 800577a:	69bb      	ldr	r3, [r7, #24]
 800577c:	015a      	lsls	r2, r3, #5
 800577e:	69fb      	ldr	r3, [r7, #28]
 8005780:	4413      	add	r3, r2
 8005782:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005786:	691b      	ldr	r3, [r3, #16]
 8005788:	69ba      	ldr	r2, [r7, #24]
 800578a:	0151      	lsls	r1, r2, #5
 800578c:	69fa      	ldr	r2, [r7, #28]
 800578e:	440a      	add	r2, r1
 8005790:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005794:	0cdb      	lsrs	r3, r3, #19
 8005796:	04db      	lsls	r3, r3, #19
 8005798:	6113      	str	r3, [r2, #16]
 800579a:	e074      	b.n	8005886 <USB_EPStartXfer+0x17a>
 800579c:	69bb      	ldr	r3, [r7, #24]
 800579e:	015a      	lsls	r2, r3, #5
 80057a0:	69fb      	ldr	r3, [r7, #28]
 80057a2:	4413      	add	r3, r2
 80057a4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80057a8:	691b      	ldr	r3, [r3, #16]
 80057aa:	69ba      	ldr	r2, [r7, #24]
 80057ac:	0151      	lsls	r1, r2, #5
 80057ae:	69fa      	ldr	r2, [r7, #28]
 80057b0:	440a      	add	r2, r1
 80057b2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80057b6:	0cdb      	lsrs	r3, r3, #19
 80057b8:	04db      	lsls	r3, r3, #19
 80057ba:	6113      	str	r3, [r2, #16]
 80057bc:	69bb      	ldr	r3, [r7, #24]
 80057be:	015a      	lsls	r2, r3, #5
 80057c0:	69fb      	ldr	r3, [r7, #28]
 80057c2:	4413      	add	r3, r2
 80057c4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80057c8:	691b      	ldr	r3, [r3, #16]
 80057ca:	69ba      	ldr	r2, [r7, #24]
 80057cc:	0151      	lsls	r1, r2, #5
 80057ce:	69fa      	ldr	r2, [r7, #28]
 80057d0:	440a      	add	r2, r1
 80057d2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80057d6:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80057da:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80057de:	6113      	str	r3, [r2, #16]
 80057e0:	69bb      	ldr	r3, [r7, #24]
 80057e2:	015a      	lsls	r2, r3, #5
 80057e4:	69fb      	ldr	r3, [r7, #28]
 80057e6:	4413      	add	r3, r2
 80057e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80057ec:	691a      	ldr	r2, [r3, #16]
 80057ee:	68bb      	ldr	r3, [r7, #8]
 80057f0:	6959      	ldr	r1, [r3, #20]
 80057f2:	68bb      	ldr	r3, [r7, #8]
 80057f4:	689b      	ldr	r3, [r3, #8]
 80057f6:	440b      	add	r3, r1
 80057f8:	1e59      	subs	r1, r3, #1
 80057fa:	68bb      	ldr	r3, [r7, #8]
 80057fc:	689b      	ldr	r3, [r3, #8]
 80057fe:	fbb1 f3f3 	udiv	r3, r1, r3
 8005802:	04d9      	lsls	r1, r3, #19
 8005804:	4b9d      	ldr	r3, [pc, #628]	; (8005a7c <USB_EPStartXfer+0x370>)
 8005806:	400b      	ands	r3, r1
 8005808:	69b9      	ldr	r1, [r7, #24]
 800580a:	0148      	lsls	r0, r1, #5
 800580c:	69f9      	ldr	r1, [r7, #28]
 800580e:	4401      	add	r1, r0
 8005810:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8005814:	4313      	orrs	r3, r2
 8005816:	610b      	str	r3, [r1, #16]
 8005818:	69bb      	ldr	r3, [r7, #24]
 800581a:	015a      	lsls	r2, r3, #5
 800581c:	69fb      	ldr	r3, [r7, #28]
 800581e:	4413      	add	r3, r2
 8005820:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005824:	691a      	ldr	r2, [r3, #16]
 8005826:	68bb      	ldr	r3, [r7, #8]
 8005828:	695b      	ldr	r3, [r3, #20]
 800582a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800582e:	69b9      	ldr	r1, [r7, #24]
 8005830:	0148      	lsls	r0, r1, #5
 8005832:	69f9      	ldr	r1, [r7, #28]
 8005834:	4401      	add	r1, r0
 8005836:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 800583a:	4313      	orrs	r3, r2
 800583c:	610b      	str	r3, [r1, #16]
 800583e:	68bb      	ldr	r3, [r7, #8]
 8005840:	78db      	ldrb	r3, [r3, #3]
 8005842:	2b01      	cmp	r3, #1
 8005844:	d11f      	bne.n	8005886 <USB_EPStartXfer+0x17a>
 8005846:	69bb      	ldr	r3, [r7, #24]
 8005848:	015a      	lsls	r2, r3, #5
 800584a:	69fb      	ldr	r3, [r7, #28]
 800584c:	4413      	add	r3, r2
 800584e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005852:	691b      	ldr	r3, [r3, #16]
 8005854:	69ba      	ldr	r2, [r7, #24]
 8005856:	0151      	lsls	r1, r2, #5
 8005858:	69fa      	ldr	r2, [r7, #28]
 800585a:	440a      	add	r2, r1
 800585c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005860:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 8005864:	6113      	str	r3, [r2, #16]
 8005866:	69bb      	ldr	r3, [r7, #24]
 8005868:	015a      	lsls	r2, r3, #5
 800586a:	69fb      	ldr	r3, [r7, #28]
 800586c:	4413      	add	r3, r2
 800586e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005872:	691b      	ldr	r3, [r3, #16]
 8005874:	69ba      	ldr	r2, [r7, #24]
 8005876:	0151      	lsls	r1, r2, #5
 8005878:	69fa      	ldr	r2, [r7, #28]
 800587a:	440a      	add	r2, r1
 800587c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005880:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8005884:	6113      	str	r3, [r2, #16]
 8005886:	79fb      	ldrb	r3, [r7, #7]
 8005888:	2b01      	cmp	r3, #1
 800588a:	d14b      	bne.n	8005924 <USB_EPStartXfer+0x218>
 800588c:	68bb      	ldr	r3, [r7, #8]
 800588e:	691b      	ldr	r3, [r3, #16]
 8005890:	2b00      	cmp	r3, #0
 8005892:	d009      	beq.n	80058a8 <USB_EPStartXfer+0x19c>
 8005894:	69bb      	ldr	r3, [r7, #24]
 8005896:	015a      	lsls	r2, r3, #5
 8005898:	69fb      	ldr	r3, [r7, #28]
 800589a:	4413      	add	r3, r2
 800589c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80058a0:	461a      	mov	r2, r3
 80058a2:	68bb      	ldr	r3, [r7, #8]
 80058a4:	691b      	ldr	r3, [r3, #16]
 80058a6:	6153      	str	r3, [r2, #20]
 80058a8:	68bb      	ldr	r3, [r7, #8]
 80058aa:	78db      	ldrb	r3, [r3, #3]
 80058ac:	2b01      	cmp	r3, #1
 80058ae:	d128      	bne.n	8005902 <USB_EPStartXfer+0x1f6>
 80058b0:	69fb      	ldr	r3, [r7, #28]
 80058b2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80058b6:	689b      	ldr	r3, [r3, #8]
 80058b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80058bc:	2b00      	cmp	r3, #0
 80058be:	d110      	bne.n	80058e2 <USB_EPStartXfer+0x1d6>
 80058c0:	69bb      	ldr	r3, [r7, #24]
 80058c2:	015a      	lsls	r2, r3, #5
 80058c4:	69fb      	ldr	r3, [r7, #28]
 80058c6:	4413      	add	r3, r2
 80058c8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	69ba      	ldr	r2, [r7, #24]
 80058d0:	0151      	lsls	r1, r2, #5
 80058d2:	69fa      	ldr	r2, [r7, #28]
 80058d4:	440a      	add	r2, r1
 80058d6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80058da:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80058de:	6013      	str	r3, [r2, #0]
 80058e0:	e00f      	b.n	8005902 <USB_EPStartXfer+0x1f6>
 80058e2:	69bb      	ldr	r3, [r7, #24]
 80058e4:	015a      	lsls	r2, r3, #5
 80058e6:	69fb      	ldr	r3, [r7, #28]
 80058e8:	4413      	add	r3, r2
 80058ea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80058ee:	681b      	ldr	r3, [r3, #0]
 80058f0:	69ba      	ldr	r2, [r7, #24]
 80058f2:	0151      	lsls	r1, r2, #5
 80058f4:	69fa      	ldr	r2, [r7, #28]
 80058f6:	440a      	add	r2, r1
 80058f8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80058fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005900:	6013      	str	r3, [r2, #0]
 8005902:	69bb      	ldr	r3, [r7, #24]
 8005904:	015a      	lsls	r2, r3, #5
 8005906:	69fb      	ldr	r3, [r7, #28]
 8005908:	4413      	add	r3, r2
 800590a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	69ba      	ldr	r2, [r7, #24]
 8005912:	0151      	lsls	r1, r2, #5
 8005914:	69fa      	ldr	r2, [r7, #28]
 8005916:	440a      	add	r2, r1
 8005918:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800591c:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005920:	6013      	str	r3, [r2, #0]
 8005922:	e12f      	b.n	8005b84 <USB_EPStartXfer+0x478>
 8005924:	69bb      	ldr	r3, [r7, #24]
 8005926:	015a      	lsls	r2, r3, #5
 8005928:	69fb      	ldr	r3, [r7, #28]
 800592a:	4413      	add	r3, r2
 800592c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	69ba      	ldr	r2, [r7, #24]
 8005934:	0151      	lsls	r1, r2, #5
 8005936:	69fa      	ldr	r2, [r7, #28]
 8005938:	440a      	add	r2, r1
 800593a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800593e:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005942:	6013      	str	r3, [r2, #0]
 8005944:	68bb      	ldr	r3, [r7, #8]
 8005946:	78db      	ldrb	r3, [r3, #3]
 8005948:	2b01      	cmp	r3, #1
 800594a:	d015      	beq.n	8005978 <USB_EPStartXfer+0x26c>
 800594c:	68bb      	ldr	r3, [r7, #8]
 800594e:	695b      	ldr	r3, [r3, #20]
 8005950:	2b00      	cmp	r3, #0
 8005952:	f000 8117 	beq.w	8005b84 <USB_EPStartXfer+0x478>
 8005956:	69fb      	ldr	r3, [r7, #28]
 8005958:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800595c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800595e:	68bb      	ldr	r3, [r7, #8]
 8005960:	781b      	ldrb	r3, [r3, #0]
 8005962:	f003 030f 	and.w	r3, r3, #15
 8005966:	2101      	movs	r1, #1
 8005968:	fa01 f303 	lsl.w	r3, r1, r3
 800596c:	69f9      	ldr	r1, [r7, #28]
 800596e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8005972:	4313      	orrs	r3, r2
 8005974:	634b      	str	r3, [r1, #52]	; 0x34
 8005976:	e105      	b.n	8005b84 <USB_EPStartXfer+0x478>
 8005978:	69fb      	ldr	r3, [r7, #28]
 800597a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800597e:	689b      	ldr	r3, [r3, #8]
 8005980:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005984:	2b00      	cmp	r3, #0
 8005986:	d110      	bne.n	80059aa <USB_EPStartXfer+0x29e>
 8005988:	69bb      	ldr	r3, [r7, #24]
 800598a:	015a      	lsls	r2, r3, #5
 800598c:	69fb      	ldr	r3, [r7, #28]
 800598e:	4413      	add	r3, r2
 8005990:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	69ba      	ldr	r2, [r7, #24]
 8005998:	0151      	lsls	r1, r2, #5
 800599a:	69fa      	ldr	r2, [r7, #28]
 800599c:	440a      	add	r2, r1
 800599e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80059a2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80059a6:	6013      	str	r3, [r2, #0]
 80059a8:	e00f      	b.n	80059ca <USB_EPStartXfer+0x2be>
 80059aa:	69bb      	ldr	r3, [r7, #24]
 80059ac:	015a      	lsls	r2, r3, #5
 80059ae:	69fb      	ldr	r3, [r7, #28]
 80059b0:	4413      	add	r3, r2
 80059b2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80059b6:	681b      	ldr	r3, [r3, #0]
 80059b8:	69ba      	ldr	r2, [r7, #24]
 80059ba:	0151      	lsls	r1, r2, #5
 80059bc:	69fa      	ldr	r2, [r7, #28]
 80059be:	440a      	add	r2, r1
 80059c0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80059c4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80059c8:	6013      	str	r3, [r2, #0]
 80059ca:	68bb      	ldr	r3, [r7, #8]
 80059cc:	68d9      	ldr	r1, [r3, #12]
 80059ce:	68bb      	ldr	r3, [r7, #8]
 80059d0:	781a      	ldrb	r2, [r3, #0]
 80059d2:	68bb      	ldr	r3, [r7, #8]
 80059d4:	695b      	ldr	r3, [r3, #20]
 80059d6:	b298      	uxth	r0, r3
 80059d8:	79fb      	ldrb	r3, [r7, #7]
 80059da:	9300      	str	r3, [sp, #0]
 80059dc:	4603      	mov	r3, r0
 80059de:	68f8      	ldr	r0, [r7, #12]
 80059e0:	f000 fa2b 	bl	8005e3a <USB_WritePacket>
 80059e4:	e0ce      	b.n	8005b84 <USB_EPStartXfer+0x478>
 80059e6:	69bb      	ldr	r3, [r7, #24]
 80059e8:	015a      	lsls	r2, r3, #5
 80059ea:	69fb      	ldr	r3, [r7, #28]
 80059ec:	4413      	add	r3, r2
 80059ee:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80059f2:	691b      	ldr	r3, [r3, #16]
 80059f4:	69ba      	ldr	r2, [r7, #24]
 80059f6:	0151      	lsls	r1, r2, #5
 80059f8:	69fa      	ldr	r2, [r7, #28]
 80059fa:	440a      	add	r2, r1
 80059fc:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005a00:	0cdb      	lsrs	r3, r3, #19
 8005a02:	04db      	lsls	r3, r3, #19
 8005a04:	6113      	str	r3, [r2, #16]
 8005a06:	69bb      	ldr	r3, [r7, #24]
 8005a08:	015a      	lsls	r2, r3, #5
 8005a0a:	69fb      	ldr	r3, [r7, #28]
 8005a0c:	4413      	add	r3, r2
 8005a0e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005a12:	691b      	ldr	r3, [r3, #16]
 8005a14:	69ba      	ldr	r2, [r7, #24]
 8005a16:	0151      	lsls	r1, r2, #5
 8005a18:	69fa      	ldr	r2, [r7, #28]
 8005a1a:	440a      	add	r2, r1
 8005a1c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005a20:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8005a24:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8005a28:	6113      	str	r3, [r2, #16]
 8005a2a:	68bb      	ldr	r3, [r7, #8]
 8005a2c:	695b      	ldr	r3, [r3, #20]
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	d126      	bne.n	8005a80 <USB_EPStartXfer+0x374>
 8005a32:	69bb      	ldr	r3, [r7, #24]
 8005a34:	015a      	lsls	r2, r3, #5
 8005a36:	69fb      	ldr	r3, [r7, #28]
 8005a38:	4413      	add	r3, r2
 8005a3a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005a3e:	691a      	ldr	r2, [r3, #16]
 8005a40:	68bb      	ldr	r3, [r7, #8]
 8005a42:	689b      	ldr	r3, [r3, #8]
 8005a44:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005a48:	69b9      	ldr	r1, [r7, #24]
 8005a4a:	0148      	lsls	r0, r1, #5
 8005a4c:	69f9      	ldr	r1, [r7, #28]
 8005a4e:	4401      	add	r1, r0
 8005a50:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8005a54:	4313      	orrs	r3, r2
 8005a56:	610b      	str	r3, [r1, #16]
 8005a58:	69bb      	ldr	r3, [r7, #24]
 8005a5a:	015a      	lsls	r2, r3, #5
 8005a5c:	69fb      	ldr	r3, [r7, #28]
 8005a5e:	4413      	add	r3, r2
 8005a60:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005a64:	691b      	ldr	r3, [r3, #16]
 8005a66:	69ba      	ldr	r2, [r7, #24]
 8005a68:	0151      	lsls	r1, r2, #5
 8005a6a:	69fa      	ldr	r2, [r7, #28]
 8005a6c:	440a      	add	r2, r1
 8005a6e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005a72:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005a76:	6113      	str	r3, [r2, #16]
 8005a78:	e036      	b.n	8005ae8 <USB_EPStartXfer+0x3dc>
 8005a7a:	bf00      	nop
 8005a7c:	1ff80000 	.word	0x1ff80000
 8005a80:	68bb      	ldr	r3, [r7, #8]
 8005a82:	695a      	ldr	r2, [r3, #20]
 8005a84:	68bb      	ldr	r3, [r7, #8]
 8005a86:	689b      	ldr	r3, [r3, #8]
 8005a88:	4413      	add	r3, r2
 8005a8a:	1e5a      	subs	r2, r3, #1
 8005a8c:	68bb      	ldr	r3, [r7, #8]
 8005a8e:	689b      	ldr	r3, [r3, #8]
 8005a90:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a94:	82fb      	strh	r3, [r7, #22]
 8005a96:	69bb      	ldr	r3, [r7, #24]
 8005a98:	015a      	lsls	r2, r3, #5
 8005a9a:	69fb      	ldr	r3, [r7, #28]
 8005a9c:	4413      	add	r3, r2
 8005a9e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005aa2:	691a      	ldr	r2, [r3, #16]
 8005aa4:	8afb      	ldrh	r3, [r7, #22]
 8005aa6:	04d9      	lsls	r1, r3, #19
 8005aa8:	4b39      	ldr	r3, [pc, #228]	; (8005b90 <USB_EPStartXfer+0x484>)
 8005aaa:	400b      	ands	r3, r1
 8005aac:	69b9      	ldr	r1, [r7, #24]
 8005aae:	0148      	lsls	r0, r1, #5
 8005ab0:	69f9      	ldr	r1, [r7, #28]
 8005ab2:	4401      	add	r1, r0
 8005ab4:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8005ab8:	4313      	orrs	r3, r2
 8005aba:	610b      	str	r3, [r1, #16]
 8005abc:	69bb      	ldr	r3, [r7, #24]
 8005abe:	015a      	lsls	r2, r3, #5
 8005ac0:	69fb      	ldr	r3, [r7, #28]
 8005ac2:	4413      	add	r3, r2
 8005ac4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005ac8:	691a      	ldr	r2, [r3, #16]
 8005aca:	68bb      	ldr	r3, [r7, #8]
 8005acc:	689b      	ldr	r3, [r3, #8]
 8005ace:	8af9      	ldrh	r1, [r7, #22]
 8005ad0:	fb01 f303 	mul.w	r3, r1, r3
 8005ad4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005ad8:	69b9      	ldr	r1, [r7, #24]
 8005ada:	0148      	lsls	r0, r1, #5
 8005adc:	69f9      	ldr	r1, [r7, #28]
 8005ade:	4401      	add	r1, r0
 8005ae0:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8005ae4:	4313      	orrs	r3, r2
 8005ae6:	610b      	str	r3, [r1, #16]
 8005ae8:	79fb      	ldrb	r3, [r7, #7]
 8005aea:	2b01      	cmp	r3, #1
 8005aec:	d10d      	bne.n	8005b0a <USB_EPStartXfer+0x3fe>
 8005aee:	68bb      	ldr	r3, [r7, #8]
 8005af0:	68db      	ldr	r3, [r3, #12]
 8005af2:	2b00      	cmp	r3, #0
 8005af4:	d009      	beq.n	8005b0a <USB_EPStartXfer+0x3fe>
 8005af6:	68bb      	ldr	r3, [r7, #8]
 8005af8:	68d9      	ldr	r1, [r3, #12]
 8005afa:	69bb      	ldr	r3, [r7, #24]
 8005afc:	015a      	lsls	r2, r3, #5
 8005afe:	69fb      	ldr	r3, [r7, #28]
 8005b00:	4413      	add	r3, r2
 8005b02:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005b06:	460a      	mov	r2, r1
 8005b08:	615a      	str	r2, [r3, #20]
 8005b0a:	68bb      	ldr	r3, [r7, #8]
 8005b0c:	78db      	ldrb	r3, [r3, #3]
 8005b0e:	2b01      	cmp	r3, #1
 8005b10:	d128      	bne.n	8005b64 <USB_EPStartXfer+0x458>
 8005b12:	69fb      	ldr	r3, [r7, #28]
 8005b14:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005b18:	689b      	ldr	r3, [r3, #8]
 8005b1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	d110      	bne.n	8005b44 <USB_EPStartXfer+0x438>
 8005b22:	69bb      	ldr	r3, [r7, #24]
 8005b24:	015a      	lsls	r2, r3, #5
 8005b26:	69fb      	ldr	r3, [r7, #28]
 8005b28:	4413      	add	r3, r2
 8005b2a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	69ba      	ldr	r2, [r7, #24]
 8005b32:	0151      	lsls	r1, r2, #5
 8005b34:	69fa      	ldr	r2, [r7, #28]
 8005b36:	440a      	add	r2, r1
 8005b38:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005b3c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8005b40:	6013      	str	r3, [r2, #0]
 8005b42:	e00f      	b.n	8005b64 <USB_EPStartXfer+0x458>
 8005b44:	69bb      	ldr	r3, [r7, #24]
 8005b46:	015a      	lsls	r2, r3, #5
 8005b48:	69fb      	ldr	r3, [r7, #28]
 8005b4a:	4413      	add	r3, r2
 8005b4c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	69ba      	ldr	r2, [r7, #24]
 8005b54:	0151      	lsls	r1, r2, #5
 8005b56:	69fa      	ldr	r2, [r7, #28]
 8005b58:	440a      	add	r2, r1
 8005b5a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005b5e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005b62:	6013      	str	r3, [r2, #0]
 8005b64:	69bb      	ldr	r3, [r7, #24]
 8005b66:	015a      	lsls	r2, r3, #5
 8005b68:	69fb      	ldr	r3, [r7, #28]
 8005b6a:	4413      	add	r3, r2
 8005b6c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005b70:	681b      	ldr	r3, [r3, #0]
 8005b72:	69ba      	ldr	r2, [r7, #24]
 8005b74:	0151      	lsls	r1, r2, #5
 8005b76:	69fa      	ldr	r2, [r7, #28]
 8005b78:	440a      	add	r2, r1
 8005b7a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005b7e:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005b82:	6013      	str	r3, [r2, #0]
 8005b84:	2300      	movs	r3, #0
 8005b86:	4618      	mov	r0, r3
 8005b88:	3720      	adds	r7, #32
 8005b8a:	46bd      	mov	sp, r7
 8005b8c:	bd80      	pop	{r7, pc}
 8005b8e:	bf00      	nop
 8005b90:	1ff80000 	.word	0x1ff80000

08005b94 <USB_EP0StartXfer>:
 8005b94:	b480      	push	{r7}
 8005b96:	b087      	sub	sp, #28
 8005b98:	af00      	add	r7, sp, #0
 8005b9a:	60f8      	str	r0, [r7, #12]
 8005b9c:	60b9      	str	r1, [r7, #8]
 8005b9e:	4613      	mov	r3, r2
 8005ba0:	71fb      	strb	r3, [r7, #7]
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	617b      	str	r3, [r7, #20]
 8005ba6:	68bb      	ldr	r3, [r7, #8]
 8005ba8:	781b      	ldrb	r3, [r3, #0]
 8005baa:	613b      	str	r3, [r7, #16]
 8005bac:	68bb      	ldr	r3, [r7, #8]
 8005bae:	785b      	ldrb	r3, [r3, #1]
 8005bb0:	2b01      	cmp	r3, #1
 8005bb2:	f040 80cd 	bne.w	8005d50 <USB_EP0StartXfer+0x1bc>
 8005bb6:	68bb      	ldr	r3, [r7, #8]
 8005bb8:	695b      	ldr	r3, [r3, #20]
 8005bba:	2b00      	cmp	r3, #0
 8005bbc:	d132      	bne.n	8005c24 <USB_EP0StartXfer+0x90>
 8005bbe:	693b      	ldr	r3, [r7, #16]
 8005bc0:	015a      	lsls	r2, r3, #5
 8005bc2:	697b      	ldr	r3, [r7, #20]
 8005bc4:	4413      	add	r3, r2
 8005bc6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005bca:	691b      	ldr	r3, [r3, #16]
 8005bcc:	693a      	ldr	r2, [r7, #16]
 8005bce:	0151      	lsls	r1, r2, #5
 8005bd0:	697a      	ldr	r2, [r7, #20]
 8005bd2:	440a      	add	r2, r1
 8005bd4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005bd8:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8005bdc:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8005be0:	6113      	str	r3, [r2, #16]
 8005be2:	693b      	ldr	r3, [r7, #16]
 8005be4:	015a      	lsls	r2, r3, #5
 8005be6:	697b      	ldr	r3, [r7, #20]
 8005be8:	4413      	add	r3, r2
 8005bea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005bee:	691b      	ldr	r3, [r3, #16]
 8005bf0:	693a      	ldr	r2, [r7, #16]
 8005bf2:	0151      	lsls	r1, r2, #5
 8005bf4:	697a      	ldr	r2, [r7, #20]
 8005bf6:	440a      	add	r2, r1
 8005bf8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005bfc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005c00:	6113      	str	r3, [r2, #16]
 8005c02:	693b      	ldr	r3, [r7, #16]
 8005c04:	015a      	lsls	r2, r3, #5
 8005c06:	697b      	ldr	r3, [r7, #20]
 8005c08:	4413      	add	r3, r2
 8005c0a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005c0e:	691b      	ldr	r3, [r3, #16]
 8005c10:	693a      	ldr	r2, [r7, #16]
 8005c12:	0151      	lsls	r1, r2, #5
 8005c14:	697a      	ldr	r2, [r7, #20]
 8005c16:	440a      	add	r2, r1
 8005c18:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005c1c:	0cdb      	lsrs	r3, r3, #19
 8005c1e:	04db      	lsls	r3, r3, #19
 8005c20:	6113      	str	r3, [r2, #16]
 8005c22:	e04e      	b.n	8005cc2 <USB_EP0StartXfer+0x12e>
 8005c24:	693b      	ldr	r3, [r7, #16]
 8005c26:	015a      	lsls	r2, r3, #5
 8005c28:	697b      	ldr	r3, [r7, #20]
 8005c2a:	4413      	add	r3, r2
 8005c2c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005c30:	691b      	ldr	r3, [r3, #16]
 8005c32:	693a      	ldr	r2, [r7, #16]
 8005c34:	0151      	lsls	r1, r2, #5
 8005c36:	697a      	ldr	r2, [r7, #20]
 8005c38:	440a      	add	r2, r1
 8005c3a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005c3e:	0cdb      	lsrs	r3, r3, #19
 8005c40:	04db      	lsls	r3, r3, #19
 8005c42:	6113      	str	r3, [r2, #16]
 8005c44:	693b      	ldr	r3, [r7, #16]
 8005c46:	015a      	lsls	r2, r3, #5
 8005c48:	697b      	ldr	r3, [r7, #20]
 8005c4a:	4413      	add	r3, r2
 8005c4c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005c50:	691b      	ldr	r3, [r3, #16]
 8005c52:	693a      	ldr	r2, [r7, #16]
 8005c54:	0151      	lsls	r1, r2, #5
 8005c56:	697a      	ldr	r2, [r7, #20]
 8005c58:	440a      	add	r2, r1
 8005c5a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005c5e:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8005c62:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8005c66:	6113      	str	r3, [r2, #16]
 8005c68:	68bb      	ldr	r3, [r7, #8]
 8005c6a:	695a      	ldr	r2, [r3, #20]
 8005c6c:	68bb      	ldr	r3, [r7, #8]
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	429a      	cmp	r2, r3
 8005c72:	d903      	bls.n	8005c7c <USB_EP0StartXfer+0xe8>
 8005c74:	68bb      	ldr	r3, [r7, #8]
 8005c76:	689a      	ldr	r2, [r3, #8]
 8005c78:	68bb      	ldr	r3, [r7, #8]
 8005c7a:	615a      	str	r2, [r3, #20]
 8005c7c:	693b      	ldr	r3, [r7, #16]
 8005c7e:	015a      	lsls	r2, r3, #5
 8005c80:	697b      	ldr	r3, [r7, #20]
 8005c82:	4413      	add	r3, r2
 8005c84:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005c88:	691b      	ldr	r3, [r3, #16]
 8005c8a:	693a      	ldr	r2, [r7, #16]
 8005c8c:	0151      	lsls	r1, r2, #5
 8005c8e:	697a      	ldr	r2, [r7, #20]
 8005c90:	440a      	add	r2, r1
 8005c92:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005c96:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005c9a:	6113      	str	r3, [r2, #16]
 8005c9c:	693b      	ldr	r3, [r7, #16]
 8005c9e:	015a      	lsls	r2, r3, #5
 8005ca0:	697b      	ldr	r3, [r7, #20]
 8005ca2:	4413      	add	r3, r2
 8005ca4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005ca8:	691a      	ldr	r2, [r3, #16]
 8005caa:	68bb      	ldr	r3, [r7, #8]
 8005cac:	695b      	ldr	r3, [r3, #20]
 8005cae:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005cb2:	6939      	ldr	r1, [r7, #16]
 8005cb4:	0148      	lsls	r0, r1, #5
 8005cb6:	6979      	ldr	r1, [r7, #20]
 8005cb8:	4401      	add	r1, r0
 8005cba:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8005cbe:	4313      	orrs	r3, r2
 8005cc0:	610b      	str	r3, [r1, #16]
 8005cc2:	79fb      	ldrb	r3, [r7, #7]
 8005cc4:	2b01      	cmp	r3, #1
 8005cc6:	d11e      	bne.n	8005d06 <USB_EP0StartXfer+0x172>
 8005cc8:	68bb      	ldr	r3, [r7, #8]
 8005cca:	691b      	ldr	r3, [r3, #16]
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d009      	beq.n	8005ce4 <USB_EP0StartXfer+0x150>
 8005cd0:	693b      	ldr	r3, [r7, #16]
 8005cd2:	015a      	lsls	r2, r3, #5
 8005cd4:	697b      	ldr	r3, [r7, #20]
 8005cd6:	4413      	add	r3, r2
 8005cd8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005cdc:	461a      	mov	r2, r3
 8005cde:	68bb      	ldr	r3, [r7, #8]
 8005ce0:	691b      	ldr	r3, [r3, #16]
 8005ce2:	6153      	str	r3, [r2, #20]
 8005ce4:	693b      	ldr	r3, [r7, #16]
 8005ce6:	015a      	lsls	r2, r3, #5
 8005ce8:	697b      	ldr	r3, [r7, #20]
 8005cea:	4413      	add	r3, r2
 8005cec:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	693a      	ldr	r2, [r7, #16]
 8005cf4:	0151      	lsls	r1, r2, #5
 8005cf6:	697a      	ldr	r2, [r7, #20]
 8005cf8:	440a      	add	r2, r1
 8005cfa:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005cfe:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005d02:	6013      	str	r3, [r2, #0]
 8005d04:	e092      	b.n	8005e2c <USB_EP0StartXfer+0x298>
 8005d06:	693b      	ldr	r3, [r7, #16]
 8005d08:	015a      	lsls	r2, r3, #5
 8005d0a:	697b      	ldr	r3, [r7, #20]
 8005d0c:	4413      	add	r3, r2
 8005d0e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	693a      	ldr	r2, [r7, #16]
 8005d16:	0151      	lsls	r1, r2, #5
 8005d18:	697a      	ldr	r2, [r7, #20]
 8005d1a:	440a      	add	r2, r1
 8005d1c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005d20:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005d24:	6013      	str	r3, [r2, #0]
 8005d26:	68bb      	ldr	r3, [r7, #8]
 8005d28:	695b      	ldr	r3, [r3, #20]
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d07e      	beq.n	8005e2c <USB_EP0StartXfer+0x298>
 8005d2e:	697b      	ldr	r3, [r7, #20]
 8005d30:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005d34:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005d36:	68bb      	ldr	r3, [r7, #8]
 8005d38:	781b      	ldrb	r3, [r3, #0]
 8005d3a:	f003 030f 	and.w	r3, r3, #15
 8005d3e:	2101      	movs	r1, #1
 8005d40:	fa01 f303 	lsl.w	r3, r1, r3
 8005d44:	6979      	ldr	r1, [r7, #20]
 8005d46:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8005d4a:	4313      	orrs	r3, r2
 8005d4c:	634b      	str	r3, [r1, #52]	; 0x34
 8005d4e:	e06d      	b.n	8005e2c <USB_EP0StartXfer+0x298>
 8005d50:	693b      	ldr	r3, [r7, #16]
 8005d52:	015a      	lsls	r2, r3, #5
 8005d54:	697b      	ldr	r3, [r7, #20]
 8005d56:	4413      	add	r3, r2
 8005d58:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005d5c:	691b      	ldr	r3, [r3, #16]
 8005d5e:	693a      	ldr	r2, [r7, #16]
 8005d60:	0151      	lsls	r1, r2, #5
 8005d62:	697a      	ldr	r2, [r7, #20]
 8005d64:	440a      	add	r2, r1
 8005d66:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005d6a:	0cdb      	lsrs	r3, r3, #19
 8005d6c:	04db      	lsls	r3, r3, #19
 8005d6e:	6113      	str	r3, [r2, #16]
 8005d70:	693b      	ldr	r3, [r7, #16]
 8005d72:	015a      	lsls	r2, r3, #5
 8005d74:	697b      	ldr	r3, [r7, #20]
 8005d76:	4413      	add	r3, r2
 8005d78:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005d7c:	691b      	ldr	r3, [r3, #16]
 8005d7e:	693a      	ldr	r2, [r7, #16]
 8005d80:	0151      	lsls	r1, r2, #5
 8005d82:	697a      	ldr	r2, [r7, #20]
 8005d84:	440a      	add	r2, r1
 8005d86:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005d8a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8005d8e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8005d92:	6113      	str	r3, [r2, #16]
 8005d94:	68bb      	ldr	r3, [r7, #8]
 8005d96:	695b      	ldr	r3, [r3, #20]
 8005d98:	2b00      	cmp	r3, #0
 8005d9a:	d003      	beq.n	8005da4 <USB_EP0StartXfer+0x210>
 8005d9c:	68bb      	ldr	r3, [r7, #8]
 8005d9e:	689a      	ldr	r2, [r3, #8]
 8005da0:	68bb      	ldr	r3, [r7, #8]
 8005da2:	615a      	str	r2, [r3, #20]
 8005da4:	693b      	ldr	r3, [r7, #16]
 8005da6:	015a      	lsls	r2, r3, #5
 8005da8:	697b      	ldr	r3, [r7, #20]
 8005daa:	4413      	add	r3, r2
 8005dac:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005db0:	691b      	ldr	r3, [r3, #16]
 8005db2:	693a      	ldr	r2, [r7, #16]
 8005db4:	0151      	lsls	r1, r2, #5
 8005db6:	697a      	ldr	r2, [r7, #20]
 8005db8:	440a      	add	r2, r1
 8005dba:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005dbe:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005dc2:	6113      	str	r3, [r2, #16]
 8005dc4:	693b      	ldr	r3, [r7, #16]
 8005dc6:	015a      	lsls	r2, r3, #5
 8005dc8:	697b      	ldr	r3, [r7, #20]
 8005dca:	4413      	add	r3, r2
 8005dcc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005dd0:	691a      	ldr	r2, [r3, #16]
 8005dd2:	68bb      	ldr	r3, [r7, #8]
 8005dd4:	689b      	ldr	r3, [r3, #8]
 8005dd6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005dda:	6939      	ldr	r1, [r7, #16]
 8005ddc:	0148      	lsls	r0, r1, #5
 8005dde:	6979      	ldr	r1, [r7, #20]
 8005de0:	4401      	add	r1, r0
 8005de2:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8005de6:	4313      	orrs	r3, r2
 8005de8:	610b      	str	r3, [r1, #16]
 8005dea:	79fb      	ldrb	r3, [r7, #7]
 8005dec:	2b01      	cmp	r3, #1
 8005dee:	d10d      	bne.n	8005e0c <USB_EP0StartXfer+0x278>
 8005df0:	68bb      	ldr	r3, [r7, #8]
 8005df2:	68db      	ldr	r3, [r3, #12]
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	d009      	beq.n	8005e0c <USB_EP0StartXfer+0x278>
 8005df8:	68bb      	ldr	r3, [r7, #8]
 8005dfa:	68d9      	ldr	r1, [r3, #12]
 8005dfc:	693b      	ldr	r3, [r7, #16]
 8005dfe:	015a      	lsls	r2, r3, #5
 8005e00:	697b      	ldr	r3, [r7, #20]
 8005e02:	4413      	add	r3, r2
 8005e04:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005e08:	460a      	mov	r2, r1
 8005e0a:	615a      	str	r2, [r3, #20]
 8005e0c:	693b      	ldr	r3, [r7, #16]
 8005e0e:	015a      	lsls	r2, r3, #5
 8005e10:	697b      	ldr	r3, [r7, #20]
 8005e12:	4413      	add	r3, r2
 8005e14:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	693a      	ldr	r2, [r7, #16]
 8005e1c:	0151      	lsls	r1, r2, #5
 8005e1e:	697a      	ldr	r2, [r7, #20]
 8005e20:	440a      	add	r2, r1
 8005e22:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005e26:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8005e2a:	6013      	str	r3, [r2, #0]
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	4618      	mov	r0, r3
 8005e30:	371c      	adds	r7, #28
 8005e32:	46bd      	mov	sp, r7
 8005e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e38:	4770      	bx	lr

08005e3a <USB_WritePacket>:
 8005e3a:	b480      	push	{r7}
 8005e3c:	b089      	sub	sp, #36	; 0x24
 8005e3e:	af00      	add	r7, sp, #0
 8005e40:	60f8      	str	r0, [r7, #12]
 8005e42:	60b9      	str	r1, [r7, #8]
 8005e44:	4611      	mov	r1, r2
 8005e46:	461a      	mov	r2, r3
 8005e48:	460b      	mov	r3, r1
 8005e4a:	71fb      	strb	r3, [r7, #7]
 8005e4c:	4613      	mov	r3, r2
 8005e4e:	80bb      	strh	r3, [r7, #4]
 8005e50:	68fb      	ldr	r3, [r7, #12]
 8005e52:	617b      	str	r3, [r7, #20]
 8005e54:	68bb      	ldr	r3, [r7, #8]
 8005e56:	61fb      	str	r3, [r7, #28]
 8005e58:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	d11a      	bne.n	8005e96 <USB_WritePacket+0x5c>
 8005e60:	88bb      	ldrh	r3, [r7, #4]
 8005e62:	3303      	adds	r3, #3
 8005e64:	089b      	lsrs	r3, r3, #2
 8005e66:	613b      	str	r3, [r7, #16]
 8005e68:	2300      	movs	r3, #0
 8005e6a:	61bb      	str	r3, [r7, #24]
 8005e6c:	e00f      	b.n	8005e8e <USB_WritePacket+0x54>
 8005e6e:	79fb      	ldrb	r3, [r7, #7]
 8005e70:	031a      	lsls	r2, r3, #12
 8005e72:	697b      	ldr	r3, [r7, #20]
 8005e74:	4413      	add	r3, r2
 8005e76:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005e7a:	461a      	mov	r2, r3
 8005e7c:	69fb      	ldr	r3, [r7, #28]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	6013      	str	r3, [r2, #0]
 8005e82:	69fb      	ldr	r3, [r7, #28]
 8005e84:	3304      	adds	r3, #4
 8005e86:	61fb      	str	r3, [r7, #28]
 8005e88:	69bb      	ldr	r3, [r7, #24]
 8005e8a:	3301      	adds	r3, #1
 8005e8c:	61bb      	str	r3, [r7, #24]
 8005e8e:	69ba      	ldr	r2, [r7, #24]
 8005e90:	693b      	ldr	r3, [r7, #16]
 8005e92:	429a      	cmp	r2, r3
 8005e94:	d3eb      	bcc.n	8005e6e <USB_WritePacket+0x34>
 8005e96:	2300      	movs	r3, #0
 8005e98:	4618      	mov	r0, r3
 8005e9a:	3724      	adds	r7, #36	; 0x24
 8005e9c:	46bd      	mov	sp, r7
 8005e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ea2:	4770      	bx	lr

08005ea4 <USB_ReadPacket>:
 8005ea4:	b480      	push	{r7}
 8005ea6:	b089      	sub	sp, #36	; 0x24
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	60f8      	str	r0, [r7, #12]
 8005eac:	60b9      	str	r1, [r7, #8]
 8005eae:	4613      	mov	r3, r2
 8005eb0:	80fb      	strh	r3, [r7, #6]
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	617b      	str	r3, [r7, #20]
 8005eb6:	68bb      	ldr	r3, [r7, #8]
 8005eb8:	61fb      	str	r3, [r7, #28]
 8005eba:	88fb      	ldrh	r3, [r7, #6]
 8005ebc:	3303      	adds	r3, #3
 8005ebe:	089b      	lsrs	r3, r3, #2
 8005ec0:	613b      	str	r3, [r7, #16]
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	61bb      	str	r3, [r7, #24]
 8005ec6:	e00b      	b.n	8005ee0 <USB_ReadPacket+0x3c>
 8005ec8:	697b      	ldr	r3, [r7, #20]
 8005eca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005ece:	681a      	ldr	r2, [r3, #0]
 8005ed0:	69fb      	ldr	r3, [r7, #28]
 8005ed2:	601a      	str	r2, [r3, #0]
 8005ed4:	69fb      	ldr	r3, [r7, #28]
 8005ed6:	3304      	adds	r3, #4
 8005ed8:	61fb      	str	r3, [r7, #28]
 8005eda:	69bb      	ldr	r3, [r7, #24]
 8005edc:	3301      	adds	r3, #1
 8005ede:	61bb      	str	r3, [r7, #24]
 8005ee0:	69ba      	ldr	r2, [r7, #24]
 8005ee2:	693b      	ldr	r3, [r7, #16]
 8005ee4:	429a      	cmp	r2, r3
 8005ee6:	d3ef      	bcc.n	8005ec8 <USB_ReadPacket+0x24>
 8005ee8:	69fb      	ldr	r3, [r7, #28]
 8005eea:	4618      	mov	r0, r3
 8005eec:	3724      	adds	r7, #36	; 0x24
 8005eee:	46bd      	mov	sp, r7
 8005ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ef4:	4770      	bx	lr

08005ef6 <USB_EPSetStall>:
 8005ef6:	b480      	push	{r7}
 8005ef8:	b085      	sub	sp, #20
 8005efa:	af00      	add	r7, sp, #0
 8005efc:	6078      	str	r0, [r7, #4]
 8005efe:	6039      	str	r1, [r7, #0]
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	60fb      	str	r3, [r7, #12]
 8005f04:	683b      	ldr	r3, [r7, #0]
 8005f06:	781b      	ldrb	r3, [r3, #0]
 8005f08:	60bb      	str	r3, [r7, #8]
 8005f0a:	683b      	ldr	r3, [r7, #0]
 8005f0c:	785b      	ldrb	r3, [r3, #1]
 8005f0e:	2b01      	cmp	r3, #1
 8005f10:	d12c      	bne.n	8005f6c <USB_EPSetStall+0x76>
 8005f12:	68bb      	ldr	r3, [r7, #8]
 8005f14:	015a      	lsls	r2, r3, #5
 8005f16:	68fb      	ldr	r3, [r7, #12]
 8005f18:	4413      	add	r3, r2
 8005f1a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	2b00      	cmp	r3, #0
 8005f22:	db12      	blt.n	8005f4a <USB_EPSetStall+0x54>
 8005f24:	68bb      	ldr	r3, [r7, #8]
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	d00f      	beq.n	8005f4a <USB_EPSetStall+0x54>
 8005f2a:	68bb      	ldr	r3, [r7, #8]
 8005f2c:	015a      	lsls	r2, r3, #5
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	4413      	add	r3, r2
 8005f32:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	68ba      	ldr	r2, [r7, #8]
 8005f3a:	0151      	lsls	r1, r2, #5
 8005f3c:	68fa      	ldr	r2, [r7, #12]
 8005f3e:	440a      	add	r2, r1
 8005f40:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005f44:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8005f48:	6013      	str	r3, [r2, #0]
 8005f4a:	68bb      	ldr	r3, [r7, #8]
 8005f4c:	015a      	lsls	r2, r3, #5
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	4413      	add	r3, r2
 8005f52:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005f56:	681b      	ldr	r3, [r3, #0]
 8005f58:	68ba      	ldr	r2, [r7, #8]
 8005f5a:	0151      	lsls	r1, r2, #5
 8005f5c:	68fa      	ldr	r2, [r7, #12]
 8005f5e:	440a      	add	r2, r1
 8005f60:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8005f64:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005f68:	6013      	str	r3, [r2, #0]
 8005f6a:	e02b      	b.n	8005fc4 <USB_EPSetStall+0xce>
 8005f6c:	68bb      	ldr	r3, [r7, #8]
 8005f6e:	015a      	lsls	r2, r3, #5
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	4413      	add	r3, r2
 8005f74:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	2b00      	cmp	r3, #0
 8005f7c:	db12      	blt.n	8005fa4 <USB_EPSetStall+0xae>
 8005f7e:	68bb      	ldr	r3, [r7, #8]
 8005f80:	2b00      	cmp	r3, #0
 8005f82:	d00f      	beq.n	8005fa4 <USB_EPSetStall+0xae>
 8005f84:	68bb      	ldr	r3, [r7, #8]
 8005f86:	015a      	lsls	r2, r3, #5
 8005f88:	68fb      	ldr	r3, [r7, #12]
 8005f8a:	4413      	add	r3, r2
 8005f8c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	68ba      	ldr	r2, [r7, #8]
 8005f94:	0151      	lsls	r1, r2, #5
 8005f96:	68fa      	ldr	r2, [r7, #12]
 8005f98:	440a      	add	r2, r1
 8005f9a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005f9e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8005fa2:	6013      	str	r3, [r2, #0]
 8005fa4:	68bb      	ldr	r3, [r7, #8]
 8005fa6:	015a      	lsls	r2, r3, #5
 8005fa8:	68fb      	ldr	r3, [r7, #12]
 8005faa:	4413      	add	r3, r2
 8005fac:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	68ba      	ldr	r2, [r7, #8]
 8005fb4:	0151      	lsls	r1, r2, #5
 8005fb6:	68fa      	ldr	r2, [r7, #12]
 8005fb8:	440a      	add	r2, r1
 8005fba:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8005fbe:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005fc2:	6013      	str	r3, [r2, #0]
 8005fc4:	2300      	movs	r3, #0
 8005fc6:	4618      	mov	r0, r3
 8005fc8:	3714      	adds	r7, #20
 8005fca:	46bd      	mov	sp, r7
 8005fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fd0:	4770      	bx	lr

08005fd2 <USB_EPClearStall>:
 8005fd2:	b480      	push	{r7}
 8005fd4:	b085      	sub	sp, #20
 8005fd6:	af00      	add	r7, sp, #0
 8005fd8:	6078      	str	r0, [r7, #4]
 8005fda:	6039      	str	r1, [r7, #0]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	60fb      	str	r3, [r7, #12]
 8005fe0:	683b      	ldr	r3, [r7, #0]
 8005fe2:	781b      	ldrb	r3, [r3, #0]
 8005fe4:	60bb      	str	r3, [r7, #8]
 8005fe6:	683b      	ldr	r3, [r7, #0]
 8005fe8:	785b      	ldrb	r3, [r3, #1]
 8005fea:	2b01      	cmp	r3, #1
 8005fec:	d128      	bne.n	8006040 <USB_EPClearStall+0x6e>
 8005fee:	68bb      	ldr	r3, [r7, #8]
 8005ff0:	015a      	lsls	r2, r3, #5
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	4413      	add	r3, r2
 8005ff6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	68ba      	ldr	r2, [r7, #8]
 8005ffe:	0151      	lsls	r1, r2, #5
 8006000:	68fa      	ldr	r2, [r7, #12]
 8006002:	440a      	add	r2, r1
 8006004:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8006008:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800600c:	6013      	str	r3, [r2, #0]
 800600e:	683b      	ldr	r3, [r7, #0]
 8006010:	78db      	ldrb	r3, [r3, #3]
 8006012:	2b03      	cmp	r3, #3
 8006014:	d003      	beq.n	800601e <USB_EPClearStall+0x4c>
 8006016:	683b      	ldr	r3, [r7, #0]
 8006018:	78db      	ldrb	r3, [r3, #3]
 800601a:	2b02      	cmp	r3, #2
 800601c:	d138      	bne.n	8006090 <USB_EPClearStall+0xbe>
 800601e:	68bb      	ldr	r3, [r7, #8]
 8006020:	015a      	lsls	r2, r3, #5
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	4413      	add	r3, r2
 8006026:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	68ba      	ldr	r2, [r7, #8]
 800602e:	0151      	lsls	r1, r2, #5
 8006030:	68fa      	ldr	r2, [r7, #12]
 8006032:	440a      	add	r2, r1
 8006034:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8006038:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800603c:	6013      	str	r3, [r2, #0]
 800603e:	e027      	b.n	8006090 <USB_EPClearStall+0xbe>
 8006040:	68bb      	ldr	r3, [r7, #8]
 8006042:	015a      	lsls	r2, r3, #5
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	4413      	add	r3, r2
 8006048:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800604c:	681b      	ldr	r3, [r3, #0]
 800604e:	68ba      	ldr	r2, [r7, #8]
 8006050:	0151      	lsls	r1, r2, #5
 8006052:	68fa      	ldr	r2, [r7, #12]
 8006054:	440a      	add	r2, r1
 8006056:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800605a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800605e:	6013      	str	r3, [r2, #0]
 8006060:	683b      	ldr	r3, [r7, #0]
 8006062:	78db      	ldrb	r3, [r3, #3]
 8006064:	2b03      	cmp	r3, #3
 8006066:	d003      	beq.n	8006070 <USB_EPClearStall+0x9e>
 8006068:	683b      	ldr	r3, [r7, #0]
 800606a:	78db      	ldrb	r3, [r3, #3]
 800606c:	2b02      	cmp	r3, #2
 800606e:	d10f      	bne.n	8006090 <USB_EPClearStall+0xbe>
 8006070:	68bb      	ldr	r3, [r7, #8]
 8006072:	015a      	lsls	r2, r3, #5
 8006074:	68fb      	ldr	r3, [r7, #12]
 8006076:	4413      	add	r3, r2
 8006078:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	68ba      	ldr	r2, [r7, #8]
 8006080:	0151      	lsls	r1, r2, #5
 8006082:	68fa      	ldr	r2, [r7, #12]
 8006084:	440a      	add	r2, r1
 8006086:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800608a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800608e:	6013      	str	r3, [r2, #0]
 8006090:	2300      	movs	r3, #0
 8006092:	4618      	mov	r0, r3
 8006094:	3714      	adds	r7, #20
 8006096:	46bd      	mov	sp, r7
 8006098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800609c:	4770      	bx	lr

0800609e <USB_SetDevAddress>:
 800609e:	b480      	push	{r7}
 80060a0:	b085      	sub	sp, #20
 80060a2:	af00      	add	r7, sp, #0
 80060a4:	6078      	str	r0, [r7, #4]
 80060a6:	460b      	mov	r3, r1
 80060a8:	70fb      	strb	r3, [r7, #3]
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	60fb      	str	r3, [r7, #12]
 80060ae:	68fb      	ldr	r3, [r7, #12]
 80060b0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	68fa      	ldr	r2, [r7, #12]
 80060b8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80060bc:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80060c0:	6013      	str	r3, [r2, #0]
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80060c8:	681a      	ldr	r2, [r3, #0]
 80060ca:	78fb      	ldrb	r3, [r7, #3]
 80060cc:	011b      	lsls	r3, r3, #4
 80060ce:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 80060d2:	68f9      	ldr	r1, [r7, #12]
 80060d4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80060d8:	4313      	orrs	r3, r2
 80060da:	600b      	str	r3, [r1, #0]
 80060dc:	2300      	movs	r3, #0
 80060de:	4618      	mov	r0, r3
 80060e0:	3714      	adds	r7, #20
 80060e2:	46bd      	mov	sp, r7
 80060e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060e8:	4770      	bx	lr

080060ea <USB_DevConnect>:
 80060ea:	b480      	push	{r7}
 80060ec:	b085      	sub	sp, #20
 80060ee:	af00      	add	r7, sp, #0
 80060f0:	6078      	str	r0, [r7, #4]
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	60fb      	str	r3, [r7, #12]
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	68fa      	ldr	r2, [r7, #12]
 8006100:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8006104:	f023 0303 	bic.w	r3, r3, #3
 8006108:	6013      	str	r3, [r2, #0]
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006110:	685b      	ldr	r3, [r3, #4]
 8006112:	68fa      	ldr	r2, [r7, #12]
 8006114:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006118:	f023 0302 	bic.w	r3, r3, #2
 800611c:	6053      	str	r3, [r2, #4]
 800611e:	2300      	movs	r3, #0
 8006120:	4618      	mov	r0, r3
 8006122:	3714      	adds	r7, #20
 8006124:	46bd      	mov	sp, r7
 8006126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800612a:	4770      	bx	lr

0800612c <USB_DevDisconnect>:
 800612c:	b480      	push	{r7}
 800612e:	b085      	sub	sp, #20
 8006130:	af00      	add	r7, sp, #0
 8006132:	6078      	str	r0, [r7, #4]
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	60fb      	str	r3, [r7, #12]
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	68fa      	ldr	r2, [r7, #12]
 8006142:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8006146:	f023 0303 	bic.w	r3, r3, #3
 800614a:	6013      	str	r3, [r2, #0]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006152:	685b      	ldr	r3, [r3, #4]
 8006154:	68fa      	ldr	r2, [r7, #12]
 8006156:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800615a:	f043 0302 	orr.w	r3, r3, #2
 800615e:	6053      	str	r3, [r2, #4]
 8006160:	2300      	movs	r3, #0
 8006162:	4618      	mov	r0, r3
 8006164:	3714      	adds	r7, #20
 8006166:	46bd      	mov	sp, r7
 8006168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800616c:	4770      	bx	lr

0800616e <USB_ReadInterrupts>:
 800616e:	b480      	push	{r7}
 8006170:	b085      	sub	sp, #20
 8006172:	af00      	add	r7, sp, #0
 8006174:	6078      	str	r0, [r7, #4]
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	695b      	ldr	r3, [r3, #20]
 800617a:	60fb      	str	r3, [r7, #12]
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	699b      	ldr	r3, [r3, #24]
 8006180:	68fa      	ldr	r2, [r7, #12]
 8006182:	4013      	ands	r3, r2
 8006184:	60fb      	str	r3, [r7, #12]
 8006186:	68fb      	ldr	r3, [r7, #12]
 8006188:	4618      	mov	r0, r3
 800618a:	3714      	adds	r7, #20
 800618c:	46bd      	mov	sp, r7
 800618e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006192:	4770      	bx	lr

08006194 <USB_ReadDevAllOutEpInterrupt>:
 8006194:	b480      	push	{r7}
 8006196:	b085      	sub	sp, #20
 8006198:	af00      	add	r7, sp, #0
 800619a:	6078      	str	r0, [r7, #4]
 800619c:	687b      	ldr	r3, [r7, #4]
 800619e:	60fb      	str	r3, [r7, #12]
 80061a0:	68fb      	ldr	r3, [r7, #12]
 80061a2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80061a6:	699b      	ldr	r3, [r3, #24]
 80061a8:	60bb      	str	r3, [r7, #8]
 80061aa:	68fb      	ldr	r3, [r7, #12]
 80061ac:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80061b0:	69db      	ldr	r3, [r3, #28]
 80061b2:	68ba      	ldr	r2, [r7, #8]
 80061b4:	4013      	ands	r3, r2
 80061b6:	60bb      	str	r3, [r7, #8]
 80061b8:	68bb      	ldr	r3, [r7, #8]
 80061ba:	0c1b      	lsrs	r3, r3, #16
 80061bc:	4618      	mov	r0, r3
 80061be:	3714      	adds	r7, #20
 80061c0:	46bd      	mov	sp, r7
 80061c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061c6:	4770      	bx	lr

080061c8 <USB_ReadDevAllInEpInterrupt>:
 80061c8:	b480      	push	{r7}
 80061ca:	b085      	sub	sp, #20
 80061cc:	af00      	add	r7, sp, #0
 80061ce:	6078      	str	r0, [r7, #4]
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	60fb      	str	r3, [r7, #12]
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80061da:	699b      	ldr	r3, [r3, #24]
 80061dc:	60bb      	str	r3, [r7, #8]
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80061e4:	69db      	ldr	r3, [r3, #28]
 80061e6:	68ba      	ldr	r2, [r7, #8]
 80061e8:	4013      	ands	r3, r2
 80061ea:	60bb      	str	r3, [r7, #8]
 80061ec:	68bb      	ldr	r3, [r7, #8]
 80061ee:	b29b      	uxth	r3, r3
 80061f0:	4618      	mov	r0, r3
 80061f2:	3714      	adds	r7, #20
 80061f4:	46bd      	mov	sp, r7
 80061f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061fa:	4770      	bx	lr

080061fc <USB_ReadDevOutEPInterrupt>:
 80061fc:	b480      	push	{r7}
 80061fe:	b085      	sub	sp, #20
 8006200:	af00      	add	r7, sp, #0
 8006202:	6078      	str	r0, [r7, #4]
 8006204:	460b      	mov	r3, r1
 8006206:	70fb      	strb	r3, [r7, #3]
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	60fb      	str	r3, [r7, #12]
 800620c:	78fb      	ldrb	r3, [r7, #3]
 800620e:	015a      	lsls	r2, r3, #5
 8006210:	68fb      	ldr	r3, [r7, #12]
 8006212:	4413      	add	r3, r2
 8006214:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006218:	689b      	ldr	r3, [r3, #8]
 800621a:	60bb      	str	r3, [r7, #8]
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006222:	695b      	ldr	r3, [r3, #20]
 8006224:	68ba      	ldr	r2, [r7, #8]
 8006226:	4013      	ands	r3, r2
 8006228:	60bb      	str	r3, [r7, #8]
 800622a:	68bb      	ldr	r3, [r7, #8]
 800622c:	4618      	mov	r0, r3
 800622e:	3714      	adds	r7, #20
 8006230:	46bd      	mov	sp, r7
 8006232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006236:	4770      	bx	lr

08006238 <USB_ReadDevInEPInterrupt>:
 8006238:	b480      	push	{r7}
 800623a:	b087      	sub	sp, #28
 800623c:	af00      	add	r7, sp, #0
 800623e:	6078      	str	r0, [r7, #4]
 8006240:	460b      	mov	r3, r1
 8006242:	70fb      	strb	r3, [r7, #3]
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	617b      	str	r3, [r7, #20]
 8006248:	697b      	ldr	r3, [r7, #20]
 800624a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800624e:	691b      	ldr	r3, [r3, #16]
 8006250:	613b      	str	r3, [r7, #16]
 8006252:	697b      	ldr	r3, [r7, #20]
 8006254:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006258:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800625a:	60fb      	str	r3, [r7, #12]
 800625c:	78fb      	ldrb	r3, [r7, #3]
 800625e:	f003 030f 	and.w	r3, r3, #15
 8006262:	68fa      	ldr	r2, [r7, #12]
 8006264:	fa22 f303 	lsr.w	r3, r2, r3
 8006268:	01db      	lsls	r3, r3, #7
 800626a:	b2db      	uxtb	r3, r3
 800626c:	693a      	ldr	r2, [r7, #16]
 800626e:	4313      	orrs	r3, r2
 8006270:	613b      	str	r3, [r7, #16]
 8006272:	78fb      	ldrb	r3, [r7, #3]
 8006274:	015a      	lsls	r2, r3, #5
 8006276:	697b      	ldr	r3, [r7, #20]
 8006278:	4413      	add	r3, r2
 800627a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800627e:	689b      	ldr	r3, [r3, #8]
 8006280:	693a      	ldr	r2, [r7, #16]
 8006282:	4013      	ands	r3, r2
 8006284:	60bb      	str	r3, [r7, #8]
 8006286:	68bb      	ldr	r3, [r7, #8]
 8006288:	4618      	mov	r0, r3
 800628a:	371c      	adds	r7, #28
 800628c:	46bd      	mov	sp, r7
 800628e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006292:	4770      	bx	lr

08006294 <USB_GetMode>:
 8006294:	b480      	push	{r7}
 8006296:	b083      	sub	sp, #12
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	695b      	ldr	r3, [r3, #20]
 80062a0:	f003 0301 	and.w	r3, r3, #1
 80062a4:	4618      	mov	r0, r3
 80062a6:	370c      	adds	r7, #12
 80062a8:	46bd      	mov	sp, r7
 80062aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ae:	4770      	bx	lr

080062b0 <USB_ActivateSetup>:
 80062b0:	b480      	push	{r7}
 80062b2:	b085      	sub	sp, #20
 80062b4:	af00      	add	r7, sp, #0
 80062b6:	6078      	str	r0, [r7, #4]
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	60fb      	str	r3, [r7, #12]
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	68fa      	ldr	r2, [r7, #12]
 80062c6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80062ca:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80062ce:	f023 0307 	bic.w	r3, r3, #7
 80062d2:	6013      	str	r3, [r2, #0]
 80062d4:	68fb      	ldr	r3, [r7, #12]
 80062d6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80062da:	685b      	ldr	r3, [r3, #4]
 80062dc:	68fa      	ldr	r2, [r7, #12]
 80062de:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80062e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80062e6:	6053      	str	r3, [r2, #4]
 80062e8:	2300      	movs	r3, #0
 80062ea:	4618      	mov	r0, r3
 80062ec:	3714      	adds	r7, #20
 80062ee:	46bd      	mov	sp, r7
 80062f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062f4:	4770      	bx	lr
	...

080062f8 <USB_EP0_OutStart>:
 80062f8:	b480      	push	{r7}
 80062fa:	b087      	sub	sp, #28
 80062fc:	af00      	add	r7, sp, #0
 80062fe:	60f8      	str	r0, [r7, #12]
 8006300:	460b      	mov	r3, r1
 8006302:	607a      	str	r2, [r7, #4]
 8006304:	72fb      	strb	r3, [r7, #11]
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	617b      	str	r3, [r7, #20]
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	333c      	adds	r3, #60	; 0x3c
 800630e:	3304      	adds	r3, #4
 8006310:	681b      	ldr	r3, [r3, #0]
 8006312:	613b      	str	r3, [r7, #16]
 8006314:	693b      	ldr	r3, [r7, #16]
 8006316:	4a26      	ldr	r2, [pc, #152]	; (80063b0 <USB_EP0_OutStart+0xb8>)
 8006318:	4293      	cmp	r3, r2
 800631a:	d90a      	bls.n	8006332 <USB_EP0_OutStart+0x3a>
 800631c:	697b      	ldr	r3, [r7, #20]
 800631e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8006328:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800632c:	d101      	bne.n	8006332 <USB_EP0_OutStart+0x3a>
 800632e:	2300      	movs	r3, #0
 8006330:	e037      	b.n	80063a2 <USB_EP0_OutStart+0xaa>
 8006332:	697b      	ldr	r3, [r7, #20]
 8006334:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006338:	461a      	mov	r2, r3
 800633a:	2300      	movs	r3, #0
 800633c:	6113      	str	r3, [r2, #16]
 800633e:	697b      	ldr	r3, [r7, #20]
 8006340:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006344:	691b      	ldr	r3, [r3, #16]
 8006346:	697a      	ldr	r2, [r7, #20]
 8006348:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800634c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8006350:	6113      	str	r3, [r2, #16]
 8006352:	697b      	ldr	r3, [r7, #20]
 8006354:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006358:	691b      	ldr	r3, [r3, #16]
 800635a:	697a      	ldr	r2, [r7, #20]
 800635c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8006360:	f043 0318 	orr.w	r3, r3, #24
 8006364:	6113      	str	r3, [r2, #16]
 8006366:	697b      	ldr	r3, [r7, #20]
 8006368:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800636c:	691b      	ldr	r3, [r3, #16]
 800636e:	697a      	ldr	r2, [r7, #20]
 8006370:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8006374:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8006378:	6113      	str	r3, [r2, #16]
 800637a:	7afb      	ldrb	r3, [r7, #11]
 800637c:	2b01      	cmp	r3, #1
 800637e:	d10f      	bne.n	80063a0 <USB_EP0_OutStart+0xa8>
 8006380:	697b      	ldr	r3, [r7, #20]
 8006382:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006386:	461a      	mov	r2, r3
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	6153      	str	r3, [r2, #20]
 800638c:	697b      	ldr	r3, [r7, #20]
 800638e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	697a      	ldr	r2, [r7, #20]
 8006396:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800639a:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 800639e:	6013      	str	r3, [r2, #0]
 80063a0:	2300      	movs	r3, #0
 80063a2:	4618      	mov	r0, r3
 80063a4:	371c      	adds	r7, #28
 80063a6:	46bd      	mov	sp, r7
 80063a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063ac:	4770      	bx	lr
 80063ae:	bf00      	nop
 80063b0:	4f54300a 	.word	0x4f54300a

080063b4 <USB_CoreReset>:
 80063b4:	b480      	push	{r7}
 80063b6:	b085      	sub	sp, #20
 80063b8:	af00      	add	r7, sp, #0
 80063ba:	6078      	str	r0, [r7, #4]
 80063bc:	2300      	movs	r3, #0
 80063be:	60fb      	str	r3, [r7, #12]
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	3301      	adds	r3, #1
 80063c4:	60fb      	str	r3, [r7, #12]
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	4a13      	ldr	r2, [pc, #76]	; (8006418 <USB_CoreReset+0x64>)
 80063ca:	4293      	cmp	r3, r2
 80063cc:	d901      	bls.n	80063d2 <USB_CoreReset+0x1e>
 80063ce:	2303      	movs	r3, #3
 80063d0:	e01b      	b.n	800640a <USB_CoreReset+0x56>
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	691b      	ldr	r3, [r3, #16]
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	daf2      	bge.n	80063c0 <USB_CoreReset+0xc>
 80063da:	2300      	movs	r3, #0
 80063dc:	60fb      	str	r3, [r7, #12]
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	691b      	ldr	r3, [r3, #16]
 80063e2:	f043 0201 	orr.w	r2, r3, #1
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	611a      	str	r2, [r3, #16]
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	3301      	adds	r3, #1
 80063ee:	60fb      	str	r3, [r7, #12]
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	4a09      	ldr	r2, [pc, #36]	; (8006418 <USB_CoreReset+0x64>)
 80063f4:	4293      	cmp	r3, r2
 80063f6:	d901      	bls.n	80063fc <USB_CoreReset+0x48>
 80063f8:	2303      	movs	r3, #3
 80063fa:	e006      	b.n	800640a <USB_CoreReset+0x56>
 80063fc:	687b      	ldr	r3, [r7, #4]
 80063fe:	691b      	ldr	r3, [r3, #16]
 8006400:	f003 0301 	and.w	r3, r3, #1
 8006404:	2b01      	cmp	r3, #1
 8006406:	d0f0      	beq.n	80063ea <USB_CoreReset+0x36>
 8006408:	2300      	movs	r3, #0
 800640a:	4618      	mov	r0, r3
 800640c:	3714      	adds	r7, #20
 800640e:	46bd      	mov	sp, r7
 8006410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006414:	4770      	bx	lr
 8006416:	bf00      	nop
 8006418:	00030d40 	.word	0x00030d40

0800641c <cobs_encode>:
 *
 * returns:        A struct containing the success status of the encoding
 *                 operation and the length of the result (that was written to
 *                 dst_buf_ptr)
 */
cobs_encode_result cobs_encode(void *dst_buf_ptr, size_t dst_buf_len, const void *src_ptr, size_t src_len) {
 800641c:	b480      	push	{r7}
 800641e:	b08d      	sub	sp, #52	; 0x34
 8006420:	af00      	add	r7, sp, #0
 8006422:	60f8      	str	r0, [r7, #12]
 8006424:	60b9      	str	r1, [r7, #8]
 8006426:	607a      	str	r2, [r7, #4]
 8006428:	603b      	str	r3, [r7, #0]
	cobs_encode_result result = { 0, COBS_ENCODE_OK };
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	2200      	movs	r2, #0
 800642e:	601a      	str	r2, [r3, #0]
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	2200      	movs	r2, #0
 8006434:	711a      	strb	r2, [r3, #4]
	const uint8_t *src_read_ptr = (const uint8_t*) src_ptr;
 8006436:	683b      	ldr	r3, [r7, #0]
 8006438:	62fb      	str	r3, [r7, #44]	; 0x2c
	const uint8_t *src_end_ptr = src_read_ptr + src_len;
 800643a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800643c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800643e:	4413      	add	r3, r2
 8006440:	61fb      	str	r3, [r7, #28]
	uint8_t *dst_buf_start_ptr = (uint8_t*) dst_buf_ptr;
 8006442:	68bb      	ldr	r3, [r7, #8]
 8006444:	61bb      	str	r3, [r7, #24]
	uint8_t *dst_buf_end_ptr = dst_buf_start_ptr + dst_buf_len;
 8006446:	69ba      	ldr	r2, [r7, #24]
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	4413      	add	r3, r2
 800644c:	617b      	str	r3, [r7, #20]
	uint8_t *dst_code_write_ptr = (uint8_t*) dst_buf_ptr;
 800644e:	68bb      	ldr	r3, [r7, #8]
 8006450:	62bb      	str	r3, [r7, #40]	; 0x28
	uint8_t *dst_write_ptr = dst_code_write_ptr + 1;
 8006452:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006454:	3301      	adds	r3, #1
 8006456:	627b      	str	r3, [r7, #36]	; 0x24
	uint8_t src_byte = 0;
 8006458:	2300      	movs	r3, #0
 800645a:	74fb      	strb	r3, [r7, #19]
	uint8_t search_len = 1;
 800645c:	2301      	movs	r3, #1
 800645e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

	/* First, do a NULL pointer check and return immediately if it fails. */
	if ((dst_buf_ptr == NULL) || (src_ptr == NULL)) {
 8006462:	68bb      	ldr	r3, [r7, #8]
 8006464:	2b00      	cmp	r3, #0
 8006466:	d002      	beq.n	800646e <cobs_encode+0x52>
 8006468:	683b      	ldr	r3, [r7, #0]
 800646a:	2b00      	cmp	r3, #0
 800646c:	d103      	bne.n	8006476 <cobs_encode+0x5a>
		result.status = COBS_ENCODE_NULL_POINTER;
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	2201      	movs	r2, #1
 8006472:	711a      	strb	r2, [r3, #4]
		return result;
 8006474:	e05e      	b.n	8006534 <cobs_encode+0x118>
	}

	if (src_len != 0) {
 8006476:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006478:	2b00      	cmp	r3, #0
 800647a:	d042      	beq.n	8006502 <cobs_encode+0xe6>
		/* Iterate over the source bytes */
		for (;;) {
			/* Check for running out of output buffer space */
			if (dst_write_ptr >= dst_buf_end_ptr) {
 800647c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800647e:	697b      	ldr	r3, [r7, #20]
 8006480:	429a      	cmp	r2, r3
 8006482:	d307      	bcc.n	8006494 <cobs_encode+0x78>
				result.status = (cobs_encode_status) (result.status | COBS_ENCODE_OUT_BUFFER_OVERFLOW);
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	791b      	ldrb	r3, [r3, #4]
 8006488:	f043 0302 	orr.w	r3, r3, #2
 800648c:	b2da      	uxtb	r2, r3
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	711a      	strb	r2, [r3, #4]
				break;
 8006492:	e036      	b.n	8006502 <cobs_encode+0xe6>
			}

			src_byte = *src_read_ptr++;
 8006494:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006496:	1c5a      	adds	r2, r3, #1
 8006498:	62fa      	str	r2, [r7, #44]	; 0x2c
 800649a:	781b      	ldrb	r3, [r3, #0]
 800649c:	74fb      	strb	r3, [r7, #19]
			if (src_byte == 0) {
 800649e:	7cfb      	ldrb	r3, [r7, #19]
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	d10f      	bne.n	80064c4 <cobs_encode+0xa8>
				/* We found a zero byte */
				*dst_code_write_ptr = search_len;
 80064a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064a6:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 80064aa:	701a      	strb	r2, [r3, #0]
				dst_code_write_ptr = dst_write_ptr++;
 80064ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ae:	1c5a      	adds	r2, r3, #1
 80064b0:	627a      	str	r2, [r7, #36]	; 0x24
 80064b2:	62bb      	str	r3, [r7, #40]	; 0x28
				search_len = 1;
 80064b4:	2301      	movs	r3, #1
 80064b6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
				if (src_read_ptr >= src_end_ptr) {
 80064ba:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80064bc:	69fb      	ldr	r3, [r7, #28]
 80064be:	429a      	cmp	r2, r3
 80064c0:	d3dc      	bcc.n	800647c <cobs_encode+0x60>
					break;
 80064c2:	e01e      	b.n	8006502 <cobs_encode+0xe6>
				}
			} else {
				/* Copy the non-zero byte to the destination buffer */
				*dst_write_ptr++ = src_byte;
 80064c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064c6:	1c5a      	adds	r2, r3, #1
 80064c8:	627a      	str	r2, [r7, #36]	; 0x24
 80064ca:	7cfa      	ldrb	r2, [r7, #19]
 80064cc:	701a      	strb	r2, [r3, #0]
				search_len++;
 80064ce:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80064d2:	3301      	adds	r3, #1
 80064d4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
				if (src_read_ptr >= src_end_ptr) {
 80064d8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80064da:	69fb      	ldr	r3, [r7, #28]
 80064dc:	429a      	cmp	r2, r3
 80064de:	d20f      	bcs.n	8006500 <cobs_encode+0xe4>
					break;
				}
				if (search_len == 0xFF) {
 80064e0:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80064e4:	2bff      	cmp	r3, #255	; 0xff
 80064e6:	d1c9      	bne.n	800647c <cobs_encode+0x60>
					/* We have a long string of non-zero bytes, so we need
					 * to write out a length code of 0xFF. */
					*dst_code_write_ptr = search_len;
 80064e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064ea:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 80064ee:	701a      	strb	r2, [r3, #0]
					dst_code_write_ptr = dst_write_ptr++;
 80064f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064f2:	1c5a      	adds	r2, r3, #1
 80064f4:	627a      	str	r2, [r7, #36]	; 0x24
 80064f6:	62bb      	str	r3, [r7, #40]	; 0x28
					search_len = 1;
 80064f8:	2301      	movs	r3, #1
 80064fa:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
			if (dst_write_ptr >= dst_buf_end_ptr) {
 80064fe:	e7bd      	b.n	800647c <cobs_encode+0x60>
					break;
 8006500:	bf00      	nop

	/* We've reached the end of the source data (or possibly run out of output buffer)
	 * Finalise the remaining output. In particular, write the code (length) byte.
	 * Update the pointer to calculate the final output length.
	 */
	if (dst_code_write_ptr >= dst_buf_end_ptr) {
 8006502:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006504:	697b      	ldr	r3, [r7, #20]
 8006506:	429a      	cmp	r2, r3
 8006508:	d309      	bcc.n	800651e <cobs_encode+0x102>
		/* We've run out of output buffer to write the code byte. */
		result.status = (cobs_encode_status) (result.status | COBS_ENCODE_OUT_BUFFER_OVERFLOW);
 800650a:	68fb      	ldr	r3, [r7, #12]
 800650c:	791b      	ldrb	r3, [r3, #4]
 800650e:	f043 0302 	orr.w	r3, r3, #2
 8006512:	b2da      	uxtb	r2, r3
 8006514:	68fb      	ldr	r3, [r7, #12]
 8006516:	711a      	strb	r2, [r3, #4]
		dst_write_ptr = dst_buf_end_ptr;
 8006518:	697b      	ldr	r3, [r7, #20]
 800651a:	627b      	str	r3, [r7, #36]	; 0x24
 800651c:	e003      	b.n	8006526 <cobs_encode+0x10a>
	} else {
		/* Write the last code (length) byte. */
		*dst_code_write_ptr = search_len;
 800651e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006520:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 8006524:	701a      	strb	r2, [r3, #0]
	}

	/* Calculate the output length, from the value of dst_code_write_ptr */
	result.out_len = dst_write_ptr - dst_buf_start_ptr;
 8006526:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006528:	69bb      	ldr	r3, [r7, #24]
 800652a:	1ad3      	subs	r3, r2, r3
 800652c:	461a      	mov	r2, r3
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	601a      	str	r2, [r3, #0]

	return result;
 8006532:	bf00      	nop
}
 8006534:	68f8      	ldr	r0, [r7, #12]
 8006536:	3734      	adds	r7, #52	; 0x34
 8006538:	46bd      	mov	sp, r7
 800653a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800653e:	4770      	bx	lr

08006540 <cobs_decode>:
 *
 * returns:        A struct containing the success status of the decoding
 *                 operation and the length of the result (that was written to
 *                 dst_buf_ptr)
 */
cobs_decode_result cobs_decode(void *dst_buf_ptr, size_t dst_buf_len, const void *src_ptr, size_t src_len) {
 8006540:	b480      	push	{r7}
 8006542:	b08d      	sub	sp, #52	; 0x34
 8006544:	af00      	add	r7, sp, #0
 8006546:	60f8      	str	r0, [r7, #12]
 8006548:	60b9      	str	r1, [r7, #8]
 800654a:	607a      	str	r2, [r7, #4]
 800654c:	603b      	str	r3, [r7, #0]
	cobs_decode_result result = { 0, COBS_DECODE_OK };
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	2200      	movs	r2, #0
 8006552:	601a      	str	r2, [r3, #0]
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	2200      	movs	r2, #0
 8006558:	711a      	strb	r2, [r3, #4]
	const uint8_t *src_read_ptr = (const uint8_t*) src_ptr;
 800655a:	683b      	ldr	r3, [r7, #0]
 800655c:	62fb      	str	r3, [r7, #44]	; 0x2c
	const uint8_t *src_end_ptr = src_read_ptr + src_len;
 800655e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006560:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006562:	4413      	add	r3, r2
 8006564:	623b      	str	r3, [r7, #32]
	uint8_t *dst_buf_start_ptr = (uint8_t*) dst_buf_ptr;
 8006566:	68bb      	ldr	r3, [r7, #8]
 8006568:	61fb      	str	r3, [r7, #28]
	uint8_t *dst_buf_end_ptr = dst_buf_start_ptr + dst_buf_len;
 800656a:	69fa      	ldr	r2, [r7, #28]
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	4413      	add	r3, r2
 8006570:	61bb      	str	r3, [r7, #24]
	uint8_t *dst_write_ptr = (uint8_t*) dst_buf_ptr;
 8006572:	68bb      	ldr	r3, [r7, #8]
 8006574:	62bb      	str	r3, [r7, #40]	; 0x28
	uint8_t src_byte;
	uint8_t i;
	uint8_t len_code;

	/* First, do a NULL pointer check and return immediately if it fails. */
	if ((dst_buf_ptr == NULL) || (src_ptr == NULL)) {
 8006576:	68bb      	ldr	r3, [r7, #8]
 8006578:	2b00      	cmp	r3, #0
 800657a:	d002      	beq.n	8006582 <cobs_decode+0x42>
 800657c:	683b      	ldr	r3, [r7, #0]
 800657e:	2b00      	cmp	r3, #0
 8006580:	d103      	bne.n	800658a <cobs_decode+0x4a>
		result.status = COBS_DECODE_NULL_POINTER;
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	2201      	movs	r2, #1
 8006586:	711a      	strb	r2, [r3, #4]
		return result;
 8006588:	e083      	b.n	8006692 <cobs_decode+0x152>
	}

	if (src_len != 0) {
 800658a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800658c:	2b00      	cmp	r3, #0
 800658e:	d079      	beq.n	8006684 <cobs_decode+0x144>
		for (;;) {
			len_code = *src_read_ptr++;
 8006590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006592:	1c5a      	adds	r2, r3, #1
 8006594:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006596:	781b      	ldrb	r3, [r3, #0]
 8006598:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
			if (len_code == 0) {
 800659c:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80065a0:	2b00      	cmp	r3, #0
 80065a2:	d107      	bne.n	80065b4 <cobs_decode+0x74>
				result.status = (cobs_decode_status) (result.status | COBS_DECODE_ZERO_BYTE_IN_INPUT);
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	791b      	ldrb	r3, [r3, #4]
 80065a8:	f043 0304 	orr.w	r3, r3, #4
 80065ac:	b2da      	uxtb	r2, r3
 80065ae:	68fb      	ldr	r3, [r7, #12]
 80065b0:	711a      	strb	r2, [r3, #4]
				break;
 80065b2:	e067      	b.n	8006684 <cobs_decode+0x144>
			}
			len_code--;
 80065b4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80065b8:	3b01      	subs	r3, #1
 80065ba:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26

			/* Check length code against remaining input bytes */
			remaining_bytes = src_end_ptr - src_read_ptr;
 80065be:	6a3a      	ldr	r2, [r7, #32]
 80065c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80065c2:	1ad3      	subs	r3, r2, r3
 80065c4:	617b      	str	r3, [r7, #20]
			if (len_code > remaining_bytes) {
 80065c6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80065ca:	697a      	ldr	r2, [r7, #20]
 80065cc:	429a      	cmp	r2, r3
 80065ce:	d209      	bcs.n	80065e4 <cobs_decode+0xa4>
				result.status = (cobs_decode_status) (result.status | COBS_DECODE_INPUT_TOO_SHORT);
 80065d0:	68fb      	ldr	r3, [r7, #12]
 80065d2:	791b      	ldrb	r3, [r3, #4]
 80065d4:	f043 0308 	orr.w	r3, r3, #8
 80065d8:	b2da      	uxtb	r2, r3
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	711a      	strb	r2, [r3, #4]
				len_code = remaining_bytes;
 80065de:	697b      	ldr	r3, [r7, #20]
 80065e0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
			}

			/* Check length code against remaining output buffer space */
			remaining_bytes = dst_buf_end_ptr - dst_write_ptr;
 80065e4:	69ba      	ldr	r2, [r7, #24]
 80065e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065e8:	1ad3      	subs	r3, r2, r3
 80065ea:	617b      	str	r3, [r7, #20]
			if (len_code > remaining_bytes) {
 80065ec:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80065f0:	697a      	ldr	r2, [r7, #20]
 80065f2:	429a      	cmp	r2, r3
 80065f4:	d209      	bcs.n	800660a <cobs_decode+0xca>
				result.status = (cobs_decode_status) (result.status | COBS_DECODE_OUT_BUFFER_OVERFLOW);
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	791b      	ldrb	r3, [r3, #4]
 80065fa:	f043 0302 	orr.w	r3, r3, #2
 80065fe:	b2da      	uxtb	r2, r3
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	711a      	strb	r2, [r3, #4]

				len_code = remaining_bytes;
 8006604:	697b      	ldr	r3, [r7, #20]
 8006606:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
			}

			for (i = len_code; i != 0; i--) {
 800660a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800660e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8006612:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006616:	2b00      	cmp	r3, #0
 8006618:	d019      	beq.n	800664e <cobs_decode+0x10e>
				src_byte = *src_read_ptr++;
 800661a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800661c:	1c5a      	adds	r2, r3, #1
 800661e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006620:	781b      	ldrb	r3, [r3, #0]
 8006622:	74fb      	strb	r3, [r7, #19]
				if (src_byte == 0) {
 8006624:	7cfb      	ldrb	r3, [r7, #19]
 8006626:	2b00      	cmp	r3, #0
 8006628:	d106      	bne.n	8006638 <cobs_decode+0xf8>
					result.status = (cobs_decode_status) (result.status | COBS_DECODE_ZERO_BYTE_IN_INPUT);
 800662a:	68fb      	ldr	r3, [r7, #12]
 800662c:	791b      	ldrb	r3, [r3, #4]
 800662e:	f043 0304 	orr.w	r3, r3, #4
 8006632:	b2da      	uxtb	r2, r3
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	711a      	strb	r2, [r3, #4]

				}
				*dst_write_ptr++ = src_byte;
 8006638:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800663a:	1c5a      	adds	r2, r3, #1
 800663c:	62ba      	str	r2, [r7, #40]	; 0x28
 800663e:	7cfa      	ldrb	r2, [r7, #19]
 8006640:	701a      	strb	r2, [r3, #0]
			for (i = len_code; i != 0; i--) {
 8006642:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006646:	3b01      	subs	r3, #1
 8006648:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800664c:	e7e1      	b.n	8006612 <cobs_decode+0xd2>
			}

			if (src_read_ptr >= src_end_ptr) {
 800664e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006650:	6a3b      	ldr	r3, [r7, #32]
 8006652:	429a      	cmp	r2, r3
 8006654:	d215      	bcs.n	8006682 <cobs_decode+0x142>
				break;
			}

			/* Add a zero to the end */
			if (len_code != 0xFE) {
 8006656:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800665a:	2bfe      	cmp	r3, #254	; 0xfe
 800665c:	d098      	beq.n	8006590 <cobs_decode+0x50>
				if (dst_write_ptr >= dst_buf_end_ptr) {
 800665e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006660:	69bb      	ldr	r3, [r7, #24]
 8006662:	429a      	cmp	r2, r3
 8006664:	d307      	bcc.n	8006676 <cobs_decode+0x136>
					result.status = (cobs_decode_status) (result.status | COBS_DECODE_OUT_BUFFER_OVERFLOW);
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	791b      	ldrb	r3, [r3, #4]
 800666a:	f043 0302 	orr.w	r3, r3, #2
 800666e:	b2da      	uxtb	r2, r3
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	711a      	strb	r2, [r3, #4]

					break;
 8006674:	e006      	b.n	8006684 <cobs_decode+0x144>
				}
				*dst_write_ptr++ = 0;
 8006676:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006678:	1c5a      	adds	r2, r3, #1
 800667a:	62ba      	str	r2, [r7, #40]	; 0x28
 800667c:	2200      	movs	r2, #0
 800667e:	701a      	strb	r2, [r3, #0]
			len_code = *src_read_ptr++;
 8006680:	e786      	b.n	8006590 <cobs_decode+0x50>
				break;
 8006682:	bf00      	nop
			}
		}
	}

	result.out_len = dst_write_ptr - dst_buf_start_ptr;
 8006684:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006686:	69fb      	ldr	r3, [r7, #28]
 8006688:	1ad3      	subs	r3, r2, r3
 800668a:	461a      	mov	r2, r3
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	601a      	str	r2, [r3, #0]

	return result;
 8006690:	bf00      	nop
}
 8006692:	68f8      	ldr	r0, [r7, #12]
 8006694:	3734      	adds	r7, #52	; 0x34
 8006696:	46bd      	mov	sp, r7
 8006698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800669c:	4770      	bx	lr

0800669e <_Z8crc_mathhh>:
 800669e:	b480      	push	{r7}
 80066a0:	b085      	sub	sp, #20
 80066a2:	af00      	add	r7, sp, #0
 80066a4:	4603      	mov	r3, r0
 80066a6:	460a      	mov	r2, r1
 80066a8:	71fb      	strb	r3, [r7, #7]
 80066aa:	4613      	mov	r3, r2
 80066ac:	71bb      	strb	r3, [r7, #6]
 80066ae:	79fa      	ldrb	r2, [r7, #7]
 80066b0:	79bb      	ldrb	r3, [r7, #6]
 80066b2:	4053      	eors	r3, r2
 80066b4:	73fb      	strb	r3, [r7, #15]
 80066b6:	2300      	movs	r3, #0
 80066b8:	71bb      	strb	r3, [r7, #6]
 80066ba:	7bfb      	ldrb	r3, [r7, #15]
 80066bc:	f003 0301 	and.w	r3, r3, #1
 80066c0:	2b00      	cmp	r3, #0
 80066c2:	d003      	beq.n	80066cc <_Z8crc_mathhh+0x2e>
 80066c4:	79bb      	ldrb	r3, [r7, #6]
 80066c6:	f083 035e 	eor.w	r3, r3, #94	; 0x5e
 80066ca:	71bb      	strb	r3, [r7, #6]
 80066cc:	7bfb      	ldrb	r3, [r7, #15]
 80066ce:	f003 0302 	and.w	r3, r3, #2
 80066d2:	2b00      	cmp	r3, #0
 80066d4:	d004      	beq.n	80066e0 <_Z8crc_mathhh+0x42>
 80066d6:	79bb      	ldrb	r3, [r7, #6]
 80066d8:	f083 0343 	eor.w	r3, r3, #67	; 0x43
 80066dc:	43db      	mvns	r3, r3
 80066de:	71bb      	strb	r3, [r7, #6]
 80066e0:	7bfb      	ldrb	r3, [r7, #15]
 80066e2:	f003 0304 	and.w	r3, r3, #4
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	d003      	beq.n	80066f2 <_Z8crc_mathhh+0x54>
 80066ea:	79bb      	ldrb	r3, [r7, #6]
 80066ec:	f083 0361 	eor.w	r3, r3, #97	; 0x61
 80066f0:	71bb      	strb	r3, [r7, #6]
 80066f2:	7bfb      	ldrb	r3, [r7, #15]
 80066f4:	f003 0308 	and.w	r3, r3, #8
 80066f8:	2b00      	cmp	r3, #0
 80066fa:	d004      	beq.n	8006706 <_Z8crc_mathhh+0x68>
 80066fc:	79bb      	ldrb	r3, [r7, #6]
 80066fe:	f083 033d 	eor.w	r3, r3, #61	; 0x3d
 8006702:	43db      	mvns	r3, r3
 8006704:	71bb      	strb	r3, [r7, #6]
 8006706:	7bfb      	ldrb	r3, [r7, #15]
 8006708:	f003 0310 	and.w	r3, r3, #16
 800670c:	2b00      	cmp	r3, #0
 800670e:	d004      	beq.n	800671a <_Z8crc_mathhh+0x7c>
 8006710:	79bb      	ldrb	r3, [r7, #6]
 8006712:	f083 0362 	eor.w	r3, r3, #98	; 0x62
 8006716:	43db      	mvns	r3, r3
 8006718:	71bb      	strb	r3, [r7, #6]
 800671a:	7bfb      	ldrb	r3, [r7, #15]
 800671c:	f003 0320 	and.w	r3, r3, #32
 8006720:	2b00      	cmp	r3, #0
 8006722:	d003      	beq.n	800672c <_Z8crc_mathhh+0x8e>
 8006724:	79bb      	ldrb	r3, [r7, #6]
 8006726:	f083 0323 	eor.w	r3, r3, #35	; 0x23
 800672a:	71bb      	strb	r3, [r7, #6]
 800672c:	7bfb      	ldrb	r3, [r7, #15]
 800672e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006732:	2b00      	cmp	r3, #0
 8006734:	d003      	beq.n	800673e <_Z8crc_mathhh+0xa0>
 8006736:	79bb      	ldrb	r3, [r7, #6]
 8006738:	f083 0346 	eor.w	r3, r3, #70	; 0x46
 800673c:	71bb      	strb	r3, [r7, #6]
 800673e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006742:	2b00      	cmp	r3, #0
 8006744:	da04      	bge.n	8006750 <_Z8crc_mathhh+0xb2>
 8006746:	79bb      	ldrb	r3, [r7, #6]
 8006748:	f083 0373 	eor.w	r3, r3, #115	; 0x73
 800674c:	43db      	mvns	r3, r3
 800674e:	71bb      	strb	r3, [r7, #6]
 8006750:	79bb      	ldrb	r3, [r7, #6]
 8006752:	4618      	mov	r0, r3
 8006754:	3714      	adds	r7, #20
 8006756:	46bd      	mov	sp, r7
 8006758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800675c:	4770      	bx	lr

0800675e <_Z9crc8_bytehh>:
 800675e:	b580      	push	{r7, lr}
 8006760:	b082      	sub	sp, #8
 8006762:	af00      	add	r7, sp, #0
 8006764:	4603      	mov	r3, r0
 8006766:	460a      	mov	r2, r1
 8006768:	71fb      	strb	r3, [r7, #7]
 800676a:	4613      	mov	r3, r2
 800676c:	71bb      	strb	r3, [r7, #6]
 800676e:	79ba      	ldrb	r2, [r7, #6]
 8006770:	79fb      	ldrb	r3, [r7, #7]
 8006772:	4611      	mov	r1, r2
 8006774:	4618      	mov	r0, r3
 8006776:	f7ff ff92 	bl	800669e <_Z8crc_mathhh>
 800677a:	4603      	mov	r3, r0
 800677c:	71bb      	strb	r3, [r7, #6]
 800677e:	79bb      	ldrb	r3, [r7, #6]
 8006780:	4618      	mov	r0, r3
 8006782:	3708      	adds	r7, #8
 8006784:	46bd      	mov	sp, r7
 8006786:	bd80      	pop	{r7, pc}

08006788 <_Z11crc8_streamPht>:
 8006788:	b580      	push	{r7, lr}
 800678a:	b084      	sub	sp, #16
 800678c:	af00      	add	r7, sp, #0
 800678e:	6078      	str	r0, [r7, #4]
 8006790:	460b      	mov	r3, r1
 8006792:	807b      	strh	r3, [r7, #2]
 8006794:	23ff      	movs	r3, #255	; 0xff
 8006796:	73fb      	strb	r3, [r7, #15]
 8006798:	2300      	movs	r3, #0
 800679a:	81bb      	strh	r3, [r7, #12]
 800679c:	89ba      	ldrh	r2, [r7, #12]
 800679e:	887b      	ldrh	r3, [r7, #2]
 80067a0:	429a      	cmp	r2, r3
 80067a2:	d20e      	bcs.n	80067c2 <_Z11crc8_streamPht+0x3a>
 80067a4:	89bb      	ldrh	r3, [r7, #12]
 80067a6:	687a      	ldr	r2, [r7, #4]
 80067a8:	4413      	add	r3, r2
 80067aa:	781b      	ldrb	r3, [r3, #0]
 80067ac:	7bfa      	ldrb	r2, [r7, #15]
 80067ae:	4611      	mov	r1, r2
 80067b0:	4618      	mov	r0, r3
 80067b2:	f7ff ffd4 	bl	800675e <_Z9crc8_bytehh>
 80067b6:	4603      	mov	r3, r0
 80067b8:	73fb      	strb	r3, [r7, #15]
 80067ba:	89bb      	ldrh	r3, [r7, #12]
 80067bc:	3301      	adds	r3, #1
 80067be:	81bb      	strh	r3, [r7, #12]
 80067c0:	e7ec      	b.n	800679c <_Z11crc8_streamPht+0x14>
 80067c2:	7bfb      	ldrb	r3, [r7, #15]
 80067c4:	4618      	mov	r0, r3
 80067c6:	3710      	adds	r7, #16
 80067c8:	46bd      	mov	sp, r7
 80067ca:	bd80      	pop	{r7, pc}

080067cc <USBD_CDC_Init>:
 80067cc:	b580      	push	{r7, lr}
 80067ce:	b084      	sub	sp, #16
 80067d0:	af00      	add	r7, sp, #0
 80067d2:	6078      	str	r0, [r7, #4]
 80067d4:	460b      	mov	r3, r1
 80067d6:	70fb      	strb	r3, [r7, #3]
 80067d8:	f44f 7007 	mov.w	r0, #540	; 0x21c
 80067dc:	f002 f96a 	bl	8008ab4 <USBD_static_malloc>
 80067e0:	60f8      	str	r0, [r7, #12]
 80067e2:	68fb      	ldr	r3, [r7, #12]
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d105      	bne.n	80067f4 <USBD_CDC_Init+0x28>
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	2200      	movs	r2, #0
 80067ec:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 80067f0:	2302      	movs	r3, #2
 80067f2:	e066      	b.n	80068c2 <USBD_CDC_Init+0xf6>
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	68fa      	ldr	r2, [r7, #12]
 80067f8:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	7c1b      	ldrb	r3, [r3, #16]
 8006800:	2b00      	cmp	r3, #0
 8006802:	d119      	bne.n	8006838 <USBD_CDC_Init+0x6c>
 8006804:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006808:	2202      	movs	r2, #2
 800680a:	2181      	movs	r1, #129	; 0x81
 800680c:	6878      	ldr	r0, [r7, #4]
 800680e:	f002 f82e 	bl	800886e <USBD_LL_OpenEP>
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	2201      	movs	r2, #1
 8006816:	871a      	strh	r2, [r3, #56]	; 0x38
 8006818:	f44f 7300 	mov.w	r3, #512	; 0x200
 800681c:	2202      	movs	r2, #2
 800681e:	2101      	movs	r1, #1
 8006820:	6878      	ldr	r0, [r7, #4]
 8006822:	f002 f824 	bl	800886e <USBD_LL_OpenEP>
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	2201      	movs	r2, #1
 800682a:	f8a3 2178 	strh.w	r2, [r3, #376]	; 0x178
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	2210      	movs	r2, #16
 8006832:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
 8006836:	e016      	b.n	8006866 <USBD_CDC_Init+0x9a>
 8006838:	2340      	movs	r3, #64	; 0x40
 800683a:	2202      	movs	r2, #2
 800683c:	2181      	movs	r1, #129	; 0x81
 800683e:	6878      	ldr	r0, [r7, #4]
 8006840:	f002 f815 	bl	800886e <USBD_LL_OpenEP>
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	2201      	movs	r2, #1
 8006848:	871a      	strh	r2, [r3, #56]	; 0x38
 800684a:	2340      	movs	r3, #64	; 0x40
 800684c:	2202      	movs	r2, #2
 800684e:	2101      	movs	r1, #1
 8006850:	6878      	ldr	r0, [r7, #4]
 8006852:	f002 f80c 	bl	800886e <USBD_LL_OpenEP>
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	2201      	movs	r2, #1
 800685a:	f8a3 2178 	strh.w	r2, [r3, #376]	; 0x178
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	2210      	movs	r2, #16
 8006862:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
 8006866:	2308      	movs	r3, #8
 8006868:	2203      	movs	r2, #3
 800686a:	2182      	movs	r1, #130	; 0x82
 800686c:	6878      	ldr	r0, [r7, #4]
 800686e:	f001 fffe 	bl	800886e <USBD_LL_OpenEP>
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	2201      	movs	r2, #1
 8006876:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006880:	681b      	ldr	r3, [r3, #0]
 8006882:	4798      	blx	r3
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	2200      	movs	r2, #0
 8006888:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	2200      	movs	r2, #0
 8006890:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	7c1b      	ldrb	r3, [r3, #16]
 8006898:	2b00      	cmp	r3, #0
 800689a:	d109      	bne.n	80068b0 <USBD_CDC_Init+0xe4>
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80068a2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068a6:	2101      	movs	r1, #1
 80068a8:	6878      	ldr	r0, [r7, #4]
 80068aa:	f002 f8cf 	bl	8008a4c <USBD_LL_PrepareReceive>
 80068ae:	e007      	b.n	80068c0 <USBD_CDC_Init+0xf4>
 80068b0:	68fb      	ldr	r3, [r7, #12]
 80068b2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80068b6:	2340      	movs	r3, #64	; 0x40
 80068b8:	2101      	movs	r1, #1
 80068ba:	6878      	ldr	r0, [r7, #4]
 80068bc:	f002 f8c6 	bl	8008a4c <USBD_LL_PrepareReceive>
 80068c0:	2300      	movs	r3, #0
 80068c2:	4618      	mov	r0, r3
 80068c4:	3710      	adds	r7, #16
 80068c6:	46bd      	mov	sp, r7
 80068c8:	bd80      	pop	{r7, pc}

080068ca <USBD_CDC_DeInit>:
 80068ca:	b580      	push	{r7, lr}
 80068cc:	b082      	sub	sp, #8
 80068ce:	af00      	add	r7, sp, #0
 80068d0:	6078      	str	r0, [r7, #4]
 80068d2:	460b      	mov	r3, r1
 80068d4:	70fb      	strb	r3, [r7, #3]
 80068d6:	2181      	movs	r1, #129	; 0x81
 80068d8:	6878      	ldr	r0, [r7, #4]
 80068da:	f001 ffee 	bl	80088ba <USBD_LL_CloseEP>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	2200      	movs	r2, #0
 80068e2:	871a      	strh	r2, [r3, #56]	; 0x38
 80068e4:	2101      	movs	r1, #1
 80068e6:	6878      	ldr	r0, [r7, #4]
 80068e8:	f001 ffe7 	bl	80088ba <USBD_LL_CloseEP>
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	2200      	movs	r2, #0
 80068f0:	f8a3 2178 	strh.w	r2, [r3, #376]	; 0x178
 80068f4:	2182      	movs	r1, #130	; 0x82
 80068f6:	6878      	ldr	r0, [r7, #4]
 80068f8:	f001 ffdf 	bl	80088ba <USBD_LL_CloseEP>
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	2200      	movs	r2, #0
 8006900:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	2200      	movs	r2, #0
 8006908:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006912:	2b00      	cmp	r3, #0
 8006914:	d00e      	beq.n	8006934 <USBD_CDC_DeInit+0x6a>
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 800691c:	685b      	ldr	r3, [r3, #4]
 800691e:	4798      	blx	r3
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006926:	4618      	mov	r0, r3
 8006928:	f002 f8d2 	bl	8008ad0 <USBD_static_free>
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	2200      	movs	r2, #0
 8006930:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 8006934:	2300      	movs	r3, #0
 8006936:	4618      	mov	r0, r3
 8006938:	3708      	adds	r7, #8
 800693a:	46bd      	mov	sp, r7
 800693c:	bd80      	pop	{r7, pc}
	...

08006940 <USBD_CDC_Setup>:
 8006940:	b580      	push	{r7, lr}
 8006942:	b086      	sub	sp, #24
 8006944:	af00      	add	r7, sp, #0
 8006946:	6078      	str	r0, [r7, #4]
 8006948:	6039      	str	r1, [r7, #0]
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006950:	613b      	str	r3, [r7, #16]
 8006952:	2300      	movs	r3, #0
 8006954:	737b      	strb	r3, [r7, #13]
 8006956:	2300      	movs	r3, #0
 8006958:	817b      	strh	r3, [r7, #10]
 800695a:	2300      	movs	r3, #0
 800695c:	75fb      	strb	r3, [r7, #23]
 800695e:	693b      	ldr	r3, [r7, #16]
 8006960:	2b00      	cmp	r3, #0
 8006962:	d101      	bne.n	8006968 <USBD_CDC_Setup+0x28>
 8006964:	2303      	movs	r3, #3
 8006966:	e0af      	b.n	8006ac8 <USBD_CDC_Setup+0x188>
 8006968:	683b      	ldr	r3, [r7, #0]
 800696a:	781b      	ldrb	r3, [r3, #0]
 800696c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8006970:	2b00      	cmp	r3, #0
 8006972:	d03f      	beq.n	80069f4 <USBD_CDC_Setup+0xb4>
 8006974:	2b20      	cmp	r3, #32
 8006976:	f040 809f 	bne.w	8006ab8 <USBD_CDC_Setup+0x178>
 800697a:	683b      	ldr	r3, [r7, #0]
 800697c:	88db      	ldrh	r3, [r3, #6]
 800697e:	2b00      	cmp	r3, #0
 8006980:	d02e      	beq.n	80069e0 <USBD_CDC_Setup+0xa0>
 8006982:	683b      	ldr	r3, [r7, #0]
 8006984:	781b      	ldrb	r3, [r3, #0]
 8006986:	b25b      	sxtb	r3, r3
 8006988:	2b00      	cmp	r3, #0
 800698a:	da16      	bge.n	80069ba <USBD_CDC_Setup+0x7a>
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006992:	689b      	ldr	r3, [r3, #8]
 8006994:	683a      	ldr	r2, [r7, #0]
 8006996:	7850      	ldrb	r0, [r2, #1]
 8006998:	6939      	ldr	r1, [r7, #16]
 800699a:	683a      	ldr	r2, [r7, #0]
 800699c:	88d2      	ldrh	r2, [r2, #6]
 800699e:	4798      	blx	r3
 80069a0:	683b      	ldr	r3, [r7, #0]
 80069a2:	88db      	ldrh	r3, [r3, #6]
 80069a4:	2b07      	cmp	r3, #7
 80069a6:	bf28      	it	cs
 80069a8:	2307      	movcs	r3, #7
 80069aa:	81fb      	strh	r3, [r7, #14]
 80069ac:	693b      	ldr	r3, [r7, #16]
 80069ae:	89fa      	ldrh	r2, [r7, #14]
 80069b0:	4619      	mov	r1, r3
 80069b2:	6878      	ldr	r0, [r7, #4]
 80069b4:	f001 fb19 	bl	8007fea <USBD_CtlSendData>
 80069b8:	e085      	b.n	8006ac6 <USBD_CDC_Setup+0x186>
 80069ba:	683b      	ldr	r3, [r7, #0]
 80069bc:	785a      	ldrb	r2, [r3, #1]
 80069be:	693b      	ldr	r3, [r7, #16]
 80069c0:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 80069c4:	683b      	ldr	r3, [r7, #0]
 80069c6:	88db      	ldrh	r3, [r3, #6]
 80069c8:	b2da      	uxtb	r2, r3
 80069ca:	693b      	ldr	r3, [r7, #16]
 80069cc:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 80069d0:	6939      	ldr	r1, [r7, #16]
 80069d2:	683b      	ldr	r3, [r7, #0]
 80069d4:	88db      	ldrh	r3, [r3, #6]
 80069d6:	461a      	mov	r2, r3
 80069d8:	6878      	ldr	r0, [r7, #4]
 80069da:	f001 fb32 	bl	8008042 <USBD_CtlPrepareRx>
 80069de:	e072      	b.n	8006ac6 <USBD_CDC_Setup+0x186>
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 80069e6:	689b      	ldr	r3, [r3, #8]
 80069e8:	683a      	ldr	r2, [r7, #0]
 80069ea:	7850      	ldrb	r0, [r2, #1]
 80069ec:	2200      	movs	r2, #0
 80069ee:	6839      	ldr	r1, [r7, #0]
 80069f0:	4798      	blx	r3
 80069f2:	e068      	b.n	8006ac6 <USBD_CDC_Setup+0x186>
 80069f4:	683b      	ldr	r3, [r7, #0]
 80069f6:	785b      	ldrb	r3, [r3, #1]
 80069f8:	2b0b      	cmp	r3, #11
 80069fa:	d852      	bhi.n	8006aa2 <USBD_CDC_Setup+0x162>
 80069fc:	a201      	add	r2, pc, #4	; (adr r2, 8006a04 <USBD_CDC_Setup+0xc4>)
 80069fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006a02:	bf00      	nop
 8006a04:	08006a35 	.word	0x08006a35
 8006a08:	08006ab1 	.word	0x08006ab1
 8006a0c:	08006aa3 	.word	0x08006aa3
 8006a10:	08006aa3 	.word	0x08006aa3
 8006a14:	08006aa3 	.word	0x08006aa3
 8006a18:	08006aa3 	.word	0x08006aa3
 8006a1c:	08006aa3 	.word	0x08006aa3
 8006a20:	08006aa3 	.word	0x08006aa3
 8006a24:	08006aa3 	.word	0x08006aa3
 8006a28:	08006aa3 	.word	0x08006aa3
 8006a2c:	08006a5f 	.word	0x08006a5f
 8006a30:	08006a89 	.word	0x08006a89
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006a3a:	b2db      	uxtb	r3, r3
 8006a3c:	2b03      	cmp	r3, #3
 8006a3e:	d107      	bne.n	8006a50 <USBD_CDC_Setup+0x110>
 8006a40:	f107 030a 	add.w	r3, r7, #10
 8006a44:	2202      	movs	r2, #2
 8006a46:	4619      	mov	r1, r3
 8006a48:	6878      	ldr	r0, [r7, #4]
 8006a4a:	f001 face 	bl	8007fea <USBD_CtlSendData>
 8006a4e:	e032      	b.n	8006ab6 <USBD_CDC_Setup+0x176>
 8006a50:	6839      	ldr	r1, [r7, #0]
 8006a52:	6878      	ldr	r0, [r7, #4]
 8006a54:	f001 fa58 	bl	8007f08 <USBD_CtlError>
 8006a58:	2303      	movs	r3, #3
 8006a5a:	75fb      	strb	r3, [r7, #23]
 8006a5c:	e02b      	b.n	8006ab6 <USBD_CDC_Setup+0x176>
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006a64:	b2db      	uxtb	r3, r3
 8006a66:	2b03      	cmp	r3, #3
 8006a68:	d107      	bne.n	8006a7a <USBD_CDC_Setup+0x13a>
 8006a6a:	f107 030d 	add.w	r3, r7, #13
 8006a6e:	2201      	movs	r2, #1
 8006a70:	4619      	mov	r1, r3
 8006a72:	6878      	ldr	r0, [r7, #4]
 8006a74:	f001 fab9 	bl	8007fea <USBD_CtlSendData>
 8006a78:	e01d      	b.n	8006ab6 <USBD_CDC_Setup+0x176>
 8006a7a:	6839      	ldr	r1, [r7, #0]
 8006a7c:	6878      	ldr	r0, [r7, #4]
 8006a7e:	f001 fa43 	bl	8007f08 <USBD_CtlError>
 8006a82:	2303      	movs	r3, #3
 8006a84:	75fb      	strb	r3, [r7, #23]
 8006a86:	e016      	b.n	8006ab6 <USBD_CDC_Setup+0x176>
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006a8e:	b2db      	uxtb	r3, r3
 8006a90:	2b03      	cmp	r3, #3
 8006a92:	d00f      	beq.n	8006ab4 <USBD_CDC_Setup+0x174>
 8006a94:	6839      	ldr	r1, [r7, #0]
 8006a96:	6878      	ldr	r0, [r7, #4]
 8006a98:	f001 fa36 	bl	8007f08 <USBD_CtlError>
 8006a9c:	2303      	movs	r3, #3
 8006a9e:	75fb      	strb	r3, [r7, #23]
 8006aa0:	e008      	b.n	8006ab4 <USBD_CDC_Setup+0x174>
 8006aa2:	6839      	ldr	r1, [r7, #0]
 8006aa4:	6878      	ldr	r0, [r7, #4]
 8006aa6:	f001 fa2f 	bl	8007f08 <USBD_CtlError>
 8006aaa:	2303      	movs	r3, #3
 8006aac:	75fb      	strb	r3, [r7, #23]
 8006aae:	e002      	b.n	8006ab6 <USBD_CDC_Setup+0x176>
 8006ab0:	bf00      	nop
 8006ab2:	e008      	b.n	8006ac6 <USBD_CDC_Setup+0x186>
 8006ab4:	bf00      	nop
 8006ab6:	e006      	b.n	8006ac6 <USBD_CDC_Setup+0x186>
 8006ab8:	6839      	ldr	r1, [r7, #0]
 8006aba:	6878      	ldr	r0, [r7, #4]
 8006abc:	f001 fa24 	bl	8007f08 <USBD_CtlError>
 8006ac0:	2303      	movs	r3, #3
 8006ac2:	75fb      	strb	r3, [r7, #23]
 8006ac4:	bf00      	nop
 8006ac6:	7dfb      	ldrb	r3, [r7, #23]
 8006ac8:	4618      	mov	r0, r3
 8006aca:	3718      	adds	r7, #24
 8006acc:	46bd      	mov	sp, r7
 8006ace:	bd80      	pop	{r7, pc}

08006ad0 <USBD_CDC_DataIn>:
 8006ad0:	b580      	push	{r7, lr}
 8006ad2:	b084      	sub	sp, #16
 8006ad4:	af00      	add	r7, sp, #0
 8006ad6:	6078      	str	r0, [r7, #4]
 8006ad8:	460b      	mov	r3, r1
 8006ada:	70fb      	strb	r3, [r7, #3]
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8006ae2:	60fb      	str	r3, [r7, #12]
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006aea:	2b00      	cmp	r3, #0
 8006aec:	d101      	bne.n	8006af2 <USBD_CDC_DataIn+0x22>
 8006aee:	2303      	movs	r3, #3
 8006af0:	e04f      	b.n	8006b92 <USBD_CDC_DataIn+0xc2>
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006af8:	60bb      	str	r3, [r7, #8]
 8006afa:	78fa      	ldrb	r2, [r7, #3]
 8006afc:	6879      	ldr	r1, [r7, #4]
 8006afe:	4613      	mov	r3, r2
 8006b00:	009b      	lsls	r3, r3, #2
 8006b02:	4413      	add	r3, r2
 8006b04:	009b      	lsls	r3, r3, #2
 8006b06:	440b      	add	r3, r1
 8006b08:	3318      	adds	r3, #24
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	d029      	beq.n	8006b64 <USBD_CDC_DataIn+0x94>
 8006b10:	78fa      	ldrb	r2, [r7, #3]
 8006b12:	6879      	ldr	r1, [r7, #4]
 8006b14:	4613      	mov	r3, r2
 8006b16:	009b      	lsls	r3, r3, #2
 8006b18:	4413      	add	r3, r2
 8006b1a:	009b      	lsls	r3, r3, #2
 8006b1c:	440b      	add	r3, r1
 8006b1e:	3318      	adds	r3, #24
 8006b20:	681a      	ldr	r2, [r3, #0]
 8006b22:	78f9      	ldrb	r1, [r7, #3]
 8006b24:	68f8      	ldr	r0, [r7, #12]
 8006b26:	460b      	mov	r3, r1
 8006b28:	00db      	lsls	r3, r3, #3
 8006b2a:	1a5b      	subs	r3, r3, r1
 8006b2c:	009b      	lsls	r3, r3, #2
 8006b2e:	4403      	add	r3, r0
 8006b30:	3344      	adds	r3, #68	; 0x44
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	fbb2 f1f3 	udiv	r1, r2, r3
 8006b38:	fb03 f301 	mul.w	r3, r3, r1
 8006b3c:	1ad3      	subs	r3, r2, r3
 8006b3e:	2b00      	cmp	r3, #0
 8006b40:	d110      	bne.n	8006b64 <USBD_CDC_DataIn+0x94>
 8006b42:	78fa      	ldrb	r2, [r7, #3]
 8006b44:	6879      	ldr	r1, [r7, #4]
 8006b46:	4613      	mov	r3, r2
 8006b48:	009b      	lsls	r3, r3, #2
 8006b4a:	4413      	add	r3, r2
 8006b4c:	009b      	lsls	r3, r3, #2
 8006b4e:	440b      	add	r3, r1
 8006b50:	3318      	adds	r3, #24
 8006b52:	2200      	movs	r2, #0
 8006b54:	601a      	str	r2, [r3, #0]
 8006b56:	78f9      	ldrb	r1, [r7, #3]
 8006b58:	2300      	movs	r3, #0
 8006b5a:	2200      	movs	r2, #0
 8006b5c:	6878      	ldr	r0, [r7, #4]
 8006b5e:	f001 ff54 	bl	8008a0a <USBD_LL_Transmit>
 8006b62:	e015      	b.n	8006b90 <USBD_CDC_DataIn+0xc0>
 8006b64:	68bb      	ldr	r3, [r7, #8]
 8006b66:	2200      	movs	r2, #0
 8006b68:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006b72:	691b      	ldr	r3, [r3, #16]
 8006b74:	2b00      	cmp	r3, #0
 8006b76:	d00b      	beq.n	8006b90 <USBD_CDC_DataIn+0xc0>
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006b7e:	691b      	ldr	r3, [r3, #16]
 8006b80:	68ba      	ldr	r2, [r7, #8]
 8006b82:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 8006b86:	68ba      	ldr	r2, [r7, #8]
 8006b88:	f502 7104 	add.w	r1, r2, #528	; 0x210
 8006b8c:	78fa      	ldrb	r2, [r7, #3]
 8006b8e:	4798      	blx	r3
 8006b90:	2300      	movs	r3, #0
 8006b92:	4618      	mov	r0, r3
 8006b94:	3710      	adds	r7, #16
 8006b96:	46bd      	mov	sp, r7
 8006b98:	bd80      	pop	{r7, pc}

08006b9a <USBD_CDC_DataOut>:
 8006b9a:	b580      	push	{r7, lr}
 8006b9c:	b084      	sub	sp, #16
 8006b9e:	af00      	add	r7, sp, #0
 8006ba0:	6078      	str	r0, [r7, #4]
 8006ba2:	460b      	mov	r3, r1
 8006ba4:	70fb      	strb	r3, [r7, #3]
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006bac:	60fb      	str	r3, [r7, #12]
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	d101      	bne.n	8006bbc <USBD_CDC_DataOut+0x22>
 8006bb8:	2303      	movs	r3, #3
 8006bba:	e015      	b.n	8006be8 <USBD_CDC_DataOut+0x4e>
 8006bbc:	78fb      	ldrb	r3, [r7, #3]
 8006bbe:	4619      	mov	r1, r3
 8006bc0:	6878      	ldr	r0, [r7, #4]
 8006bc2:	f001 ff64 	bl	8008a8e <USBD_LL_GetRxDataSize>
 8006bc6:	4602      	mov	r2, r0
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006bd4:	68db      	ldr	r3, [r3, #12]
 8006bd6:	68fa      	ldr	r2, [r7, #12]
 8006bd8:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 8006bdc:	68fa      	ldr	r2, [r7, #12]
 8006bde:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 8006be2:	4611      	mov	r1, r2
 8006be4:	4798      	blx	r3
 8006be6:	2300      	movs	r3, #0
 8006be8:	4618      	mov	r0, r3
 8006bea:	3710      	adds	r7, #16
 8006bec:	46bd      	mov	sp, r7
 8006bee:	bd80      	pop	{r7, pc}

08006bf0 <USBD_CDC_EP0_RxReady>:
 8006bf0:	b580      	push	{r7, lr}
 8006bf2:	b084      	sub	sp, #16
 8006bf4:	af00      	add	r7, sp, #0
 8006bf6:	6078      	str	r0, [r7, #4]
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006bfe:	60fb      	str	r3, [r7, #12]
 8006c00:	68fb      	ldr	r3, [r7, #12]
 8006c02:	2b00      	cmp	r3, #0
 8006c04:	d101      	bne.n	8006c0a <USBD_CDC_EP0_RxReady+0x1a>
 8006c06:	2303      	movs	r3, #3
 8006c08:	e01b      	b.n	8006c42 <USBD_CDC_EP0_RxReady+0x52>
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006c10:	2b00      	cmp	r3, #0
 8006c12:	d015      	beq.n	8006c40 <USBD_CDC_EP0_RxReady+0x50>
 8006c14:	68fb      	ldr	r3, [r7, #12]
 8006c16:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 8006c1a:	2bff      	cmp	r3, #255	; 0xff
 8006c1c:	d010      	beq.n	8006c40 <USBD_CDC_EP0_RxReady+0x50>
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8006c24:	689b      	ldr	r3, [r3, #8]
 8006c26:	68fa      	ldr	r2, [r7, #12]
 8006c28:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
 8006c2c:	68f9      	ldr	r1, [r7, #12]
 8006c2e:	68fa      	ldr	r2, [r7, #12]
 8006c30:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
 8006c34:	b292      	uxth	r2, r2
 8006c36:	4798      	blx	r3
 8006c38:	68fb      	ldr	r3, [r7, #12]
 8006c3a:	22ff      	movs	r2, #255	; 0xff
 8006c3c:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 8006c40:	2300      	movs	r3, #0
 8006c42:	4618      	mov	r0, r3
 8006c44:	3710      	adds	r7, #16
 8006c46:	46bd      	mov	sp, r7
 8006c48:	bd80      	pop	{r7, pc}
	...

08006c4c <USBD_CDC_GetFSCfgDesc>:
 8006c4c:	b480      	push	{r7}
 8006c4e:	b083      	sub	sp, #12
 8006c50:	af00      	add	r7, sp, #0
 8006c52:	6078      	str	r0, [r7, #4]
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	2243      	movs	r2, #67	; 0x43
 8006c58:	801a      	strh	r2, [r3, #0]
 8006c5a:	4b03      	ldr	r3, [pc, #12]	; (8006c68 <USBD_CDC_GetFSCfgDesc+0x1c>)
 8006c5c:	4618      	mov	r0, r3
 8006c5e:	370c      	adds	r7, #12
 8006c60:	46bd      	mov	sp, r7
 8006c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c66:	4770      	bx	lr
 8006c68:	20000094 	.word	0x20000094

08006c6c <USBD_CDC_GetHSCfgDesc>:
 8006c6c:	b480      	push	{r7}
 8006c6e:	b083      	sub	sp, #12
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	6078      	str	r0, [r7, #4]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	2243      	movs	r2, #67	; 0x43
 8006c78:	801a      	strh	r2, [r3, #0]
 8006c7a:	4b03      	ldr	r3, [pc, #12]	; (8006c88 <USBD_CDC_GetHSCfgDesc+0x1c>)
 8006c7c:	4618      	mov	r0, r3
 8006c7e:	370c      	adds	r7, #12
 8006c80:	46bd      	mov	sp, r7
 8006c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c86:	4770      	bx	lr
 8006c88:	20000050 	.word	0x20000050

08006c8c <USBD_CDC_GetOtherSpeedCfgDesc>:
 8006c8c:	b480      	push	{r7}
 8006c8e:	b083      	sub	sp, #12
 8006c90:	af00      	add	r7, sp, #0
 8006c92:	6078      	str	r0, [r7, #4]
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	2243      	movs	r2, #67	; 0x43
 8006c98:	801a      	strh	r2, [r3, #0]
 8006c9a:	4b03      	ldr	r3, [pc, #12]	; (8006ca8 <USBD_CDC_GetOtherSpeedCfgDesc+0x1c>)
 8006c9c:	4618      	mov	r0, r3
 8006c9e:	370c      	adds	r7, #12
 8006ca0:	46bd      	mov	sp, r7
 8006ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ca6:	4770      	bx	lr
 8006ca8:	200000d8 	.word	0x200000d8

08006cac <USBD_CDC_GetDeviceQualifierDescriptor>:
 8006cac:	b480      	push	{r7}
 8006cae:	b083      	sub	sp, #12
 8006cb0:	af00      	add	r7, sp, #0
 8006cb2:	6078      	str	r0, [r7, #4]
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	220a      	movs	r2, #10
 8006cb8:	801a      	strh	r2, [r3, #0]
 8006cba:	4b03      	ldr	r3, [pc, #12]	; (8006cc8 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8006cbc:	4618      	mov	r0, r3
 8006cbe:	370c      	adds	r7, #12
 8006cc0:	46bd      	mov	sp, r7
 8006cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc6:	4770      	bx	lr
 8006cc8:	2000000c 	.word	0x2000000c

08006ccc <USBD_CDC_RegisterInterface>:
 8006ccc:	b480      	push	{r7}
 8006cce:	b083      	sub	sp, #12
 8006cd0:	af00      	add	r7, sp, #0
 8006cd2:	6078      	str	r0, [r7, #4]
 8006cd4:	6039      	str	r1, [r7, #0]
 8006cd6:	683b      	ldr	r3, [r7, #0]
 8006cd8:	2b00      	cmp	r3, #0
 8006cda:	d101      	bne.n	8006ce0 <USBD_CDC_RegisterInterface+0x14>
 8006cdc:	2303      	movs	r3, #3
 8006cde:	e004      	b.n	8006cea <USBD_CDC_RegisterInterface+0x1e>
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	683a      	ldr	r2, [r7, #0]
 8006ce4:	f8c3 22c0 	str.w	r2, [r3, #704]	; 0x2c0
 8006ce8:	2300      	movs	r3, #0
 8006cea:	4618      	mov	r0, r3
 8006cec:	370c      	adds	r7, #12
 8006cee:	46bd      	mov	sp, r7
 8006cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cf4:	4770      	bx	lr

08006cf6 <USBD_CDC_SetTxBuffer>:
 8006cf6:	b480      	push	{r7}
 8006cf8:	b087      	sub	sp, #28
 8006cfa:	af00      	add	r7, sp, #0
 8006cfc:	60f8      	str	r0, [r7, #12]
 8006cfe:	60b9      	str	r1, [r7, #8]
 8006d00:	607a      	str	r2, [r7, #4]
 8006d02:	68fb      	ldr	r3, [r7, #12]
 8006d04:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006d08:	617b      	str	r3, [r7, #20]
 8006d0a:	697b      	ldr	r3, [r7, #20]
 8006d0c:	2b00      	cmp	r3, #0
 8006d0e:	d101      	bne.n	8006d14 <USBD_CDC_SetTxBuffer+0x1e>
 8006d10:	2303      	movs	r3, #3
 8006d12:	e008      	b.n	8006d26 <USBD_CDC_SetTxBuffer+0x30>
 8006d14:	697b      	ldr	r3, [r7, #20]
 8006d16:	68ba      	ldr	r2, [r7, #8]
 8006d18:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8006d1c:	697b      	ldr	r3, [r7, #20]
 8006d1e:	687a      	ldr	r2, [r7, #4]
 8006d20:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8006d24:	2300      	movs	r3, #0
 8006d26:	4618      	mov	r0, r3
 8006d28:	371c      	adds	r7, #28
 8006d2a:	46bd      	mov	sp, r7
 8006d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d30:	4770      	bx	lr

08006d32 <USBD_CDC_SetRxBuffer>:
 8006d32:	b480      	push	{r7}
 8006d34:	b085      	sub	sp, #20
 8006d36:	af00      	add	r7, sp, #0
 8006d38:	6078      	str	r0, [r7, #4]
 8006d3a:	6039      	str	r1, [r7, #0]
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006d42:	60fb      	str	r3, [r7, #12]
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d101      	bne.n	8006d4e <USBD_CDC_SetRxBuffer+0x1c>
 8006d4a:	2303      	movs	r3, #3
 8006d4c:	e004      	b.n	8006d58 <USBD_CDC_SetRxBuffer+0x26>
 8006d4e:	68fb      	ldr	r3, [r7, #12]
 8006d50:	683a      	ldr	r2, [r7, #0]
 8006d52:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8006d56:	2300      	movs	r3, #0
 8006d58:	4618      	mov	r0, r3
 8006d5a:	3714      	adds	r7, #20
 8006d5c:	46bd      	mov	sp, r7
 8006d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d62:	4770      	bx	lr

08006d64 <USBD_CDC_TransmitPacket>:
 8006d64:	b580      	push	{r7, lr}
 8006d66:	b084      	sub	sp, #16
 8006d68:	af00      	add	r7, sp, #0
 8006d6a:	6078      	str	r0, [r7, #4]
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006d72:	60bb      	str	r3, [r7, #8]
 8006d74:	2301      	movs	r3, #1
 8006d76:	73fb      	strb	r3, [r7, #15]
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d101      	bne.n	8006d86 <USBD_CDC_TransmitPacket+0x22>
 8006d82:	2303      	movs	r3, #3
 8006d84:	e01a      	b.n	8006dbc <USBD_CDC_TransmitPacket+0x58>
 8006d86:	68bb      	ldr	r3, [r7, #8]
 8006d88:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 8006d8c:	2b00      	cmp	r3, #0
 8006d8e:	d114      	bne.n	8006dba <USBD_CDC_TransmitPacket+0x56>
 8006d90:	68bb      	ldr	r3, [r7, #8]
 8006d92:	2201      	movs	r2, #1
 8006d94:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8006d98:	68bb      	ldr	r3, [r7, #8]
 8006d9a:	f8d3 2210 	ldr.w	r2, [r3, #528]	; 0x210
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	62da      	str	r2, [r3, #44]	; 0x2c
 8006da2:	68bb      	ldr	r3, [r7, #8]
 8006da4:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 8006da8:	68bb      	ldr	r3, [r7, #8]
 8006daa:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8006dae:	2181      	movs	r1, #129	; 0x81
 8006db0:	6878      	ldr	r0, [r7, #4]
 8006db2:	f001 fe2a 	bl	8008a0a <USBD_LL_Transmit>
 8006db6:	2300      	movs	r3, #0
 8006db8:	73fb      	strb	r3, [r7, #15]
 8006dba:	7bfb      	ldrb	r3, [r7, #15]
 8006dbc:	4618      	mov	r0, r3
 8006dbe:	3710      	adds	r7, #16
 8006dc0:	46bd      	mov	sp, r7
 8006dc2:	bd80      	pop	{r7, pc}

08006dc4 <USBD_CDC_ReceivePacket>:
 8006dc4:	b580      	push	{r7, lr}
 8006dc6:	b084      	sub	sp, #16
 8006dc8:	af00      	add	r7, sp, #0
 8006dca:	6078      	str	r0, [r7, #4]
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006dd2:	60fb      	str	r3, [r7, #12]
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	d101      	bne.n	8006de2 <USBD_CDC_ReceivePacket+0x1e>
 8006dde:	2303      	movs	r3, #3
 8006de0:	e016      	b.n	8006e10 <USBD_CDC_ReceivePacket+0x4c>
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	7c1b      	ldrb	r3, [r3, #16]
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	d109      	bne.n	8006dfe <USBD_CDC_ReceivePacket+0x3a>
 8006dea:	68fb      	ldr	r3, [r7, #12]
 8006dec:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8006df0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006df4:	2101      	movs	r1, #1
 8006df6:	6878      	ldr	r0, [r7, #4]
 8006df8:	f001 fe28 	bl	8008a4c <USBD_LL_PrepareReceive>
 8006dfc:	e007      	b.n	8006e0e <USBD_CDC_ReceivePacket+0x4a>
 8006dfe:	68fb      	ldr	r3, [r7, #12]
 8006e00:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8006e04:	2340      	movs	r3, #64	; 0x40
 8006e06:	2101      	movs	r1, #1
 8006e08:	6878      	ldr	r0, [r7, #4]
 8006e0a:	f001 fe1f 	bl	8008a4c <USBD_LL_PrepareReceive>
 8006e0e:	2300      	movs	r3, #0
 8006e10:	4618      	mov	r0, r3
 8006e12:	3710      	adds	r7, #16
 8006e14:	46bd      	mov	sp, r7
 8006e16:	bd80      	pop	{r7, pc}

08006e18 <USBD_Init>:
 8006e18:	b580      	push	{r7, lr}
 8006e1a:	b086      	sub	sp, #24
 8006e1c:	af00      	add	r7, sp, #0
 8006e1e:	60f8      	str	r0, [r7, #12]
 8006e20:	60b9      	str	r1, [r7, #8]
 8006e22:	4613      	mov	r3, r2
 8006e24:	71fb      	strb	r3, [r7, #7]
 8006e26:	68fb      	ldr	r3, [r7, #12]
 8006e28:	2b00      	cmp	r3, #0
 8006e2a:	d101      	bne.n	8006e30 <USBD_Init+0x18>
 8006e2c:	2303      	movs	r3, #3
 8006e2e:	e01f      	b.n	8006e70 <USBD_Init+0x58>
 8006e30:	68fb      	ldr	r3, [r7, #12]
 8006e32:	2200      	movs	r2, #0
 8006e34:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 8006e38:	68fb      	ldr	r3, [r7, #12]
 8006e3a:	2200      	movs	r2, #0
 8006e3c:	f8c3 22c0 	str.w	r2, [r3, #704]	; 0x2c0
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	2200      	movs	r2, #0
 8006e44:	f8c3 22cc 	str.w	r2, [r3, #716]	; 0x2cc
 8006e48:	68bb      	ldr	r3, [r7, #8]
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d003      	beq.n	8006e56 <USBD_Init+0x3e>
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	68ba      	ldr	r2, [r7, #8]
 8006e52:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
 8006e56:	68fb      	ldr	r3, [r7, #12]
 8006e58:	2201      	movs	r2, #1
 8006e5a:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8006e5e:	68fb      	ldr	r3, [r7, #12]
 8006e60:	79fa      	ldrb	r2, [r7, #7]
 8006e62:	701a      	strb	r2, [r3, #0]
 8006e64:	68f8      	ldr	r0, [r7, #12]
 8006e66:	f001 fc9b 	bl	80087a0 <USBD_LL_Init>
 8006e6a:	4603      	mov	r3, r0
 8006e6c:	75fb      	strb	r3, [r7, #23]
 8006e6e:	7dfb      	ldrb	r3, [r7, #23]
 8006e70:	4618      	mov	r0, r3
 8006e72:	3718      	adds	r7, #24
 8006e74:	46bd      	mov	sp, r7
 8006e76:	bd80      	pop	{r7, pc}

08006e78 <USBD_RegisterClass>:
 8006e78:	b580      	push	{r7, lr}
 8006e7a:	b084      	sub	sp, #16
 8006e7c:	af00      	add	r7, sp, #0
 8006e7e:	6078      	str	r0, [r7, #4]
 8006e80:	6039      	str	r1, [r7, #0]
 8006e82:	2300      	movs	r3, #0
 8006e84:	81fb      	strh	r3, [r7, #14]
 8006e86:	683b      	ldr	r3, [r7, #0]
 8006e88:	2b00      	cmp	r3, #0
 8006e8a:	d101      	bne.n	8006e90 <USBD_RegisterClass+0x18>
 8006e8c:	2303      	movs	r3, #3
 8006e8e:	e016      	b.n	8006ebe <USBD_RegisterClass+0x46>
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	683a      	ldr	r2, [r7, #0]
 8006e94:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006e9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ea0:	2b00      	cmp	r3, #0
 8006ea2:	d00b      	beq.n	8006ebc <USBD_RegisterClass+0x44>
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006eaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006eac:	f107 020e 	add.w	r2, r7, #14
 8006eb0:	4610      	mov	r0, r2
 8006eb2:	4798      	blx	r3
 8006eb4:	4602      	mov	r2, r0
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	f8c3 22cc 	str.w	r2, [r3, #716]	; 0x2cc
 8006ebc:	2300      	movs	r3, #0
 8006ebe:	4618      	mov	r0, r3
 8006ec0:	3710      	adds	r7, #16
 8006ec2:	46bd      	mov	sp, r7
 8006ec4:	bd80      	pop	{r7, pc}

08006ec6 <USBD_Start>:
 8006ec6:	b580      	push	{r7, lr}
 8006ec8:	b082      	sub	sp, #8
 8006eca:	af00      	add	r7, sp, #0
 8006ecc:	6078      	str	r0, [r7, #4]
 8006ece:	6878      	ldr	r0, [r7, #4]
 8006ed0:	f001 fcb2 	bl	8008838 <USBD_LL_Start>
 8006ed4:	4603      	mov	r3, r0
 8006ed6:	4618      	mov	r0, r3
 8006ed8:	3708      	adds	r7, #8
 8006eda:	46bd      	mov	sp, r7
 8006edc:	bd80      	pop	{r7, pc}

08006ede <USBD_RunTestMode>:
 8006ede:	b480      	push	{r7}
 8006ee0:	b083      	sub	sp, #12
 8006ee2:	af00      	add	r7, sp, #0
 8006ee4:	6078      	str	r0, [r7, #4]
 8006ee6:	2300      	movs	r3, #0
 8006ee8:	4618      	mov	r0, r3
 8006eea:	370c      	adds	r7, #12
 8006eec:	46bd      	mov	sp, r7
 8006eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef2:	4770      	bx	lr

08006ef4 <USBD_SetClassConfig>:
 8006ef4:	b580      	push	{r7, lr}
 8006ef6:	b084      	sub	sp, #16
 8006ef8:	af00      	add	r7, sp, #0
 8006efa:	6078      	str	r0, [r7, #4]
 8006efc:	460b      	mov	r3, r1
 8006efe:	70fb      	strb	r3, [r7, #3]
 8006f00:	2303      	movs	r3, #3
 8006f02:	73fb      	strb	r3, [r7, #15]
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006f0a:	2b00      	cmp	r3, #0
 8006f0c:	d009      	beq.n	8006f22 <USBD_SetClassConfig+0x2e>
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	78fa      	ldrb	r2, [r7, #3]
 8006f18:	4611      	mov	r1, r2
 8006f1a:	6878      	ldr	r0, [r7, #4]
 8006f1c:	4798      	blx	r3
 8006f1e:	4603      	mov	r3, r0
 8006f20:	73fb      	strb	r3, [r7, #15]
 8006f22:	7bfb      	ldrb	r3, [r7, #15]
 8006f24:	4618      	mov	r0, r3
 8006f26:	3710      	adds	r7, #16
 8006f28:	46bd      	mov	sp, r7
 8006f2a:	bd80      	pop	{r7, pc}

08006f2c <USBD_ClrClassConfig>:
 8006f2c:	b580      	push	{r7, lr}
 8006f2e:	b082      	sub	sp, #8
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	6078      	str	r0, [r7, #4]
 8006f34:	460b      	mov	r3, r1
 8006f36:	70fb      	strb	r3, [r7, #3]
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006f3e:	2b00      	cmp	r3, #0
 8006f40:	d007      	beq.n	8006f52 <USBD_ClrClassConfig+0x26>
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006f48:	685b      	ldr	r3, [r3, #4]
 8006f4a:	78fa      	ldrb	r2, [r7, #3]
 8006f4c:	4611      	mov	r1, r2
 8006f4e:	6878      	ldr	r0, [r7, #4]
 8006f50:	4798      	blx	r3
 8006f52:	2300      	movs	r3, #0
 8006f54:	4618      	mov	r0, r3
 8006f56:	3708      	adds	r7, #8
 8006f58:	46bd      	mov	sp, r7
 8006f5a:	bd80      	pop	{r7, pc}

08006f5c <USBD_LL_SetupStage>:
 8006f5c:	b580      	push	{r7, lr}
 8006f5e:	b084      	sub	sp, #16
 8006f60:	af00      	add	r7, sp, #0
 8006f62:	6078      	str	r0, [r7, #4]
 8006f64:	6039      	str	r1, [r7, #0]
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8006f6c:	6839      	ldr	r1, [r7, #0]
 8006f6e:	4618      	mov	r0, r3
 8006f70:	f000 ff90 	bl	8007e94 <USBD_ParseSetupRequest>
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	2201      	movs	r2, #1
 8006f78:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 8006f82:	461a      	mov	r2, r3
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 8006f90:	f003 031f 	and.w	r3, r3, #31
 8006f94:	2b02      	cmp	r3, #2
 8006f96:	d01a      	beq.n	8006fce <USBD_LL_SetupStage+0x72>
 8006f98:	2b02      	cmp	r3, #2
 8006f9a:	d822      	bhi.n	8006fe2 <USBD_LL_SetupStage+0x86>
 8006f9c:	2b00      	cmp	r3, #0
 8006f9e:	d002      	beq.n	8006fa6 <USBD_LL_SetupStage+0x4a>
 8006fa0:	2b01      	cmp	r3, #1
 8006fa2:	d00a      	beq.n	8006fba <USBD_LL_SetupStage+0x5e>
 8006fa4:	e01d      	b.n	8006fe2 <USBD_LL_SetupStage+0x86>
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8006fac:	4619      	mov	r1, r3
 8006fae:	6878      	ldr	r0, [r7, #4]
 8006fb0:	f000 fa62 	bl	8007478 <USBD_StdDevReq>
 8006fb4:	4603      	mov	r3, r0
 8006fb6:	73fb      	strb	r3, [r7, #15]
 8006fb8:	e020      	b.n	8006ffc <USBD_LL_SetupStage+0xa0>
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8006fc0:	4619      	mov	r1, r3
 8006fc2:	6878      	ldr	r0, [r7, #4]
 8006fc4:	f000 fac6 	bl	8007554 <USBD_StdItfReq>
 8006fc8:	4603      	mov	r3, r0
 8006fca:	73fb      	strb	r3, [r7, #15]
 8006fcc:	e016      	b.n	8006ffc <USBD_LL_SetupStage+0xa0>
 8006fce:	687b      	ldr	r3, [r7, #4]
 8006fd0:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8006fd4:	4619      	mov	r1, r3
 8006fd6:	6878      	ldr	r0, [r7, #4]
 8006fd8:	f000 fb05 	bl	80075e6 <USBD_StdEPReq>
 8006fdc:	4603      	mov	r3, r0
 8006fde:	73fb      	strb	r3, [r7, #15]
 8006fe0:	e00c      	b.n	8006ffc <USBD_LL_SetupStage+0xa0>
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 8006fe8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8006fec:	b2db      	uxtb	r3, r3
 8006fee:	4619      	mov	r1, r3
 8006ff0:	6878      	ldr	r0, [r7, #4]
 8006ff2:	f001 fc81 	bl	80088f8 <USBD_LL_StallEP>
 8006ff6:	4603      	mov	r3, r0
 8006ff8:	73fb      	strb	r3, [r7, #15]
 8006ffa:	bf00      	nop
 8006ffc:	7bfb      	ldrb	r3, [r7, #15]
 8006ffe:	4618      	mov	r0, r3
 8007000:	3710      	adds	r7, #16
 8007002:	46bd      	mov	sp, r7
 8007004:	bd80      	pop	{r7, pc}

08007006 <USBD_LL_DataOutStage>:
 8007006:	b580      	push	{r7, lr}
 8007008:	b086      	sub	sp, #24
 800700a:	af00      	add	r7, sp, #0
 800700c:	60f8      	str	r0, [r7, #12]
 800700e:	460b      	mov	r3, r1
 8007010:	607a      	str	r2, [r7, #4]
 8007012:	72fb      	strb	r3, [r7, #11]
 8007014:	7afb      	ldrb	r3, [r7, #11]
 8007016:	2b00      	cmp	r3, #0
 8007018:	d138      	bne.n	800708c <USBD_LL_DataOutStage+0x86>
 800701a:	68fb      	ldr	r3, [r7, #12]
 800701c:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 8007020:	613b      	str	r3, [r7, #16]
 8007022:	68fb      	ldr	r3, [r7, #12]
 8007024:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 8007028:	2b03      	cmp	r3, #3
 800702a:	d14a      	bne.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 800702c:	693b      	ldr	r3, [r7, #16]
 800702e:	689a      	ldr	r2, [r3, #8]
 8007030:	693b      	ldr	r3, [r7, #16]
 8007032:	68db      	ldr	r3, [r3, #12]
 8007034:	429a      	cmp	r2, r3
 8007036:	d913      	bls.n	8007060 <USBD_LL_DataOutStage+0x5a>
 8007038:	693b      	ldr	r3, [r7, #16]
 800703a:	689a      	ldr	r2, [r3, #8]
 800703c:	693b      	ldr	r3, [r7, #16]
 800703e:	68db      	ldr	r3, [r3, #12]
 8007040:	1ad2      	subs	r2, r2, r3
 8007042:	693b      	ldr	r3, [r7, #16]
 8007044:	609a      	str	r2, [r3, #8]
 8007046:	693b      	ldr	r3, [r7, #16]
 8007048:	68da      	ldr	r2, [r3, #12]
 800704a:	693b      	ldr	r3, [r7, #16]
 800704c:	689b      	ldr	r3, [r3, #8]
 800704e:	4293      	cmp	r3, r2
 8007050:	bf28      	it	cs
 8007052:	4613      	movcs	r3, r2
 8007054:	461a      	mov	r2, r3
 8007056:	6879      	ldr	r1, [r7, #4]
 8007058:	68f8      	ldr	r0, [r7, #12]
 800705a:	f001 f80f 	bl	800807c <USBD_CtlContinueRx>
 800705e:	e030      	b.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007066:	b2db      	uxtb	r3, r3
 8007068:	2b03      	cmp	r3, #3
 800706a:	d10b      	bne.n	8007084 <USBD_LL_DataOutStage+0x7e>
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007072:	691b      	ldr	r3, [r3, #16]
 8007074:	2b00      	cmp	r3, #0
 8007076:	d005      	beq.n	8007084 <USBD_LL_DataOutStage+0x7e>
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800707e:	691b      	ldr	r3, [r3, #16]
 8007080:	68f8      	ldr	r0, [r7, #12]
 8007082:	4798      	blx	r3
 8007084:	68f8      	ldr	r0, [r7, #12]
 8007086:	f001 f80a 	bl	800809e <USBD_CtlSendStatus>
 800708a:	e01a      	b.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 800708c:	68fb      	ldr	r3, [r7, #12]
 800708e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007092:	b2db      	uxtb	r3, r3
 8007094:	2b03      	cmp	r3, #3
 8007096:	d114      	bne.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 8007098:	68fb      	ldr	r3, [r7, #12]
 800709a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800709e:	699b      	ldr	r3, [r3, #24]
 80070a0:	2b00      	cmp	r3, #0
 80070a2:	d00e      	beq.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80070aa:	699b      	ldr	r3, [r3, #24]
 80070ac:	7afa      	ldrb	r2, [r7, #11]
 80070ae:	4611      	mov	r1, r2
 80070b0:	68f8      	ldr	r0, [r7, #12]
 80070b2:	4798      	blx	r3
 80070b4:	4603      	mov	r3, r0
 80070b6:	75fb      	strb	r3, [r7, #23]
 80070b8:	7dfb      	ldrb	r3, [r7, #23]
 80070ba:	2b00      	cmp	r3, #0
 80070bc:	d001      	beq.n	80070c2 <USBD_LL_DataOutStage+0xbc>
 80070be:	7dfb      	ldrb	r3, [r7, #23]
 80070c0:	e000      	b.n	80070c4 <USBD_LL_DataOutStage+0xbe>
 80070c2:	2300      	movs	r3, #0
 80070c4:	4618      	mov	r0, r3
 80070c6:	3718      	adds	r7, #24
 80070c8:	46bd      	mov	sp, r7
 80070ca:	bd80      	pop	{r7, pc}

080070cc <USBD_LL_DataInStage>:
 80070cc:	b580      	push	{r7, lr}
 80070ce:	b086      	sub	sp, #24
 80070d0:	af00      	add	r7, sp, #0
 80070d2:	60f8      	str	r0, [r7, #12]
 80070d4:	460b      	mov	r3, r1
 80070d6:	607a      	str	r2, [r7, #4]
 80070d8:	72fb      	strb	r3, [r7, #11]
 80070da:	7afb      	ldrb	r3, [r7, #11]
 80070dc:	2b00      	cmp	r3, #0
 80070de:	d16b      	bne.n	80071b8 <USBD_LL_DataInStage+0xec>
 80070e0:	68fb      	ldr	r3, [r7, #12]
 80070e2:	3314      	adds	r3, #20
 80070e4:	613b      	str	r3, [r7, #16]
 80070e6:	68fb      	ldr	r3, [r7, #12]
 80070e8:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 80070ec:	2b02      	cmp	r3, #2
 80070ee:	d156      	bne.n	800719e <USBD_LL_DataInStage+0xd2>
 80070f0:	693b      	ldr	r3, [r7, #16]
 80070f2:	689a      	ldr	r2, [r3, #8]
 80070f4:	693b      	ldr	r3, [r7, #16]
 80070f6:	68db      	ldr	r3, [r3, #12]
 80070f8:	429a      	cmp	r2, r3
 80070fa:	d914      	bls.n	8007126 <USBD_LL_DataInStage+0x5a>
 80070fc:	693b      	ldr	r3, [r7, #16]
 80070fe:	689a      	ldr	r2, [r3, #8]
 8007100:	693b      	ldr	r3, [r7, #16]
 8007102:	68db      	ldr	r3, [r3, #12]
 8007104:	1ad2      	subs	r2, r2, r3
 8007106:	693b      	ldr	r3, [r7, #16]
 8007108:	609a      	str	r2, [r3, #8]
 800710a:	693b      	ldr	r3, [r7, #16]
 800710c:	689b      	ldr	r3, [r3, #8]
 800710e:	461a      	mov	r2, r3
 8007110:	6879      	ldr	r1, [r7, #4]
 8007112:	68f8      	ldr	r0, [r7, #12]
 8007114:	f000 ff84 	bl	8008020 <USBD_CtlContinueSendData>
 8007118:	2300      	movs	r3, #0
 800711a:	2200      	movs	r2, #0
 800711c:	2100      	movs	r1, #0
 800711e:	68f8      	ldr	r0, [r7, #12]
 8007120:	f001 fc94 	bl	8008a4c <USBD_LL_PrepareReceive>
 8007124:	e03b      	b.n	800719e <USBD_LL_DataInStage+0xd2>
 8007126:	693b      	ldr	r3, [r7, #16]
 8007128:	68da      	ldr	r2, [r3, #12]
 800712a:	693b      	ldr	r3, [r7, #16]
 800712c:	689b      	ldr	r3, [r3, #8]
 800712e:	429a      	cmp	r2, r3
 8007130:	d11c      	bne.n	800716c <USBD_LL_DataInStage+0xa0>
 8007132:	693b      	ldr	r3, [r7, #16]
 8007134:	685a      	ldr	r2, [r3, #4]
 8007136:	693b      	ldr	r3, [r7, #16]
 8007138:	68db      	ldr	r3, [r3, #12]
 800713a:	429a      	cmp	r2, r3
 800713c:	d316      	bcc.n	800716c <USBD_LL_DataInStage+0xa0>
 800713e:	693b      	ldr	r3, [r7, #16]
 8007140:	685a      	ldr	r2, [r3, #4]
 8007142:	68fb      	ldr	r3, [r7, #12]
 8007144:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
 8007148:	429a      	cmp	r2, r3
 800714a:	d20f      	bcs.n	800716c <USBD_LL_DataInStage+0xa0>
 800714c:	2200      	movs	r2, #0
 800714e:	2100      	movs	r1, #0
 8007150:	68f8      	ldr	r0, [r7, #12]
 8007152:	f000 ff65 	bl	8008020 <USBD_CtlContinueSendData>
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	2200      	movs	r2, #0
 800715a:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 800715e:	2300      	movs	r3, #0
 8007160:	2200      	movs	r2, #0
 8007162:	2100      	movs	r1, #0
 8007164:	68f8      	ldr	r0, [r7, #12]
 8007166:	f001 fc71 	bl	8008a4c <USBD_LL_PrepareReceive>
 800716a:	e018      	b.n	800719e <USBD_LL_DataInStage+0xd2>
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007172:	b2db      	uxtb	r3, r3
 8007174:	2b03      	cmp	r3, #3
 8007176:	d10b      	bne.n	8007190 <USBD_LL_DataInStage+0xc4>
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800717e:	68db      	ldr	r3, [r3, #12]
 8007180:	2b00      	cmp	r3, #0
 8007182:	d005      	beq.n	8007190 <USBD_LL_DataInStage+0xc4>
 8007184:	68fb      	ldr	r3, [r7, #12]
 8007186:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800718a:	68db      	ldr	r3, [r3, #12]
 800718c:	68f8      	ldr	r0, [r7, #12]
 800718e:	4798      	blx	r3
 8007190:	2180      	movs	r1, #128	; 0x80
 8007192:	68f8      	ldr	r0, [r7, #12]
 8007194:	f001 fbb0 	bl	80088f8 <USBD_LL_StallEP>
 8007198:	68f8      	ldr	r0, [r7, #12]
 800719a:	f000 ff93 	bl	80080c4 <USBD_CtlReceiveStatus>
 800719e:	68fb      	ldr	r3, [r7, #12]
 80071a0:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 80071a4:	2b01      	cmp	r3, #1
 80071a6:	d122      	bne.n	80071ee <USBD_LL_DataInStage+0x122>
 80071a8:	68f8      	ldr	r0, [r7, #12]
 80071aa:	f7ff fe98 	bl	8006ede <USBD_RunTestMode>
 80071ae:	68fb      	ldr	r3, [r7, #12]
 80071b0:	2200      	movs	r2, #0
 80071b2:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 80071b6:	e01a      	b.n	80071ee <USBD_LL_DataInStage+0x122>
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80071be:	b2db      	uxtb	r3, r3
 80071c0:	2b03      	cmp	r3, #3
 80071c2:	d114      	bne.n	80071ee <USBD_LL_DataInStage+0x122>
 80071c4:	68fb      	ldr	r3, [r7, #12]
 80071c6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80071ca:	695b      	ldr	r3, [r3, #20]
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	d00e      	beq.n	80071ee <USBD_LL_DataInStage+0x122>
 80071d0:	68fb      	ldr	r3, [r7, #12]
 80071d2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80071d6:	695b      	ldr	r3, [r3, #20]
 80071d8:	7afa      	ldrb	r2, [r7, #11]
 80071da:	4611      	mov	r1, r2
 80071dc:	68f8      	ldr	r0, [r7, #12]
 80071de:	4798      	blx	r3
 80071e0:	4603      	mov	r3, r0
 80071e2:	75fb      	strb	r3, [r7, #23]
 80071e4:	7dfb      	ldrb	r3, [r7, #23]
 80071e6:	2b00      	cmp	r3, #0
 80071e8:	d001      	beq.n	80071ee <USBD_LL_DataInStage+0x122>
 80071ea:	7dfb      	ldrb	r3, [r7, #23]
 80071ec:	e000      	b.n	80071f0 <USBD_LL_DataInStage+0x124>
 80071ee:	2300      	movs	r3, #0
 80071f0:	4618      	mov	r0, r3
 80071f2:	3718      	adds	r7, #24
 80071f4:	46bd      	mov	sp, r7
 80071f6:	bd80      	pop	{r7, pc}

080071f8 <USBD_LL_Reset>:
 80071f8:	b580      	push	{r7, lr}
 80071fa:	b082      	sub	sp, #8
 80071fc:	af00      	add	r7, sp, #0
 80071fe:	6078      	str	r0, [r7, #4]
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	2201      	movs	r2, #1
 8007204:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	2200      	movs	r2, #0
 800720c:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	2200      	movs	r2, #0
 8007214:	605a      	str	r2, [r3, #4]
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	2200      	movs	r2, #0
 800721a:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007224:	2b00      	cmp	r3, #0
 8007226:	d101      	bne.n	800722c <USBD_LL_Reset+0x34>
 8007228:	2303      	movs	r3, #3
 800722a:	e02f      	b.n	800728c <USBD_LL_Reset+0x94>
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8007232:	2b00      	cmp	r3, #0
 8007234:	d00f      	beq.n	8007256 <USBD_LL_Reset+0x5e>
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800723c:	685b      	ldr	r3, [r3, #4]
 800723e:	2b00      	cmp	r3, #0
 8007240:	d009      	beq.n	8007256 <USBD_LL_Reset+0x5e>
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007248:	685b      	ldr	r3, [r3, #4]
 800724a:	687a      	ldr	r2, [r7, #4]
 800724c:	6852      	ldr	r2, [r2, #4]
 800724e:	b2d2      	uxtb	r2, r2
 8007250:	4611      	mov	r1, r2
 8007252:	6878      	ldr	r0, [r7, #4]
 8007254:	4798      	blx	r3
 8007256:	2340      	movs	r3, #64	; 0x40
 8007258:	2200      	movs	r2, #0
 800725a:	2100      	movs	r1, #0
 800725c:	6878      	ldr	r0, [r7, #4]
 800725e:	f001 fb06 	bl	800886e <USBD_LL_OpenEP>
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	2201      	movs	r2, #1
 8007266:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	2240      	movs	r2, #64	; 0x40
 800726e:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160
 8007272:	2340      	movs	r3, #64	; 0x40
 8007274:	2200      	movs	r2, #0
 8007276:	2180      	movs	r1, #128	; 0x80
 8007278:	6878      	ldr	r0, [r7, #4]
 800727a:	f001 faf8 	bl	800886e <USBD_LL_OpenEP>
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	2201      	movs	r2, #1
 8007282:	849a      	strh	r2, [r3, #36]	; 0x24
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	2240      	movs	r2, #64	; 0x40
 8007288:	621a      	str	r2, [r3, #32]
 800728a:	2300      	movs	r3, #0
 800728c:	4618      	mov	r0, r3
 800728e:	3708      	adds	r7, #8
 8007290:	46bd      	mov	sp, r7
 8007292:	bd80      	pop	{r7, pc}

08007294 <USBD_LL_SetSpeed>:
 8007294:	b480      	push	{r7}
 8007296:	b083      	sub	sp, #12
 8007298:	af00      	add	r7, sp, #0
 800729a:	6078      	str	r0, [r7, #4]
 800729c:	460b      	mov	r3, r1
 800729e:	70fb      	strb	r3, [r7, #3]
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	78fa      	ldrb	r2, [r7, #3]
 80072a4:	741a      	strb	r2, [r3, #16]
 80072a6:	2300      	movs	r3, #0
 80072a8:	4618      	mov	r0, r3
 80072aa:	370c      	adds	r7, #12
 80072ac:	46bd      	mov	sp, r7
 80072ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072b2:	4770      	bx	lr

080072b4 <USBD_LL_Suspend>:
 80072b4:	b480      	push	{r7}
 80072b6:	b083      	sub	sp, #12
 80072b8:	af00      	add	r7, sp, #0
 80072ba:	6078      	str	r0, [r7, #4]
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80072c2:	b2da      	uxtb	r2, r3
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	2204      	movs	r2, #4
 80072ce:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 80072d2:	2300      	movs	r3, #0
 80072d4:	4618      	mov	r0, r3
 80072d6:	370c      	adds	r7, #12
 80072d8:	46bd      	mov	sp, r7
 80072da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072de:	4770      	bx	lr

080072e0 <USBD_LL_Resume>:
 80072e0:	b480      	push	{r7}
 80072e2:	b083      	sub	sp, #12
 80072e4:	af00      	add	r7, sp, #0
 80072e6:	6078      	str	r0, [r7, #4]
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80072ee:	b2db      	uxtb	r3, r3
 80072f0:	2b04      	cmp	r3, #4
 80072f2:	d106      	bne.n	8007302 <USBD_LL_Resume+0x22>
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 80072fa:	b2da      	uxtb	r2, r3
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007302:	2300      	movs	r3, #0
 8007304:	4618      	mov	r0, r3
 8007306:	370c      	adds	r7, #12
 8007308:	46bd      	mov	sp, r7
 800730a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800730e:	4770      	bx	lr

08007310 <USBD_LL_SOF>:
 8007310:	b580      	push	{r7, lr}
 8007312:	b082      	sub	sp, #8
 8007314:	af00      	add	r7, sp, #0
 8007316:	6078      	str	r0, [r7, #4]
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800731e:	2b00      	cmp	r3, #0
 8007320:	d101      	bne.n	8007326 <USBD_LL_SOF+0x16>
 8007322:	2303      	movs	r3, #3
 8007324:	e012      	b.n	800734c <USBD_LL_SOF+0x3c>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800732c:	b2db      	uxtb	r3, r3
 800732e:	2b03      	cmp	r3, #3
 8007330:	d10b      	bne.n	800734a <USBD_LL_SOF+0x3a>
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007338:	69db      	ldr	r3, [r3, #28]
 800733a:	2b00      	cmp	r3, #0
 800733c:	d005      	beq.n	800734a <USBD_LL_SOF+0x3a>
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007344:	69db      	ldr	r3, [r3, #28]
 8007346:	6878      	ldr	r0, [r7, #4]
 8007348:	4798      	blx	r3
 800734a:	2300      	movs	r3, #0
 800734c:	4618      	mov	r0, r3
 800734e:	3708      	adds	r7, #8
 8007350:	46bd      	mov	sp, r7
 8007352:	bd80      	pop	{r7, pc}

08007354 <USBD_LL_IsoINIncomplete>:
 8007354:	b580      	push	{r7, lr}
 8007356:	b082      	sub	sp, #8
 8007358:	af00      	add	r7, sp, #0
 800735a:	6078      	str	r0, [r7, #4]
 800735c:	460b      	mov	r3, r1
 800735e:	70fb      	strb	r3, [r7, #3]
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007366:	2b00      	cmp	r3, #0
 8007368:	d101      	bne.n	800736e <USBD_LL_IsoINIncomplete+0x1a>
 800736a:	2303      	movs	r3, #3
 800736c:	e014      	b.n	8007398 <USBD_LL_IsoINIncomplete+0x44>
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007374:	b2db      	uxtb	r3, r3
 8007376:	2b03      	cmp	r3, #3
 8007378:	d10d      	bne.n	8007396 <USBD_LL_IsoINIncomplete+0x42>
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007380:	6a1b      	ldr	r3, [r3, #32]
 8007382:	2b00      	cmp	r3, #0
 8007384:	d007      	beq.n	8007396 <USBD_LL_IsoINIncomplete+0x42>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800738c:	6a1b      	ldr	r3, [r3, #32]
 800738e:	78fa      	ldrb	r2, [r7, #3]
 8007390:	4611      	mov	r1, r2
 8007392:	6878      	ldr	r0, [r7, #4]
 8007394:	4798      	blx	r3
 8007396:	2300      	movs	r3, #0
 8007398:	4618      	mov	r0, r3
 800739a:	3708      	adds	r7, #8
 800739c:	46bd      	mov	sp, r7
 800739e:	bd80      	pop	{r7, pc}

080073a0 <USBD_LL_IsoOUTIncomplete>:
 80073a0:	b580      	push	{r7, lr}
 80073a2:	b082      	sub	sp, #8
 80073a4:	af00      	add	r7, sp, #0
 80073a6:	6078      	str	r0, [r7, #4]
 80073a8:	460b      	mov	r3, r1
 80073aa:	70fb      	strb	r3, [r7, #3]
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80073b2:	2b00      	cmp	r3, #0
 80073b4:	d101      	bne.n	80073ba <USBD_LL_IsoOUTIncomplete+0x1a>
 80073b6:	2303      	movs	r3, #3
 80073b8:	e014      	b.n	80073e4 <USBD_LL_IsoOUTIncomplete+0x44>
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80073c0:	b2db      	uxtb	r3, r3
 80073c2:	2b03      	cmp	r3, #3
 80073c4:	d10d      	bne.n	80073e2 <USBD_LL_IsoOUTIncomplete+0x42>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80073cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073ce:	2b00      	cmp	r3, #0
 80073d0:	d007      	beq.n	80073e2 <USBD_LL_IsoOUTIncomplete+0x42>
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80073d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073da:	78fa      	ldrb	r2, [r7, #3]
 80073dc:	4611      	mov	r1, r2
 80073de:	6878      	ldr	r0, [r7, #4]
 80073e0:	4798      	blx	r3
 80073e2:	2300      	movs	r3, #0
 80073e4:	4618      	mov	r0, r3
 80073e6:	3708      	adds	r7, #8
 80073e8:	46bd      	mov	sp, r7
 80073ea:	bd80      	pop	{r7, pc}

080073ec <USBD_LL_DevConnected>:
 80073ec:	b480      	push	{r7}
 80073ee:	b083      	sub	sp, #12
 80073f0:	af00      	add	r7, sp, #0
 80073f2:	6078      	str	r0, [r7, #4]
 80073f4:	2300      	movs	r3, #0
 80073f6:	4618      	mov	r0, r3
 80073f8:	370c      	adds	r7, #12
 80073fa:	46bd      	mov	sp, r7
 80073fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007400:	4770      	bx	lr

08007402 <USBD_LL_DevDisconnected>:
 8007402:	b580      	push	{r7, lr}
 8007404:	b082      	sub	sp, #8
 8007406:	af00      	add	r7, sp, #0
 8007408:	6078      	str	r0, [r7, #4]
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	2201      	movs	r2, #1
 800740e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007418:	2b00      	cmp	r3, #0
 800741a:	d009      	beq.n	8007430 <USBD_LL_DevDisconnected+0x2e>
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007422:	685b      	ldr	r3, [r3, #4]
 8007424:	687a      	ldr	r2, [r7, #4]
 8007426:	6852      	ldr	r2, [r2, #4]
 8007428:	b2d2      	uxtb	r2, r2
 800742a:	4611      	mov	r1, r2
 800742c:	6878      	ldr	r0, [r7, #4]
 800742e:	4798      	blx	r3
 8007430:	2300      	movs	r3, #0
 8007432:	4618      	mov	r0, r3
 8007434:	3708      	adds	r7, #8
 8007436:	46bd      	mov	sp, r7
 8007438:	bd80      	pop	{r7, pc}

0800743a <SWAPBYTE>:
 800743a:	b480      	push	{r7}
 800743c:	b087      	sub	sp, #28
 800743e:	af00      	add	r7, sp, #0
 8007440:	6078      	str	r0, [r7, #4]
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	617b      	str	r3, [r7, #20]
 8007446:	697b      	ldr	r3, [r7, #20]
 8007448:	781b      	ldrb	r3, [r3, #0]
 800744a:	827b      	strh	r3, [r7, #18]
 800744c:	697b      	ldr	r3, [r7, #20]
 800744e:	3301      	adds	r3, #1
 8007450:	617b      	str	r3, [r7, #20]
 8007452:	697b      	ldr	r3, [r7, #20]
 8007454:	781b      	ldrb	r3, [r3, #0]
 8007456:	823b      	strh	r3, [r7, #16]
 8007458:	8a3b      	ldrh	r3, [r7, #16]
 800745a:	021b      	lsls	r3, r3, #8
 800745c:	b21a      	sxth	r2, r3
 800745e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8007462:	4313      	orrs	r3, r2
 8007464:	b21b      	sxth	r3, r3
 8007466:	81fb      	strh	r3, [r7, #14]
 8007468:	89fb      	ldrh	r3, [r7, #14]
 800746a:	4618      	mov	r0, r3
 800746c:	371c      	adds	r7, #28
 800746e:	46bd      	mov	sp, r7
 8007470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007474:	4770      	bx	lr
	...

08007478 <USBD_StdDevReq>:
 8007478:	b580      	push	{r7, lr}
 800747a:	b084      	sub	sp, #16
 800747c:	af00      	add	r7, sp, #0
 800747e:	6078      	str	r0, [r7, #4]
 8007480:	6039      	str	r1, [r7, #0]
 8007482:	2300      	movs	r3, #0
 8007484:	73fb      	strb	r3, [r7, #15]
 8007486:	683b      	ldr	r3, [r7, #0]
 8007488:	781b      	ldrb	r3, [r3, #0]
 800748a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800748e:	2b40      	cmp	r3, #64	; 0x40
 8007490:	d005      	beq.n	800749e <USBD_StdDevReq+0x26>
 8007492:	2b40      	cmp	r3, #64	; 0x40
 8007494:	d853      	bhi.n	800753e <USBD_StdDevReq+0xc6>
 8007496:	2b00      	cmp	r3, #0
 8007498:	d00b      	beq.n	80074b2 <USBD_StdDevReq+0x3a>
 800749a:	2b20      	cmp	r3, #32
 800749c:	d14f      	bne.n	800753e <USBD_StdDevReq+0xc6>
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80074a4:	689b      	ldr	r3, [r3, #8]
 80074a6:	6839      	ldr	r1, [r7, #0]
 80074a8:	6878      	ldr	r0, [r7, #4]
 80074aa:	4798      	blx	r3
 80074ac:	4603      	mov	r3, r0
 80074ae:	73fb      	strb	r3, [r7, #15]
 80074b0:	e04a      	b.n	8007548 <USBD_StdDevReq+0xd0>
 80074b2:	683b      	ldr	r3, [r7, #0]
 80074b4:	785b      	ldrb	r3, [r3, #1]
 80074b6:	2b09      	cmp	r3, #9
 80074b8:	d83b      	bhi.n	8007532 <USBD_StdDevReq+0xba>
 80074ba:	a201      	add	r2, pc, #4	; (adr r2, 80074c0 <USBD_StdDevReq+0x48>)
 80074bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80074c0:	08007515 	.word	0x08007515
 80074c4:	08007529 	.word	0x08007529
 80074c8:	08007533 	.word	0x08007533
 80074cc:	0800751f 	.word	0x0800751f
 80074d0:	08007533 	.word	0x08007533
 80074d4:	080074f3 	.word	0x080074f3
 80074d8:	080074e9 	.word	0x080074e9
 80074dc:	08007533 	.word	0x08007533
 80074e0:	0800750b 	.word	0x0800750b
 80074e4:	080074fd 	.word	0x080074fd
 80074e8:	6839      	ldr	r1, [r7, #0]
 80074ea:	6878      	ldr	r0, [r7, #4]
 80074ec:	f000 f9de 	bl	80078ac <USBD_GetDescriptor>
 80074f0:	e024      	b.n	800753c <USBD_StdDevReq+0xc4>
 80074f2:	6839      	ldr	r1, [r7, #0]
 80074f4:	6878      	ldr	r0, [r7, #4]
 80074f6:	f000 fb43 	bl	8007b80 <USBD_SetAddress>
 80074fa:	e01f      	b.n	800753c <USBD_StdDevReq+0xc4>
 80074fc:	6839      	ldr	r1, [r7, #0]
 80074fe:	6878      	ldr	r0, [r7, #4]
 8007500:	f000 fb82 	bl	8007c08 <USBD_SetConfig>
 8007504:	4603      	mov	r3, r0
 8007506:	73fb      	strb	r3, [r7, #15]
 8007508:	e018      	b.n	800753c <USBD_StdDevReq+0xc4>
 800750a:	6839      	ldr	r1, [r7, #0]
 800750c:	6878      	ldr	r0, [r7, #4]
 800750e:	f000 fc21 	bl	8007d54 <USBD_GetConfig>
 8007512:	e013      	b.n	800753c <USBD_StdDevReq+0xc4>
 8007514:	6839      	ldr	r1, [r7, #0]
 8007516:	6878      	ldr	r0, [r7, #4]
 8007518:	f000 fc52 	bl	8007dc0 <USBD_GetStatus>
 800751c:	e00e      	b.n	800753c <USBD_StdDevReq+0xc4>
 800751e:	6839      	ldr	r1, [r7, #0]
 8007520:	6878      	ldr	r0, [r7, #4]
 8007522:	f000 fc81 	bl	8007e28 <USBD_SetFeature>
 8007526:	e009      	b.n	800753c <USBD_StdDevReq+0xc4>
 8007528:	6839      	ldr	r1, [r7, #0]
 800752a:	6878      	ldr	r0, [r7, #4]
 800752c:	f000 fc90 	bl	8007e50 <USBD_ClrFeature>
 8007530:	e004      	b.n	800753c <USBD_StdDevReq+0xc4>
 8007532:	6839      	ldr	r1, [r7, #0]
 8007534:	6878      	ldr	r0, [r7, #4]
 8007536:	f000 fce7 	bl	8007f08 <USBD_CtlError>
 800753a:	bf00      	nop
 800753c:	e004      	b.n	8007548 <USBD_StdDevReq+0xd0>
 800753e:	6839      	ldr	r1, [r7, #0]
 8007540:	6878      	ldr	r0, [r7, #4]
 8007542:	f000 fce1 	bl	8007f08 <USBD_CtlError>
 8007546:	bf00      	nop
 8007548:	7bfb      	ldrb	r3, [r7, #15]
 800754a:	4618      	mov	r0, r3
 800754c:	3710      	adds	r7, #16
 800754e:	46bd      	mov	sp, r7
 8007550:	bd80      	pop	{r7, pc}
 8007552:	bf00      	nop

08007554 <USBD_StdItfReq>:
 8007554:	b580      	push	{r7, lr}
 8007556:	b084      	sub	sp, #16
 8007558:	af00      	add	r7, sp, #0
 800755a:	6078      	str	r0, [r7, #4]
 800755c:	6039      	str	r1, [r7, #0]
 800755e:	2300      	movs	r3, #0
 8007560:	73fb      	strb	r3, [r7, #15]
 8007562:	683b      	ldr	r3, [r7, #0]
 8007564:	781b      	ldrb	r3, [r3, #0]
 8007566:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800756a:	2b40      	cmp	r3, #64	; 0x40
 800756c:	d005      	beq.n	800757a <USBD_StdItfReq+0x26>
 800756e:	2b40      	cmp	r3, #64	; 0x40
 8007570:	d82f      	bhi.n	80075d2 <USBD_StdItfReq+0x7e>
 8007572:	2b00      	cmp	r3, #0
 8007574:	d001      	beq.n	800757a <USBD_StdItfReq+0x26>
 8007576:	2b20      	cmp	r3, #32
 8007578:	d12b      	bne.n	80075d2 <USBD_StdItfReq+0x7e>
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007580:	b2db      	uxtb	r3, r3
 8007582:	3b01      	subs	r3, #1
 8007584:	2b02      	cmp	r3, #2
 8007586:	d81d      	bhi.n	80075c4 <USBD_StdItfReq+0x70>
 8007588:	683b      	ldr	r3, [r7, #0]
 800758a:	889b      	ldrh	r3, [r3, #4]
 800758c:	b2db      	uxtb	r3, r3
 800758e:	2b01      	cmp	r3, #1
 8007590:	d813      	bhi.n	80075ba <USBD_StdItfReq+0x66>
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007598:	689b      	ldr	r3, [r3, #8]
 800759a:	6839      	ldr	r1, [r7, #0]
 800759c:	6878      	ldr	r0, [r7, #4]
 800759e:	4798      	blx	r3
 80075a0:	4603      	mov	r3, r0
 80075a2:	73fb      	strb	r3, [r7, #15]
 80075a4:	683b      	ldr	r3, [r7, #0]
 80075a6:	88db      	ldrh	r3, [r3, #6]
 80075a8:	2b00      	cmp	r3, #0
 80075aa:	d110      	bne.n	80075ce <USBD_StdItfReq+0x7a>
 80075ac:	7bfb      	ldrb	r3, [r7, #15]
 80075ae:	2b00      	cmp	r3, #0
 80075b0:	d10d      	bne.n	80075ce <USBD_StdItfReq+0x7a>
 80075b2:	6878      	ldr	r0, [r7, #4]
 80075b4:	f000 fd73 	bl	800809e <USBD_CtlSendStatus>
 80075b8:	e009      	b.n	80075ce <USBD_StdItfReq+0x7a>
 80075ba:	6839      	ldr	r1, [r7, #0]
 80075bc:	6878      	ldr	r0, [r7, #4]
 80075be:	f000 fca3 	bl	8007f08 <USBD_CtlError>
 80075c2:	e004      	b.n	80075ce <USBD_StdItfReq+0x7a>
 80075c4:	6839      	ldr	r1, [r7, #0]
 80075c6:	6878      	ldr	r0, [r7, #4]
 80075c8:	f000 fc9e 	bl	8007f08 <USBD_CtlError>
 80075cc:	e000      	b.n	80075d0 <USBD_StdItfReq+0x7c>
 80075ce:	bf00      	nop
 80075d0:	e004      	b.n	80075dc <USBD_StdItfReq+0x88>
 80075d2:	6839      	ldr	r1, [r7, #0]
 80075d4:	6878      	ldr	r0, [r7, #4]
 80075d6:	f000 fc97 	bl	8007f08 <USBD_CtlError>
 80075da:	bf00      	nop
 80075dc:	7bfb      	ldrb	r3, [r7, #15]
 80075de:	4618      	mov	r0, r3
 80075e0:	3710      	adds	r7, #16
 80075e2:	46bd      	mov	sp, r7
 80075e4:	bd80      	pop	{r7, pc}

080075e6 <USBD_StdEPReq>:
 80075e6:	b580      	push	{r7, lr}
 80075e8:	b084      	sub	sp, #16
 80075ea:	af00      	add	r7, sp, #0
 80075ec:	6078      	str	r0, [r7, #4]
 80075ee:	6039      	str	r1, [r7, #0]
 80075f0:	2300      	movs	r3, #0
 80075f2:	73fb      	strb	r3, [r7, #15]
 80075f4:	683b      	ldr	r3, [r7, #0]
 80075f6:	889b      	ldrh	r3, [r3, #4]
 80075f8:	73bb      	strb	r3, [r7, #14]
 80075fa:	683b      	ldr	r3, [r7, #0]
 80075fc:	781b      	ldrb	r3, [r3, #0]
 80075fe:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8007602:	2b40      	cmp	r3, #64	; 0x40
 8007604:	d007      	beq.n	8007616 <USBD_StdEPReq+0x30>
 8007606:	2b40      	cmp	r3, #64	; 0x40
 8007608:	f200 8145 	bhi.w	8007896 <USBD_StdEPReq+0x2b0>
 800760c:	2b00      	cmp	r3, #0
 800760e:	d00c      	beq.n	800762a <USBD_StdEPReq+0x44>
 8007610:	2b20      	cmp	r3, #32
 8007612:	f040 8140 	bne.w	8007896 <USBD_StdEPReq+0x2b0>
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800761c:	689b      	ldr	r3, [r3, #8]
 800761e:	6839      	ldr	r1, [r7, #0]
 8007620:	6878      	ldr	r0, [r7, #4]
 8007622:	4798      	blx	r3
 8007624:	4603      	mov	r3, r0
 8007626:	73fb      	strb	r3, [r7, #15]
 8007628:	e13a      	b.n	80078a0 <USBD_StdEPReq+0x2ba>
 800762a:	683b      	ldr	r3, [r7, #0]
 800762c:	785b      	ldrb	r3, [r3, #1]
 800762e:	2b03      	cmp	r3, #3
 8007630:	d007      	beq.n	8007642 <USBD_StdEPReq+0x5c>
 8007632:	2b03      	cmp	r3, #3
 8007634:	f300 8129 	bgt.w	800788a <USBD_StdEPReq+0x2a4>
 8007638:	2b00      	cmp	r3, #0
 800763a:	d07f      	beq.n	800773c <USBD_StdEPReq+0x156>
 800763c:	2b01      	cmp	r3, #1
 800763e:	d03c      	beq.n	80076ba <USBD_StdEPReq+0xd4>
 8007640:	e123      	b.n	800788a <USBD_StdEPReq+0x2a4>
 8007642:	687b      	ldr	r3, [r7, #4]
 8007644:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007648:	b2db      	uxtb	r3, r3
 800764a:	2b02      	cmp	r3, #2
 800764c:	d002      	beq.n	8007654 <USBD_StdEPReq+0x6e>
 800764e:	2b03      	cmp	r3, #3
 8007650:	d016      	beq.n	8007680 <USBD_StdEPReq+0x9a>
 8007652:	e02c      	b.n	80076ae <USBD_StdEPReq+0xc8>
 8007654:	7bbb      	ldrb	r3, [r7, #14]
 8007656:	2b00      	cmp	r3, #0
 8007658:	d00d      	beq.n	8007676 <USBD_StdEPReq+0x90>
 800765a:	7bbb      	ldrb	r3, [r7, #14]
 800765c:	2b80      	cmp	r3, #128	; 0x80
 800765e:	d00a      	beq.n	8007676 <USBD_StdEPReq+0x90>
 8007660:	7bbb      	ldrb	r3, [r7, #14]
 8007662:	4619      	mov	r1, r3
 8007664:	6878      	ldr	r0, [r7, #4]
 8007666:	f001 f947 	bl	80088f8 <USBD_LL_StallEP>
 800766a:	2180      	movs	r1, #128	; 0x80
 800766c:	6878      	ldr	r0, [r7, #4]
 800766e:	f001 f943 	bl	80088f8 <USBD_LL_StallEP>
 8007672:	bf00      	nop
 8007674:	e020      	b.n	80076b8 <USBD_StdEPReq+0xd2>
 8007676:	6839      	ldr	r1, [r7, #0]
 8007678:	6878      	ldr	r0, [r7, #4]
 800767a:	f000 fc45 	bl	8007f08 <USBD_CtlError>
 800767e:	e01b      	b.n	80076b8 <USBD_StdEPReq+0xd2>
 8007680:	683b      	ldr	r3, [r7, #0]
 8007682:	885b      	ldrh	r3, [r3, #2]
 8007684:	2b00      	cmp	r3, #0
 8007686:	d10e      	bne.n	80076a6 <USBD_StdEPReq+0xc0>
 8007688:	7bbb      	ldrb	r3, [r7, #14]
 800768a:	2b00      	cmp	r3, #0
 800768c:	d00b      	beq.n	80076a6 <USBD_StdEPReq+0xc0>
 800768e:	7bbb      	ldrb	r3, [r7, #14]
 8007690:	2b80      	cmp	r3, #128	; 0x80
 8007692:	d008      	beq.n	80076a6 <USBD_StdEPReq+0xc0>
 8007694:	683b      	ldr	r3, [r7, #0]
 8007696:	88db      	ldrh	r3, [r3, #6]
 8007698:	2b00      	cmp	r3, #0
 800769a:	d104      	bne.n	80076a6 <USBD_StdEPReq+0xc0>
 800769c:	7bbb      	ldrb	r3, [r7, #14]
 800769e:	4619      	mov	r1, r3
 80076a0:	6878      	ldr	r0, [r7, #4]
 80076a2:	f001 f929 	bl	80088f8 <USBD_LL_StallEP>
 80076a6:	6878      	ldr	r0, [r7, #4]
 80076a8:	f000 fcf9 	bl	800809e <USBD_CtlSendStatus>
 80076ac:	e004      	b.n	80076b8 <USBD_StdEPReq+0xd2>
 80076ae:	6839      	ldr	r1, [r7, #0]
 80076b0:	6878      	ldr	r0, [r7, #4]
 80076b2:	f000 fc29 	bl	8007f08 <USBD_CtlError>
 80076b6:	bf00      	nop
 80076b8:	e0ec      	b.n	8007894 <USBD_StdEPReq+0x2ae>
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80076c0:	b2db      	uxtb	r3, r3
 80076c2:	2b02      	cmp	r3, #2
 80076c4:	d002      	beq.n	80076cc <USBD_StdEPReq+0xe6>
 80076c6:	2b03      	cmp	r3, #3
 80076c8:	d016      	beq.n	80076f8 <USBD_StdEPReq+0x112>
 80076ca:	e030      	b.n	800772e <USBD_StdEPReq+0x148>
 80076cc:	7bbb      	ldrb	r3, [r7, #14]
 80076ce:	2b00      	cmp	r3, #0
 80076d0:	d00d      	beq.n	80076ee <USBD_StdEPReq+0x108>
 80076d2:	7bbb      	ldrb	r3, [r7, #14]
 80076d4:	2b80      	cmp	r3, #128	; 0x80
 80076d6:	d00a      	beq.n	80076ee <USBD_StdEPReq+0x108>
 80076d8:	7bbb      	ldrb	r3, [r7, #14]
 80076da:	4619      	mov	r1, r3
 80076dc:	6878      	ldr	r0, [r7, #4]
 80076de:	f001 f90b 	bl	80088f8 <USBD_LL_StallEP>
 80076e2:	2180      	movs	r1, #128	; 0x80
 80076e4:	6878      	ldr	r0, [r7, #4]
 80076e6:	f001 f907 	bl	80088f8 <USBD_LL_StallEP>
 80076ea:	bf00      	nop
 80076ec:	e025      	b.n	800773a <USBD_StdEPReq+0x154>
 80076ee:	6839      	ldr	r1, [r7, #0]
 80076f0:	6878      	ldr	r0, [r7, #4]
 80076f2:	f000 fc09 	bl	8007f08 <USBD_CtlError>
 80076f6:	e020      	b.n	800773a <USBD_StdEPReq+0x154>
 80076f8:	683b      	ldr	r3, [r7, #0]
 80076fa:	885b      	ldrh	r3, [r3, #2]
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d11b      	bne.n	8007738 <USBD_StdEPReq+0x152>
 8007700:	7bbb      	ldrb	r3, [r7, #14]
 8007702:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007706:	2b00      	cmp	r3, #0
 8007708:	d004      	beq.n	8007714 <USBD_StdEPReq+0x12e>
 800770a:	7bbb      	ldrb	r3, [r7, #14]
 800770c:	4619      	mov	r1, r3
 800770e:	6878      	ldr	r0, [r7, #4]
 8007710:	f001 f911 	bl	8008936 <USBD_LL_ClearStallEP>
 8007714:	6878      	ldr	r0, [r7, #4]
 8007716:	f000 fcc2 	bl	800809e <USBD_CtlSendStatus>
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007720:	689b      	ldr	r3, [r3, #8]
 8007722:	6839      	ldr	r1, [r7, #0]
 8007724:	6878      	ldr	r0, [r7, #4]
 8007726:	4798      	blx	r3
 8007728:	4603      	mov	r3, r0
 800772a:	73fb      	strb	r3, [r7, #15]
 800772c:	e004      	b.n	8007738 <USBD_StdEPReq+0x152>
 800772e:	6839      	ldr	r1, [r7, #0]
 8007730:	6878      	ldr	r0, [r7, #4]
 8007732:	f000 fbe9 	bl	8007f08 <USBD_CtlError>
 8007736:	e000      	b.n	800773a <USBD_StdEPReq+0x154>
 8007738:	bf00      	nop
 800773a:	e0ab      	b.n	8007894 <USBD_StdEPReq+0x2ae>
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007742:	b2db      	uxtb	r3, r3
 8007744:	2b02      	cmp	r3, #2
 8007746:	d002      	beq.n	800774e <USBD_StdEPReq+0x168>
 8007748:	2b03      	cmp	r3, #3
 800774a:	d032      	beq.n	80077b2 <USBD_StdEPReq+0x1cc>
 800774c:	e097      	b.n	800787e <USBD_StdEPReq+0x298>
 800774e:	7bbb      	ldrb	r3, [r7, #14]
 8007750:	2b00      	cmp	r3, #0
 8007752:	d007      	beq.n	8007764 <USBD_StdEPReq+0x17e>
 8007754:	7bbb      	ldrb	r3, [r7, #14]
 8007756:	2b80      	cmp	r3, #128	; 0x80
 8007758:	d004      	beq.n	8007764 <USBD_StdEPReq+0x17e>
 800775a:	6839      	ldr	r1, [r7, #0]
 800775c:	6878      	ldr	r0, [r7, #4]
 800775e:	f000 fbd3 	bl	8007f08 <USBD_CtlError>
 8007762:	e091      	b.n	8007888 <USBD_StdEPReq+0x2a2>
 8007764:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007768:	2b00      	cmp	r3, #0
 800776a:	da0b      	bge.n	8007784 <USBD_StdEPReq+0x19e>
 800776c:	7bbb      	ldrb	r3, [r7, #14]
 800776e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007772:	4613      	mov	r3, r2
 8007774:	009b      	lsls	r3, r3, #2
 8007776:	4413      	add	r3, r2
 8007778:	009b      	lsls	r3, r3, #2
 800777a:	3310      	adds	r3, #16
 800777c:	687a      	ldr	r2, [r7, #4]
 800777e:	4413      	add	r3, r2
 8007780:	3304      	adds	r3, #4
 8007782:	e00b      	b.n	800779c <USBD_StdEPReq+0x1b6>
 8007784:	7bbb      	ldrb	r3, [r7, #14]
 8007786:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800778a:	4613      	mov	r3, r2
 800778c:	009b      	lsls	r3, r3, #2
 800778e:	4413      	add	r3, r2
 8007790:	009b      	lsls	r3, r3, #2
 8007792:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8007796:	687a      	ldr	r2, [r7, #4]
 8007798:	4413      	add	r3, r2
 800779a:	3304      	adds	r3, #4
 800779c:	60bb      	str	r3, [r7, #8]
 800779e:	68bb      	ldr	r3, [r7, #8]
 80077a0:	2200      	movs	r2, #0
 80077a2:	601a      	str	r2, [r3, #0]
 80077a4:	68bb      	ldr	r3, [r7, #8]
 80077a6:	2202      	movs	r2, #2
 80077a8:	4619      	mov	r1, r3
 80077aa:	6878      	ldr	r0, [r7, #4]
 80077ac:	f000 fc1d 	bl	8007fea <USBD_CtlSendData>
 80077b0:	e06a      	b.n	8007888 <USBD_StdEPReq+0x2a2>
 80077b2:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	da11      	bge.n	80077de <USBD_StdEPReq+0x1f8>
 80077ba:	7bbb      	ldrb	r3, [r7, #14]
 80077bc:	f003 020f 	and.w	r2, r3, #15
 80077c0:	6879      	ldr	r1, [r7, #4]
 80077c2:	4613      	mov	r3, r2
 80077c4:	009b      	lsls	r3, r3, #2
 80077c6:	4413      	add	r3, r2
 80077c8:	009b      	lsls	r3, r3, #2
 80077ca:	440b      	add	r3, r1
 80077cc:	3324      	adds	r3, #36	; 0x24
 80077ce:	881b      	ldrh	r3, [r3, #0]
 80077d0:	2b00      	cmp	r3, #0
 80077d2:	d117      	bne.n	8007804 <USBD_StdEPReq+0x21e>
 80077d4:	6839      	ldr	r1, [r7, #0]
 80077d6:	6878      	ldr	r0, [r7, #4]
 80077d8:	f000 fb96 	bl	8007f08 <USBD_CtlError>
 80077dc:	e054      	b.n	8007888 <USBD_StdEPReq+0x2a2>
 80077de:	7bbb      	ldrb	r3, [r7, #14]
 80077e0:	f003 020f 	and.w	r2, r3, #15
 80077e4:	6879      	ldr	r1, [r7, #4]
 80077e6:	4613      	mov	r3, r2
 80077e8:	009b      	lsls	r3, r3, #2
 80077ea:	4413      	add	r3, r2
 80077ec:	009b      	lsls	r3, r3, #2
 80077ee:	440b      	add	r3, r1
 80077f0:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 80077f4:	881b      	ldrh	r3, [r3, #0]
 80077f6:	2b00      	cmp	r3, #0
 80077f8:	d104      	bne.n	8007804 <USBD_StdEPReq+0x21e>
 80077fa:	6839      	ldr	r1, [r7, #0]
 80077fc:	6878      	ldr	r0, [r7, #4]
 80077fe:	f000 fb83 	bl	8007f08 <USBD_CtlError>
 8007802:	e041      	b.n	8007888 <USBD_StdEPReq+0x2a2>
 8007804:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007808:	2b00      	cmp	r3, #0
 800780a:	da0b      	bge.n	8007824 <USBD_StdEPReq+0x23e>
 800780c:	7bbb      	ldrb	r3, [r7, #14]
 800780e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007812:	4613      	mov	r3, r2
 8007814:	009b      	lsls	r3, r3, #2
 8007816:	4413      	add	r3, r2
 8007818:	009b      	lsls	r3, r3, #2
 800781a:	3310      	adds	r3, #16
 800781c:	687a      	ldr	r2, [r7, #4]
 800781e:	4413      	add	r3, r2
 8007820:	3304      	adds	r3, #4
 8007822:	e00b      	b.n	800783c <USBD_StdEPReq+0x256>
 8007824:	7bbb      	ldrb	r3, [r7, #14]
 8007826:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800782a:	4613      	mov	r3, r2
 800782c:	009b      	lsls	r3, r3, #2
 800782e:	4413      	add	r3, r2
 8007830:	009b      	lsls	r3, r3, #2
 8007832:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8007836:	687a      	ldr	r2, [r7, #4]
 8007838:	4413      	add	r3, r2
 800783a:	3304      	adds	r3, #4
 800783c:	60bb      	str	r3, [r7, #8]
 800783e:	7bbb      	ldrb	r3, [r7, #14]
 8007840:	2b00      	cmp	r3, #0
 8007842:	d002      	beq.n	800784a <USBD_StdEPReq+0x264>
 8007844:	7bbb      	ldrb	r3, [r7, #14]
 8007846:	2b80      	cmp	r3, #128	; 0x80
 8007848:	d103      	bne.n	8007852 <USBD_StdEPReq+0x26c>
 800784a:	68bb      	ldr	r3, [r7, #8]
 800784c:	2200      	movs	r2, #0
 800784e:	601a      	str	r2, [r3, #0]
 8007850:	e00e      	b.n	8007870 <USBD_StdEPReq+0x28a>
 8007852:	7bbb      	ldrb	r3, [r7, #14]
 8007854:	4619      	mov	r1, r3
 8007856:	6878      	ldr	r0, [r7, #4]
 8007858:	f001 f88c 	bl	8008974 <USBD_LL_IsStallEP>
 800785c:	4603      	mov	r3, r0
 800785e:	2b00      	cmp	r3, #0
 8007860:	d003      	beq.n	800786a <USBD_StdEPReq+0x284>
 8007862:	68bb      	ldr	r3, [r7, #8]
 8007864:	2201      	movs	r2, #1
 8007866:	601a      	str	r2, [r3, #0]
 8007868:	e002      	b.n	8007870 <USBD_StdEPReq+0x28a>
 800786a:	68bb      	ldr	r3, [r7, #8]
 800786c:	2200      	movs	r2, #0
 800786e:	601a      	str	r2, [r3, #0]
 8007870:	68bb      	ldr	r3, [r7, #8]
 8007872:	2202      	movs	r2, #2
 8007874:	4619      	mov	r1, r3
 8007876:	6878      	ldr	r0, [r7, #4]
 8007878:	f000 fbb7 	bl	8007fea <USBD_CtlSendData>
 800787c:	e004      	b.n	8007888 <USBD_StdEPReq+0x2a2>
 800787e:	6839      	ldr	r1, [r7, #0]
 8007880:	6878      	ldr	r0, [r7, #4]
 8007882:	f000 fb41 	bl	8007f08 <USBD_CtlError>
 8007886:	bf00      	nop
 8007888:	e004      	b.n	8007894 <USBD_StdEPReq+0x2ae>
 800788a:	6839      	ldr	r1, [r7, #0]
 800788c:	6878      	ldr	r0, [r7, #4]
 800788e:	f000 fb3b 	bl	8007f08 <USBD_CtlError>
 8007892:	bf00      	nop
 8007894:	e004      	b.n	80078a0 <USBD_StdEPReq+0x2ba>
 8007896:	6839      	ldr	r1, [r7, #0]
 8007898:	6878      	ldr	r0, [r7, #4]
 800789a:	f000 fb35 	bl	8007f08 <USBD_CtlError>
 800789e:	bf00      	nop
 80078a0:	7bfb      	ldrb	r3, [r7, #15]
 80078a2:	4618      	mov	r0, r3
 80078a4:	3710      	adds	r7, #16
 80078a6:	46bd      	mov	sp, r7
 80078a8:	bd80      	pop	{r7, pc}
	...

080078ac <USBD_GetDescriptor>:
 80078ac:	b580      	push	{r7, lr}
 80078ae:	b084      	sub	sp, #16
 80078b0:	af00      	add	r7, sp, #0
 80078b2:	6078      	str	r0, [r7, #4]
 80078b4:	6039      	str	r1, [r7, #0]
 80078b6:	2300      	movs	r3, #0
 80078b8:	813b      	strh	r3, [r7, #8]
 80078ba:	2300      	movs	r3, #0
 80078bc:	60fb      	str	r3, [r7, #12]
 80078be:	2300      	movs	r3, #0
 80078c0:	72fb      	strb	r3, [r7, #11]
 80078c2:	683b      	ldr	r3, [r7, #0]
 80078c4:	885b      	ldrh	r3, [r3, #2]
 80078c6:	0a1b      	lsrs	r3, r3, #8
 80078c8:	b29b      	uxth	r3, r3
 80078ca:	3b01      	subs	r3, #1
 80078cc:	2b06      	cmp	r3, #6
 80078ce:	f200 8128 	bhi.w	8007b22 <USBD_GetDescriptor+0x276>
 80078d2:	a201      	add	r2, pc, #4	; (adr r2, 80078d8 <USBD_GetDescriptor+0x2c>)
 80078d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80078d8:	080078f5 	.word	0x080078f5
 80078dc:	0800790d 	.word	0x0800790d
 80078e0:	0800794d 	.word	0x0800794d
 80078e4:	08007b23 	.word	0x08007b23
 80078e8:	08007b23 	.word	0x08007b23
 80078ec:	08007ac3 	.word	0x08007ac3
 80078f0:	08007aef 	.word	0x08007aef
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80078fa:	681b      	ldr	r3, [r3, #0]
 80078fc:	687a      	ldr	r2, [r7, #4]
 80078fe:	7c12      	ldrb	r2, [r2, #16]
 8007900:	f107 0108 	add.w	r1, r7, #8
 8007904:	4610      	mov	r0, r2
 8007906:	4798      	blx	r3
 8007908:	60f8      	str	r0, [r7, #12]
 800790a:	e112      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	7c1b      	ldrb	r3, [r3, #16]
 8007910:	2b00      	cmp	r3, #0
 8007912:	d10d      	bne.n	8007930 <USBD_GetDescriptor+0x84>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800791a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800791c:	f107 0208 	add.w	r2, r7, #8
 8007920:	4610      	mov	r0, r2
 8007922:	4798      	blx	r3
 8007924:	60f8      	str	r0, [r7, #12]
 8007926:	68fb      	ldr	r3, [r7, #12]
 8007928:	3301      	adds	r3, #1
 800792a:	2202      	movs	r2, #2
 800792c:	701a      	strb	r2, [r3, #0]
 800792e:	e100      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007936:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007938:	f107 0208 	add.w	r2, r7, #8
 800793c:	4610      	mov	r0, r2
 800793e:	4798      	blx	r3
 8007940:	60f8      	str	r0, [r7, #12]
 8007942:	68fb      	ldr	r3, [r7, #12]
 8007944:	3301      	adds	r3, #1
 8007946:	2202      	movs	r2, #2
 8007948:	701a      	strb	r2, [r3, #0]
 800794a:	e0f2      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 800794c:	683b      	ldr	r3, [r7, #0]
 800794e:	885b      	ldrh	r3, [r3, #2]
 8007950:	b2db      	uxtb	r3, r3
 8007952:	2b05      	cmp	r3, #5
 8007954:	f200 80ac 	bhi.w	8007ab0 <USBD_GetDescriptor+0x204>
 8007958:	a201      	add	r2, pc, #4	; (adr r2, 8007960 <USBD_GetDescriptor+0xb4>)
 800795a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800795e:	bf00      	nop
 8007960:	08007979 	.word	0x08007979
 8007964:	080079ad 	.word	0x080079ad
 8007968:	080079e1 	.word	0x080079e1
 800796c:	08007a15 	.word	0x08007a15
 8007970:	08007a49 	.word	0x08007a49
 8007974:	08007a7d 	.word	0x08007a7d
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800797e:	685b      	ldr	r3, [r3, #4]
 8007980:	2b00      	cmp	r3, #0
 8007982:	d00b      	beq.n	800799c <USBD_GetDescriptor+0xf0>
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800798a:	685b      	ldr	r3, [r3, #4]
 800798c:	687a      	ldr	r2, [r7, #4]
 800798e:	7c12      	ldrb	r2, [r2, #16]
 8007990:	f107 0108 	add.w	r1, r7, #8
 8007994:	4610      	mov	r0, r2
 8007996:	4798      	blx	r3
 8007998:	60f8      	str	r0, [r7, #12]
 800799a:	e091      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 800799c:	6839      	ldr	r1, [r7, #0]
 800799e:	6878      	ldr	r0, [r7, #4]
 80079a0:	f000 fab2 	bl	8007f08 <USBD_CtlError>
 80079a4:	7afb      	ldrb	r3, [r7, #11]
 80079a6:	3301      	adds	r3, #1
 80079a8:	72fb      	strb	r3, [r7, #11]
 80079aa:	e089      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80079b2:	689b      	ldr	r3, [r3, #8]
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d00b      	beq.n	80079d0 <USBD_GetDescriptor+0x124>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80079be:	689b      	ldr	r3, [r3, #8]
 80079c0:	687a      	ldr	r2, [r7, #4]
 80079c2:	7c12      	ldrb	r2, [r2, #16]
 80079c4:	f107 0108 	add.w	r1, r7, #8
 80079c8:	4610      	mov	r0, r2
 80079ca:	4798      	blx	r3
 80079cc:	60f8      	str	r0, [r7, #12]
 80079ce:	e077      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 80079d0:	6839      	ldr	r1, [r7, #0]
 80079d2:	6878      	ldr	r0, [r7, #4]
 80079d4:	f000 fa98 	bl	8007f08 <USBD_CtlError>
 80079d8:	7afb      	ldrb	r3, [r7, #11]
 80079da:	3301      	adds	r3, #1
 80079dc:	72fb      	strb	r3, [r7, #11]
 80079de:	e06f      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80079e6:	68db      	ldr	r3, [r3, #12]
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	d00b      	beq.n	8007a04 <USBD_GetDescriptor+0x158>
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80079f2:	68db      	ldr	r3, [r3, #12]
 80079f4:	687a      	ldr	r2, [r7, #4]
 80079f6:	7c12      	ldrb	r2, [r2, #16]
 80079f8:	f107 0108 	add.w	r1, r7, #8
 80079fc:	4610      	mov	r0, r2
 80079fe:	4798      	blx	r3
 8007a00:	60f8      	str	r0, [r7, #12]
 8007a02:	e05d      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a04:	6839      	ldr	r1, [r7, #0]
 8007a06:	6878      	ldr	r0, [r7, #4]
 8007a08:	f000 fa7e 	bl	8007f08 <USBD_CtlError>
 8007a0c:	7afb      	ldrb	r3, [r7, #11]
 8007a0e:	3301      	adds	r3, #1
 8007a10:	72fb      	strb	r3, [r7, #11]
 8007a12:	e055      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a1a:	691b      	ldr	r3, [r3, #16]
 8007a1c:	2b00      	cmp	r3, #0
 8007a1e:	d00b      	beq.n	8007a38 <USBD_GetDescriptor+0x18c>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a26:	691b      	ldr	r3, [r3, #16]
 8007a28:	687a      	ldr	r2, [r7, #4]
 8007a2a:	7c12      	ldrb	r2, [r2, #16]
 8007a2c:	f107 0108 	add.w	r1, r7, #8
 8007a30:	4610      	mov	r0, r2
 8007a32:	4798      	blx	r3
 8007a34:	60f8      	str	r0, [r7, #12]
 8007a36:	e043      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a38:	6839      	ldr	r1, [r7, #0]
 8007a3a:	6878      	ldr	r0, [r7, #4]
 8007a3c:	f000 fa64 	bl	8007f08 <USBD_CtlError>
 8007a40:	7afb      	ldrb	r3, [r7, #11]
 8007a42:	3301      	adds	r3, #1
 8007a44:	72fb      	strb	r3, [r7, #11]
 8007a46:	e03b      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a4e:	695b      	ldr	r3, [r3, #20]
 8007a50:	2b00      	cmp	r3, #0
 8007a52:	d00b      	beq.n	8007a6c <USBD_GetDescriptor+0x1c0>
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a5a:	695b      	ldr	r3, [r3, #20]
 8007a5c:	687a      	ldr	r2, [r7, #4]
 8007a5e:	7c12      	ldrb	r2, [r2, #16]
 8007a60:	f107 0108 	add.w	r1, r7, #8
 8007a64:	4610      	mov	r0, r2
 8007a66:	4798      	blx	r3
 8007a68:	60f8      	str	r0, [r7, #12]
 8007a6a:	e029      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a6c:	6839      	ldr	r1, [r7, #0]
 8007a6e:	6878      	ldr	r0, [r7, #4]
 8007a70:	f000 fa4a 	bl	8007f08 <USBD_CtlError>
 8007a74:	7afb      	ldrb	r3, [r7, #11]
 8007a76:	3301      	adds	r3, #1
 8007a78:	72fb      	strb	r3, [r7, #11]
 8007a7a:	e021      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a82:	699b      	ldr	r3, [r3, #24]
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	d00b      	beq.n	8007aa0 <USBD_GetDescriptor+0x1f4>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8007a8e:	699b      	ldr	r3, [r3, #24]
 8007a90:	687a      	ldr	r2, [r7, #4]
 8007a92:	7c12      	ldrb	r2, [r2, #16]
 8007a94:	f107 0108 	add.w	r1, r7, #8
 8007a98:	4610      	mov	r0, r2
 8007a9a:	4798      	blx	r3
 8007a9c:	60f8      	str	r0, [r7, #12]
 8007a9e:	e00f      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007aa0:	6839      	ldr	r1, [r7, #0]
 8007aa2:	6878      	ldr	r0, [r7, #4]
 8007aa4:	f000 fa30 	bl	8007f08 <USBD_CtlError>
 8007aa8:	7afb      	ldrb	r3, [r7, #11]
 8007aaa:	3301      	adds	r3, #1
 8007aac:	72fb      	strb	r3, [r7, #11]
 8007aae:	e007      	b.n	8007ac0 <USBD_GetDescriptor+0x214>
 8007ab0:	6839      	ldr	r1, [r7, #0]
 8007ab2:	6878      	ldr	r0, [r7, #4]
 8007ab4:	f000 fa28 	bl	8007f08 <USBD_CtlError>
 8007ab8:	7afb      	ldrb	r3, [r7, #11]
 8007aba:	3301      	adds	r3, #1
 8007abc:	72fb      	strb	r3, [r7, #11]
 8007abe:	bf00      	nop
 8007ac0:	e037      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	7c1b      	ldrb	r3, [r3, #16]
 8007ac6:	2b00      	cmp	r3, #0
 8007ac8:	d109      	bne.n	8007ade <USBD_GetDescriptor+0x232>
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007ad0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007ad2:	f107 0208 	add.w	r2, r7, #8
 8007ad6:	4610      	mov	r0, r2
 8007ad8:	4798      	blx	r3
 8007ada:	60f8      	str	r0, [r7, #12]
 8007adc:	e029      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007ade:	6839      	ldr	r1, [r7, #0]
 8007ae0:	6878      	ldr	r0, [r7, #4]
 8007ae2:	f000 fa11 	bl	8007f08 <USBD_CtlError>
 8007ae6:	7afb      	ldrb	r3, [r7, #11]
 8007ae8:	3301      	adds	r3, #1
 8007aea:	72fb      	strb	r3, [r7, #11]
 8007aec:	e021      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	7c1b      	ldrb	r3, [r3, #16]
 8007af2:	2b00      	cmp	r3, #0
 8007af4:	d10d      	bne.n	8007b12 <USBD_GetDescriptor+0x266>
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8007afc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007afe:	f107 0208 	add.w	r2, r7, #8
 8007b02:	4610      	mov	r0, r2
 8007b04:	4798      	blx	r3
 8007b06:	60f8      	str	r0, [r7, #12]
 8007b08:	68fb      	ldr	r3, [r7, #12]
 8007b0a:	3301      	adds	r3, #1
 8007b0c:	2207      	movs	r2, #7
 8007b0e:	701a      	strb	r2, [r3, #0]
 8007b10:	e00f      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007b12:	6839      	ldr	r1, [r7, #0]
 8007b14:	6878      	ldr	r0, [r7, #4]
 8007b16:	f000 f9f7 	bl	8007f08 <USBD_CtlError>
 8007b1a:	7afb      	ldrb	r3, [r7, #11]
 8007b1c:	3301      	adds	r3, #1
 8007b1e:	72fb      	strb	r3, [r7, #11]
 8007b20:	e007      	b.n	8007b32 <USBD_GetDescriptor+0x286>
 8007b22:	6839      	ldr	r1, [r7, #0]
 8007b24:	6878      	ldr	r0, [r7, #4]
 8007b26:	f000 f9ef 	bl	8007f08 <USBD_CtlError>
 8007b2a:	7afb      	ldrb	r3, [r7, #11]
 8007b2c:	3301      	adds	r3, #1
 8007b2e:	72fb      	strb	r3, [r7, #11]
 8007b30:	bf00      	nop
 8007b32:	7afb      	ldrb	r3, [r7, #11]
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d11e      	bne.n	8007b76 <USBD_GetDescriptor+0x2ca>
 8007b38:	683b      	ldr	r3, [r7, #0]
 8007b3a:	88db      	ldrh	r3, [r3, #6]
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d016      	beq.n	8007b6e <USBD_GetDescriptor+0x2c2>
 8007b40:	893b      	ldrh	r3, [r7, #8]
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d00e      	beq.n	8007b64 <USBD_GetDescriptor+0x2b8>
 8007b46:	683b      	ldr	r3, [r7, #0]
 8007b48:	88da      	ldrh	r2, [r3, #6]
 8007b4a:	893b      	ldrh	r3, [r7, #8]
 8007b4c:	4293      	cmp	r3, r2
 8007b4e:	bf28      	it	cs
 8007b50:	4613      	movcs	r3, r2
 8007b52:	b29b      	uxth	r3, r3
 8007b54:	813b      	strh	r3, [r7, #8]
 8007b56:	893b      	ldrh	r3, [r7, #8]
 8007b58:	461a      	mov	r2, r3
 8007b5a:	68f9      	ldr	r1, [r7, #12]
 8007b5c:	6878      	ldr	r0, [r7, #4]
 8007b5e:	f000 fa44 	bl	8007fea <USBD_CtlSendData>
 8007b62:	e009      	b.n	8007b78 <USBD_GetDescriptor+0x2cc>
 8007b64:	6839      	ldr	r1, [r7, #0]
 8007b66:	6878      	ldr	r0, [r7, #4]
 8007b68:	f000 f9ce 	bl	8007f08 <USBD_CtlError>
 8007b6c:	e004      	b.n	8007b78 <USBD_GetDescriptor+0x2cc>
 8007b6e:	6878      	ldr	r0, [r7, #4]
 8007b70:	f000 fa95 	bl	800809e <USBD_CtlSendStatus>
 8007b74:	e000      	b.n	8007b78 <USBD_GetDescriptor+0x2cc>
 8007b76:	bf00      	nop
 8007b78:	3710      	adds	r7, #16
 8007b7a:	46bd      	mov	sp, r7
 8007b7c:	bd80      	pop	{r7, pc}
 8007b7e:	bf00      	nop

08007b80 <USBD_SetAddress>:
 8007b80:	b580      	push	{r7, lr}
 8007b82:	b084      	sub	sp, #16
 8007b84:	af00      	add	r7, sp, #0
 8007b86:	6078      	str	r0, [r7, #4]
 8007b88:	6039      	str	r1, [r7, #0]
 8007b8a:	683b      	ldr	r3, [r7, #0]
 8007b8c:	889b      	ldrh	r3, [r3, #4]
 8007b8e:	2b00      	cmp	r3, #0
 8007b90:	d131      	bne.n	8007bf6 <USBD_SetAddress+0x76>
 8007b92:	683b      	ldr	r3, [r7, #0]
 8007b94:	88db      	ldrh	r3, [r3, #6]
 8007b96:	2b00      	cmp	r3, #0
 8007b98:	d12d      	bne.n	8007bf6 <USBD_SetAddress+0x76>
 8007b9a:	683b      	ldr	r3, [r7, #0]
 8007b9c:	885b      	ldrh	r3, [r3, #2]
 8007b9e:	2b7f      	cmp	r3, #127	; 0x7f
 8007ba0:	d829      	bhi.n	8007bf6 <USBD_SetAddress+0x76>
 8007ba2:	683b      	ldr	r3, [r7, #0]
 8007ba4:	885b      	ldrh	r3, [r3, #2]
 8007ba6:	b2db      	uxtb	r3, r3
 8007ba8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007bac:	73fb      	strb	r3, [r7, #15]
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007bb4:	b2db      	uxtb	r3, r3
 8007bb6:	2b03      	cmp	r3, #3
 8007bb8:	d104      	bne.n	8007bc4 <USBD_SetAddress+0x44>
 8007bba:	6839      	ldr	r1, [r7, #0]
 8007bbc:	6878      	ldr	r0, [r7, #4]
 8007bbe:	f000 f9a3 	bl	8007f08 <USBD_CtlError>
 8007bc2:	e01d      	b.n	8007c00 <USBD_SetAddress+0x80>
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	7bfa      	ldrb	r2, [r7, #15]
 8007bc8:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
 8007bcc:	7bfb      	ldrb	r3, [r7, #15]
 8007bce:	4619      	mov	r1, r3
 8007bd0:	6878      	ldr	r0, [r7, #4]
 8007bd2:	f000 fefb 	bl	80089cc <USBD_LL_SetUSBAddress>
 8007bd6:	6878      	ldr	r0, [r7, #4]
 8007bd8:	f000 fa61 	bl	800809e <USBD_CtlSendStatus>
 8007bdc:	7bfb      	ldrb	r3, [r7, #15]
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d004      	beq.n	8007bec <USBD_SetAddress+0x6c>
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	2202      	movs	r2, #2
 8007be6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007bea:	e009      	b.n	8007c00 <USBD_SetAddress+0x80>
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	2201      	movs	r2, #1
 8007bf0:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007bf4:	e004      	b.n	8007c00 <USBD_SetAddress+0x80>
 8007bf6:	6839      	ldr	r1, [r7, #0]
 8007bf8:	6878      	ldr	r0, [r7, #4]
 8007bfa:	f000 f985 	bl	8007f08 <USBD_CtlError>
 8007bfe:	bf00      	nop
 8007c00:	bf00      	nop
 8007c02:	3710      	adds	r7, #16
 8007c04:	46bd      	mov	sp, r7
 8007c06:	bd80      	pop	{r7, pc}

08007c08 <USBD_SetConfig>:
 8007c08:	b580      	push	{r7, lr}
 8007c0a:	b084      	sub	sp, #16
 8007c0c:	af00      	add	r7, sp, #0
 8007c0e:	6078      	str	r0, [r7, #4]
 8007c10:	6039      	str	r1, [r7, #0]
 8007c12:	2300      	movs	r3, #0
 8007c14:	73fb      	strb	r3, [r7, #15]
 8007c16:	683b      	ldr	r3, [r7, #0]
 8007c18:	885b      	ldrh	r3, [r3, #2]
 8007c1a:	b2da      	uxtb	r2, r3
 8007c1c:	4b4c      	ldr	r3, [pc, #304]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c1e:	701a      	strb	r2, [r3, #0]
 8007c20:	4b4b      	ldr	r3, [pc, #300]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c22:	781b      	ldrb	r3, [r3, #0]
 8007c24:	2b01      	cmp	r3, #1
 8007c26:	d905      	bls.n	8007c34 <USBD_SetConfig+0x2c>
 8007c28:	6839      	ldr	r1, [r7, #0]
 8007c2a:	6878      	ldr	r0, [r7, #4]
 8007c2c:	f000 f96c 	bl	8007f08 <USBD_CtlError>
 8007c30:	2303      	movs	r3, #3
 8007c32:	e088      	b.n	8007d46 <USBD_SetConfig+0x13e>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007c3a:	b2db      	uxtb	r3, r3
 8007c3c:	2b02      	cmp	r3, #2
 8007c3e:	d002      	beq.n	8007c46 <USBD_SetConfig+0x3e>
 8007c40:	2b03      	cmp	r3, #3
 8007c42:	d025      	beq.n	8007c90 <USBD_SetConfig+0x88>
 8007c44:	e071      	b.n	8007d2a <USBD_SetConfig+0x122>
 8007c46:	4b42      	ldr	r3, [pc, #264]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c48:	781b      	ldrb	r3, [r3, #0]
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	d01c      	beq.n	8007c88 <USBD_SetConfig+0x80>
 8007c4e:	4b40      	ldr	r3, [pc, #256]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c50:	781b      	ldrb	r3, [r3, #0]
 8007c52:	461a      	mov	r2, r3
 8007c54:	687b      	ldr	r3, [r7, #4]
 8007c56:	605a      	str	r2, [r3, #4]
 8007c58:	4b3d      	ldr	r3, [pc, #244]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c5a:	781b      	ldrb	r3, [r3, #0]
 8007c5c:	4619      	mov	r1, r3
 8007c5e:	6878      	ldr	r0, [r7, #4]
 8007c60:	f7ff f948 	bl	8006ef4 <USBD_SetClassConfig>
 8007c64:	4603      	mov	r3, r0
 8007c66:	73fb      	strb	r3, [r7, #15]
 8007c68:	7bfb      	ldrb	r3, [r7, #15]
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	d004      	beq.n	8007c78 <USBD_SetConfig+0x70>
 8007c6e:	6839      	ldr	r1, [r7, #0]
 8007c70:	6878      	ldr	r0, [r7, #4]
 8007c72:	f000 f949 	bl	8007f08 <USBD_CtlError>
 8007c76:	e065      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007c78:	6878      	ldr	r0, [r7, #4]
 8007c7a:	f000 fa10 	bl	800809e <USBD_CtlSendStatus>
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	2203      	movs	r2, #3
 8007c82:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007c86:	e05d      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007c88:	6878      	ldr	r0, [r7, #4]
 8007c8a:	f000 fa08 	bl	800809e <USBD_CtlSendStatus>
 8007c8e:	e059      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007c90:	4b2f      	ldr	r3, [pc, #188]	; (8007d50 <USBD_SetConfig+0x148>)
 8007c92:	781b      	ldrb	r3, [r3, #0]
 8007c94:	2b00      	cmp	r3, #0
 8007c96:	d112      	bne.n	8007cbe <USBD_SetConfig+0xb6>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	2202      	movs	r2, #2
 8007c9c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007ca0:	4b2b      	ldr	r3, [pc, #172]	; (8007d50 <USBD_SetConfig+0x148>)
 8007ca2:	781b      	ldrb	r3, [r3, #0]
 8007ca4:	461a      	mov	r2, r3
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	605a      	str	r2, [r3, #4]
 8007caa:	4b29      	ldr	r3, [pc, #164]	; (8007d50 <USBD_SetConfig+0x148>)
 8007cac:	781b      	ldrb	r3, [r3, #0]
 8007cae:	4619      	mov	r1, r3
 8007cb0:	6878      	ldr	r0, [r7, #4]
 8007cb2:	f7ff f93b 	bl	8006f2c <USBD_ClrClassConfig>
 8007cb6:	6878      	ldr	r0, [r7, #4]
 8007cb8:	f000 f9f1 	bl	800809e <USBD_CtlSendStatus>
 8007cbc:	e042      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007cbe:	4b24      	ldr	r3, [pc, #144]	; (8007d50 <USBD_SetConfig+0x148>)
 8007cc0:	781b      	ldrb	r3, [r3, #0]
 8007cc2:	461a      	mov	r2, r3
 8007cc4:	687b      	ldr	r3, [r7, #4]
 8007cc6:	685b      	ldr	r3, [r3, #4]
 8007cc8:	429a      	cmp	r2, r3
 8007cca:	d02a      	beq.n	8007d22 <USBD_SetConfig+0x11a>
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	685b      	ldr	r3, [r3, #4]
 8007cd0:	b2db      	uxtb	r3, r3
 8007cd2:	4619      	mov	r1, r3
 8007cd4:	6878      	ldr	r0, [r7, #4]
 8007cd6:	f7ff f929 	bl	8006f2c <USBD_ClrClassConfig>
 8007cda:	4b1d      	ldr	r3, [pc, #116]	; (8007d50 <USBD_SetConfig+0x148>)
 8007cdc:	781b      	ldrb	r3, [r3, #0]
 8007cde:	461a      	mov	r2, r3
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	605a      	str	r2, [r3, #4]
 8007ce4:	4b1a      	ldr	r3, [pc, #104]	; (8007d50 <USBD_SetConfig+0x148>)
 8007ce6:	781b      	ldrb	r3, [r3, #0]
 8007ce8:	4619      	mov	r1, r3
 8007cea:	6878      	ldr	r0, [r7, #4]
 8007cec:	f7ff f902 	bl	8006ef4 <USBD_SetClassConfig>
 8007cf0:	4603      	mov	r3, r0
 8007cf2:	73fb      	strb	r3, [r7, #15]
 8007cf4:	7bfb      	ldrb	r3, [r7, #15]
 8007cf6:	2b00      	cmp	r3, #0
 8007cf8:	d00f      	beq.n	8007d1a <USBD_SetConfig+0x112>
 8007cfa:	6839      	ldr	r1, [r7, #0]
 8007cfc:	6878      	ldr	r0, [r7, #4]
 8007cfe:	f000 f903 	bl	8007f08 <USBD_CtlError>
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	685b      	ldr	r3, [r3, #4]
 8007d06:	b2db      	uxtb	r3, r3
 8007d08:	4619      	mov	r1, r3
 8007d0a:	6878      	ldr	r0, [r7, #4]
 8007d0c:	f7ff f90e 	bl	8006f2c <USBD_ClrClassConfig>
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	2202      	movs	r2, #2
 8007d14:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8007d18:	e014      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007d1a:	6878      	ldr	r0, [r7, #4]
 8007d1c:	f000 f9bf 	bl	800809e <USBD_CtlSendStatus>
 8007d20:	e010      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007d22:	6878      	ldr	r0, [r7, #4]
 8007d24:	f000 f9bb 	bl	800809e <USBD_CtlSendStatus>
 8007d28:	e00c      	b.n	8007d44 <USBD_SetConfig+0x13c>
 8007d2a:	6839      	ldr	r1, [r7, #0]
 8007d2c:	6878      	ldr	r0, [r7, #4]
 8007d2e:	f000 f8eb 	bl	8007f08 <USBD_CtlError>
 8007d32:	4b07      	ldr	r3, [pc, #28]	; (8007d50 <USBD_SetConfig+0x148>)
 8007d34:	781b      	ldrb	r3, [r3, #0]
 8007d36:	4619      	mov	r1, r3
 8007d38:	6878      	ldr	r0, [r7, #4]
 8007d3a:	f7ff f8f7 	bl	8006f2c <USBD_ClrClassConfig>
 8007d3e:	2303      	movs	r3, #3
 8007d40:	73fb      	strb	r3, [r7, #15]
 8007d42:	bf00      	nop
 8007d44:	7bfb      	ldrb	r3, [r7, #15]
 8007d46:	4618      	mov	r0, r3
 8007d48:	3710      	adds	r7, #16
 8007d4a:	46bd      	mov	sp, r7
 8007d4c:	bd80      	pop	{r7, pc}
 8007d4e:	bf00      	nop
 8007d50:	20000668 	.word	0x20000668

08007d54 <USBD_GetConfig>:
 8007d54:	b580      	push	{r7, lr}
 8007d56:	b082      	sub	sp, #8
 8007d58:	af00      	add	r7, sp, #0
 8007d5a:	6078      	str	r0, [r7, #4]
 8007d5c:	6039      	str	r1, [r7, #0]
 8007d5e:	683b      	ldr	r3, [r7, #0]
 8007d60:	88db      	ldrh	r3, [r3, #6]
 8007d62:	2b01      	cmp	r3, #1
 8007d64:	d004      	beq.n	8007d70 <USBD_GetConfig+0x1c>
 8007d66:	6839      	ldr	r1, [r7, #0]
 8007d68:	6878      	ldr	r0, [r7, #4]
 8007d6a:	f000 f8cd 	bl	8007f08 <USBD_CtlError>
 8007d6e:	e023      	b.n	8007db8 <USBD_GetConfig+0x64>
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007d76:	b2db      	uxtb	r3, r3
 8007d78:	2b02      	cmp	r3, #2
 8007d7a:	dc02      	bgt.n	8007d82 <USBD_GetConfig+0x2e>
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	dc03      	bgt.n	8007d88 <USBD_GetConfig+0x34>
 8007d80:	e015      	b.n	8007dae <USBD_GetConfig+0x5a>
 8007d82:	2b03      	cmp	r3, #3
 8007d84:	d00b      	beq.n	8007d9e <USBD_GetConfig+0x4a>
 8007d86:	e012      	b.n	8007dae <USBD_GetConfig+0x5a>
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	2200      	movs	r2, #0
 8007d8c:	609a      	str	r2, [r3, #8]
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	3308      	adds	r3, #8
 8007d92:	2201      	movs	r2, #1
 8007d94:	4619      	mov	r1, r3
 8007d96:	6878      	ldr	r0, [r7, #4]
 8007d98:	f000 f927 	bl	8007fea <USBD_CtlSendData>
 8007d9c:	e00c      	b.n	8007db8 <USBD_GetConfig+0x64>
 8007d9e:	687b      	ldr	r3, [r7, #4]
 8007da0:	3304      	adds	r3, #4
 8007da2:	2201      	movs	r2, #1
 8007da4:	4619      	mov	r1, r3
 8007da6:	6878      	ldr	r0, [r7, #4]
 8007da8:	f000 f91f 	bl	8007fea <USBD_CtlSendData>
 8007dac:	e004      	b.n	8007db8 <USBD_GetConfig+0x64>
 8007dae:	6839      	ldr	r1, [r7, #0]
 8007db0:	6878      	ldr	r0, [r7, #4]
 8007db2:	f000 f8a9 	bl	8007f08 <USBD_CtlError>
 8007db6:	bf00      	nop
 8007db8:	bf00      	nop
 8007dba:	3708      	adds	r7, #8
 8007dbc:	46bd      	mov	sp, r7
 8007dbe:	bd80      	pop	{r7, pc}

08007dc0 <USBD_GetStatus>:
 8007dc0:	b580      	push	{r7, lr}
 8007dc2:	b082      	sub	sp, #8
 8007dc4:	af00      	add	r7, sp, #0
 8007dc6:	6078      	str	r0, [r7, #4]
 8007dc8:	6039      	str	r1, [r7, #0]
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007dd0:	b2db      	uxtb	r3, r3
 8007dd2:	3b01      	subs	r3, #1
 8007dd4:	2b02      	cmp	r3, #2
 8007dd6:	d81e      	bhi.n	8007e16 <USBD_GetStatus+0x56>
 8007dd8:	683b      	ldr	r3, [r7, #0]
 8007dda:	88db      	ldrh	r3, [r3, #6]
 8007ddc:	2b02      	cmp	r3, #2
 8007dde:	d004      	beq.n	8007dea <USBD_GetStatus+0x2a>
 8007de0:	6839      	ldr	r1, [r7, #0]
 8007de2:	6878      	ldr	r0, [r7, #4]
 8007de4:	f000 f890 	bl	8007f08 <USBD_CtlError>
 8007de8:	e01a      	b.n	8007e20 <USBD_GetStatus+0x60>
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	2201      	movs	r2, #1
 8007dee:	60da      	str	r2, [r3, #12]
 8007df0:	687b      	ldr	r3, [r7, #4]
 8007df2:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 8007df6:	2b00      	cmp	r3, #0
 8007df8:	d005      	beq.n	8007e06 <USBD_GetStatus+0x46>
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	68db      	ldr	r3, [r3, #12]
 8007dfe:	f043 0202 	orr.w	r2, r3, #2
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	60da      	str	r2, [r3, #12]
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	330c      	adds	r3, #12
 8007e0a:	2202      	movs	r2, #2
 8007e0c:	4619      	mov	r1, r3
 8007e0e:	6878      	ldr	r0, [r7, #4]
 8007e10:	f000 f8eb 	bl	8007fea <USBD_CtlSendData>
 8007e14:	e004      	b.n	8007e20 <USBD_GetStatus+0x60>
 8007e16:	6839      	ldr	r1, [r7, #0]
 8007e18:	6878      	ldr	r0, [r7, #4]
 8007e1a:	f000 f875 	bl	8007f08 <USBD_CtlError>
 8007e1e:	bf00      	nop
 8007e20:	bf00      	nop
 8007e22:	3708      	adds	r7, #8
 8007e24:	46bd      	mov	sp, r7
 8007e26:	bd80      	pop	{r7, pc}

08007e28 <USBD_SetFeature>:
 8007e28:	b580      	push	{r7, lr}
 8007e2a:	b082      	sub	sp, #8
 8007e2c:	af00      	add	r7, sp, #0
 8007e2e:	6078      	str	r0, [r7, #4]
 8007e30:	6039      	str	r1, [r7, #0]
 8007e32:	683b      	ldr	r3, [r7, #0]
 8007e34:	885b      	ldrh	r3, [r3, #2]
 8007e36:	2b01      	cmp	r3, #1
 8007e38:	d106      	bne.n	8007e48 <USBD_SetFeature+0x20>
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	2201      	movs	r2, #1
 8007e3e:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 8007e42:	6878      	ldr	r0, [r7, #4]
 8007e44:	f000 f92b 	bl	800809e <USBD_CtlSendStatus>
 8007e48:	bf00      	nop
 8007e4a:	3708      	adds	r7, #8
 8007e4c:	46bd      	mov	sp, r7
 8007e4e:	bd80      	pop	{r7, pc}

08007e50 <USBD_ClrFeature>:
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b082      	sub	sp, #8
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
 8007e58:	6039      	str	r1, [r7, #0]
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8007e60:	b2db      	uxtb	r3, r3
 8007e62:	3b01      	subs	r3, #1
 8007e64:	2b02      	cmp	r3, #2
 8007e66:	d80b      	bhi.n	8007e80 <USBD_ClrFeature+0x30>
 8007e68:	683b      	ldr	r3, [r7, #0]
 8007e6a:	885b      	ldrh	r3, [r3, #2]
 8007e6c:	2b01      	cmp	r3, #1
 8007e6e:	d10c      	bne.n	8007e8a <USBD_ClrFeature+0x3a>
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	2200      	movs	r2, #0
 8007e74:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 8007e78:	6878      	ldr	r0, [r7, #4]
 8007e7a:	f000 f910 	bl	800809e <USBD_CtlSendStatus>
 8007e7e:	e004      	b.n	8007e8a <USBD_ClrFeature+0x3a>
 8007e80:	6839      	ldr	r1, [r7, #0]
 8007e82:	6878      	ldr	r0, [r7, #4]
 8007e84:	f000 f840 	bl	8007f08 <USBD_CtlError>
 8007e88:	e000      	b.n	8007e8c <USBD_ClrFeature+0x3c>
 8007e8a:	bf00      	nop
 8007e8c:	bf00      	nop
 8007e8e:	3708      	adds	r7, #8
 8007e90:	46bd      	mov	sp, r7
 8007e92:	bd80      	pop	{r7, pc}

08007e94 <USBD_ParseSetupRequest>:
 8007e94:	b580      	push	{r7, lr}
 8007e96:	b084      	sub	sp, #16
 8007e98:	af00      	add	r7, sp, #0
 8007e9a:	6078      	str	r0, [r7, #4]
 8007e9c:	6039      	str	r1, [r7, #0]
 8007e9e:	683b      	ldr	r3, [r7, #0]
 8007ea0:	60fb      	str	r3, [r7, #12]
 8007ea2:	68fb      	ldr	r3, [r7, #12]
 8007ea4:	781a      	ldrb	r2, [r3, #0]
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	701a      	strb	r2, [r3, #0]
 8007eaa:	68fb      	ldr	r3, [r7, #12]
 8007eac:	3301      	adds	r3, #1
 8007eae:	60fb      	str	r3, [r7, #12]
 8007eb0:	68fb      	ldr	r3, [r7, #12]
 8007eb2:	781a      	ldrb	r2, [r3, #0]
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	705a      	strb	r2, [r3, #1]
 8007eb8:	68fb      	ldr	r3, [r7, #12]
 8007eba:	3301      	adds	r3, #1
 8007ebc:	60fb      	str	r3, [r7, #12]
 8007ebe:	68f8      	ldr	r0, [r7, #12]
 8007ec0:	f7ff fabb 	bl	800743a <SWAPBYTE>
 8007ec4:	4603      	mov	r3, r0
 8007ec6:	461a      	mov	r2, r3
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	805a      	strh	r2, [r3, #2]
 8007ecc:	68fb      	ldr	r3, [r7, #12]
 8007ece:	3301      	adds	r3, #1
 8007ed0:	60fb      	str	r3, [r7, #12]
 8007ed2:	68fb      	ldr	r3, [r7, #12]
 8007ed4:	3301      	adds	r3, #1
 8007ed6:	60fb      	str	r3, [r7, #12]
 8007ed8:	68f8      	ldr	r0, [r7, #12]
 8007eda:	f7ff faae 	bl	800743a <SWAPBYTE>
 8007ede:	4603      	mov	r3, r0
 8007ee0:	461a      	mov	r2, r3
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	809a      	strh	r2, [r3, #4]
 8007ee6:	68fb      	ldr	r3, [r7, #12]
 8007ee8:	3301      	adds	r3, #1
 8007eea:	60fb      	str	r3, [r7, #12]
 8007eec:	68fb      	ldr	r3, [r7, #12]
 8007eee:	3301      	adds	r3, #1
 8007ef0:	60fb      	str	r3, [r7, #12]
 8007ef2:	68f8      	ldr	r0, [r7, #12]
 8007ef4:	f7ff faa1 	bl	800743a <SWAPBYTE>
 8007ef8:	4603      	mov	r3, r0
 8007efa:	461a      	mov	r2, r3
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	80da      	strh	r2, [r3, #6]
 8007f00:	bf00      	nop
 8007f02:	3710      	adds	r7, #16
 8007f04:	46bd      	mov	sp, r7
 8007f06:	bd80      	pop	{r7, pc}

08007f08 <USBD_CtlError>:
 8007f08:	b580      	push	{r7, lr}
 8007f0a:	b082      	sub	sp, #8
 8007f0c:	af00      	add	r7, sp, #0
 8007f0e:	6078      	str	r0, [r7, #4]
 8007f10:	6039      	str	r1, [r7, #0]
 8007f12:	2180      	movs	r1, #128	; 0x80
 8007f14:	6878      	ldr	r0, [r7, #4]
 8007f16:	f000 fcef 	bl	80088f8 <USBD_LL_StallEP>
 8007f1a:	2100      	movs	r1, #0
 8007f1c:	6878      	ldr	r0, [r7, #4]
 8007f1e:	f000 fceb 	bl	80088f8 <USBD_LL_StallEP>
 8007f22:	bf00      	nop
 8007f24:	3708      	adds	r7, #8
 8007f26:	46bd      	mov	sp, r7
 8007f28:	bd80      	pop	{r7, pc}

08007f2a <USBD_GetString>:
 8007f2a:	b580      	push	{r7, lr}
 8007f2c:	b086      	sub	sp, #24
 8007f2e:	af00      	add	r7, sp, #0
 8007f30:	60f8      	str	r0, [r7, #12]
 8007f32:	60b9      	str	r1, [r7, #8]
 8007f34:	607a      	str	r2, [r7, #4]
 8007f36:	2300      	movs	r3, #0
 8007f38:	75fb      	strb	r3, [r7, #23]
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	2b00      	cmp	r3, #0
 8007f3e:	d036      	beq.n	8007fae <USBD_GetString+0x84>
 8007f40:	68fb      	ldr	r3, [r7, #12]
 8007f42:	613b      	str	r3, [r7, #16]
 8007f44:	6938      	ldr	r0, [r7, #16]
 8007f46:	f000 f836 	bl	8007fb6 <USBD_GetLen>
 8007f4a:	4603      	mov	r3, r0
 8007f4c:	3301      	adds	r3, #1
 8007f4e:	b29b      	uxth	r3, r3
 8007f50:	005b      	lsls	r3, r3, #1
 8007f52:	b29a      	uxth	r2, r3
 8007f54:	687b      	ldr	r3, [r7, #4]
 8007f56:	801a      	strh	r2, [r3, #0]
 8007f58:	7dfb      	ldrb	r3, [r7, #23]
 8007f5a:	68ba      	ldr	r2, [r7, #8]
 8007f5c:	4413      	add	r3, r2
 8007f5e:	687a      	ldr	r2, [r7, #4]
 8007f60:	7812      	ldrb	r2, [r2, #0]
 8007f62:	701a      	strb	r2, [r3, #0]
 8007f64:	7dfb      	ldrb	r3, [r7, #23]
 8007f66:	3301      	adds	r3, #1
 8007f68:	75fb      	strb	r3, [r7, #23]
 8007f6a:	7dfb      	ldrb	r3, [r7, #23]
 8007f6c:	68ba      	ldr	r2, [r7, #8]
 8007f6e:	4413      	add	r3, r2
 8007f70:	2203      	movs	r2, #3
 8007f72:	701a      	strb	r2, [r3, #0]
 8007f74:	7dfb      	ldrb	r3, [r7, #23]
 8007f76:	3301      	adds	r3, #1
 8007f78:	75fb      	strb	r3, [r7, #23]
 8007f7a:	e013      	b.n	8007fa4 <USBD_GetString+0x7a>
 8007f7c:	7dfb      	ldrb	r3, [r7, #23]
 8007f7e:	68ba      	ldr	r2, [r7, #8]
 8007f80:	4413      	add	r3, r2
 8007f82:	693a      	ldr	r2, [r7, #16]
 8007f84:	7812      	ldrb	r2, [r2, #0]
 8007f86:	701a      	strb	r2, [r3, #0]
 8007f88:	693b      	ldr	r3, [r7, #16]
 8007f8a:	3301      	adds	r3, #1
 8007f8c:	613b      	str	r3, [r7, #16]
 8007f8e:	7dfb      	ldrb	r3, [r7, #23]
 8007f90:	3301      	adds	r3, #1
 8007f92:	75fb      	strb	r3, [r7, #23]
 8007f94:	7dfb      	ldrb	r3, [r7, #23]
 8007f96:	68ba      	ldr	r2, [r7, #8]
 8007f98:	4413      	add	r3, r2
 8007f9a:	2200      	movs	r2, #0
 8007f9c:	701a      	strb	r2, [r3, #0]
 8007f9e:	7dfb      	ldrb	r3, [r7, #23]
 8007fa0:	3301      	adds	r3, #1
 8007fa2:	75fb      	strb	r3, [r7, #23]
 8007fa4:	693b      	ldr	r3, [r7, #16]
 8007fa6:	781b      	ldrb	r3, [r3, #0]
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	d1e7      	bne.n	8007f7c <USBD_GetString+0x52>
 8007fac:	e000      	b.n	8007fb0 <USBD_GetString+0x86>
 8007fae:	bf00      	nop
 8007fb0:	3718      	adds	r7, #24
 8007fb2:	46bd      	mov	sp, r7
 8007fb4:	bd80      	pop	{r7, pc}

08007fb6 <USBD_GetLen>:
 8007fb6:	b480      	push	{r7}
 8007fb8:	b085      	sub	sp, #20
 8007fba:	af00      	add	r7, sp, #0
 8007fbc:	6078      	str	r0, [r7, #4]
 8007fbe:	2300      	movs	r3, #0
 8007fc0:	73fb      	strb	r3, [r7, #15]
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	60bb      	str	r3, [r7, #8]
 8007fc6:	e005      	b.n	8007fd4 <USBD_GetLen+0x1e>
 8007fc8:	7bfb      	ldrb	r3, [r7, #15]
 8007fca:	3301      	adds	r3, #1
 8007fcc:	73fb      	strb	r3, [r7, #15]
 8007fce:	68bb      	ldr	r3, [r7, #8]
 8007fd0:	3301      	adds	r3, #1
 8007fd2:	60bb      	str	r3, [r7, #8]
 8007fd4:	68bb      	ldr	r3, [r7, #8]
 8007fd6:	781b      	ldrb	r3, [r3, #0]
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	d1f5      	bne.n	8007fc8 <USBD_GetLen+0x12>
 8007fdc:	7bfb      	ldrb	r3, [r7, #15]
 8007fde:	4618      	mov	r0, r3
 8007fe0:	3714      	adds	r7, #20
 8007fe2:	46bd      	mov	sp, r7
 8007fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe8:	4770      	bx	lr

08007fea <USBD_CtlSendData>:
 8007fea:	b580      	push	{r7, lr}
 8007fec:	b084      	sub	sp, #16
 8007fee:	af00      	add	r7, sp, #0
 8007ff0:	60f8      	str	r0, [r7, #12]
 8007ff2:	60b9      	str	r1, [r7, #8]
 8007ff4:	607a      	str	r2, [r7, #4]
 8007ff6:	68fb      	ldr	r3, [r7, #12]
 8007ff8:	2202      	movs	r2, #2
 8007ffa:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 8007ffe:	68fb      	ldr	r3, [r7, #12]
 8008000:	687a      	ldr	r2, [r7, #4]
 8008002:	619a      	str	r2, [r3, #24]
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	687a      	ldr	r2, [r7, #4]
 8008008:	61da      	str	r2, [r3, #28]
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	68ba      	ldr	r2, [r7, #8]
 800800e:	2100      	movs	r1, #0
 8008010:	68f8      	ldr	r0, [r7, #12]
 8008012:	f000 fcfa 	bl	8008a0a <USBD_LL_Transmit>
 8008016:	2300      	movs	r3, #0
 8008018:	4618      	mov	r0, r3
 800801a:	3710      	adds	r7, #16
 800801c:	46bd      	mov	sp, r7
 800801e:	bd80      	pop	{r7, pc}

08008020 <USBD_CtlContinueSendData>:
 8008020:	b580      	push	{r7, lr}
 8008022:	b084      	sub	sp, #16
 8008024:	af00      	add	r7, sp, #0
 8008026:	60f8      	str	r0, [r7, #12]
 8008028:	60b9      	str	r1, [r7, #8]
 800802a:	607a      	str	r2, [r7, #4]
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	68ba      	ldr	r2, [r7, #8]
 8008030:	2100      	movs	r1, #0
 8008032:	68f8      	ldr	r0, [r7, #12]
 8008034:	f000 fce9 	bl	8008a0a <USBD_LL_Transmit>
 8008038:	2300      	movs	r3, #0
 800803a:	4618      	mov	r0, r3
 800803c:	3710      	adds	r7, #16
 800803e:	46bd      	mov	sp, r7
 8008040:	bd80      	pop	{r7, pc}

08008042 <USBD_CtlPrepareRx>:
 8008042:	b580      	push	{r7, lr}
 8008044:	b084      	sub	sp, #16
 8008046:	af00      	add	r7, sp, #0
 8008048:	60f8      	str	r0, [r7, #12]
 800804a:	60b9      	str	r1, [r7, #8]
 800804c:	607a      	str	r2, [r7, #4]
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	2203      	movs	r2, #3
 8008052:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	687a      	ldr	r2, [r7, #4]
 800805a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
 800805e:	68fb      	ldr	r3, [r7, #12]
 8008060:	687a      	ldr	r2, [r7, #4]
 8008062:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
 8008066:	687b      	ldr	r3, [r7, #4]
 8008068:	68ba      	ldr	r2, [r7, #8]
 800806a:	2100      	movs	r1, #0
 800806c:	68f8      	ldr	r0, [r7, #12]
 800806e:	f000 fced 	bl	8008a4c <USBD_LL_PrepareReceive>
 8008072:	2300      	movs	r3, #0
 8008074:	4618      	mov	r0, r3
 8008076:	3710      	adds	r7, #16
 8008078:	46bd      	mov	sp, r7
 800807a:	bd80      	pop	{r7, pc}

0800807c <USBD_CtlContinueRx>:
 800807c:	b580      	push	{r7, lr}
 800807e:	b084      	sub	sp, #16
 8008080:	af00      	add	r7, sp, #0
 8008082:	60f8      	str	r0, [r7, #12]
 8008084:	60b9      	str	r1, [r7, #8]
 8008086:	607a      	str	r2, [r7, #4]
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	68ba      	ldr	r2, [r7, #8]
 800808c:	2100      	movs	r1, #0
 800808e:	68f8      	ldr	r0, [r7, #12]
 8008090:	f000 fcdc 	bl	8008a4c <USBD_LL_PrepareReceive>
 8008094:	2300      	movs	r3, #0
 8008096:	4618      	mov	r0, r3
 8008098:	3710      	adds	r7, #16
 800809a:	46bd      	mov	sp, r7
 800809c:	bd80      	pop	{r7, pc}

0800809e <USBD_CtlSendStatus>:
 800809e:	b580      	push	{r7, lr}
 80080a0:	b082      	sub	sp, #8
 80080a2:	af00      	add	r7, sp, #0
 80080a4:	6078      	str	r0, [r7, #4]
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	2204      	movs	r2, #4
 80080aa:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 80080ae:	2300      	movs	r3, #0
 80080b0:	2200      	movs	r2, #0
 80080b2:	2100      	movs	r1, #0
 80080b4:	6878      	ldr	r0, [r7, #4]
 80080b6:	f000 fca8 	bl	8008a0a <USBD_LL_Transmit>
 80080ba:	2300      	movs	r3, #0
 80080bc:	4618      	mov	r0, r3
 80080be:	3708      	adds	r7, #8
 80080c0:	46bd      	mov	sp, r7
 80080c2:	bd80      	pop	{r7, pc}

080080c4 <USBD_CtlReceiveStatus>:
 80080c4:	b580      	push	{r7, lr}
 80080c6:	b082      	sub	sp, #8
 80080c8:	af00      	add	r7, sp, #0
 80080ca:	6078      	str	r0, [r7, #4]
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	2205      	movs	r2, #5
 80080d0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 80080d4:	2300      	movs	r3, #0
 80080d6:	2200      	movs	r2, #0
 80080d8:	2100      	movs	r1, #0
 80080da:	6878      	ldr	r0, [r7, #4]
 80080dc:	f000 fcb6 	bl	8008a4c <USBD_LL_PrepareReceive>
 80080e0:	2300      	movs	r3, #0
 80080e2:	4618      	mov	r0, r3
 80080e4:	3708      	adds	r7, #8
 80080e6:	46bd      	mov	sp, r7
 80080e8:	bd80      	pop	{r7, pc}
	...

080080ec <MX_USB_DEVICE_Init>:
 80080ec:	b580      	push	{r7, lr}
 80080ee:	af00      	add	r7, sp, #0
 80080f0:	2200      	movs	r2, #0
 80080f2:	4912      	ldr	r1, [pc, #72]	; (800813c <MX_USB_DEVICE_Init+0x50>)
 80080f4:	4812      	ldr	r0, [pc, #72]	; (8008140 <MX_USB_DEVICE_Init+0x54>)
 80080f6:	f7fe fe8f 	bl	8006e18 <USBD_Init>
 80080fa:	4603      	mov	r3, r0
 80080fc:	2b00      	cmp	r3, #0
 80080fe:	d001      	beq.n	8008104 <MX_USB_DEVICE_Init+0x18>
 8008100:	f7f8 fc42 	bl	8000988 <Error_Handler>
 8008104:	490f      	ldr	r1, [pc, #60]	; (8008144 <MX_USB_DEVICE_Init+0x58>)
 8008106:	480e      	ldr	r0, [pc, #56]	; (8008140 <MX_USB_DEVICE_Init+0x54>)
 8008108:	f7fe feb6 	bl	8006e78 <USBD_RegisterClass>
 800810c:	4603      	mov	r3, r0
 800810e:	2b00      	cmp	r3, #0
 8008110:	d001      	beq.n	8008116 <MX_USB_DEVICE_Init+0x2a>
 8008112:	f7f8 fc39 	bl	8000988 <Error_Handler>
 8008116:	490c      	ldr	r1, [pc, #48]	; (8008148 <MX_USB_DEVICE_Init+0x5c>)
 8008118:	4809      	ldr	r0, [pc, #36]	; (8008140 <MX_USB_DEVICE_Init+0x54>)
 800811a:	f7fe fdd7 	bl	8006ccc <USBD_CDC_RegisterInterface>
 800811e:	4603      	mov	r3, r0
 8008120:	2b00      	cmp	r3, #0
 8008122:	d001      	beq.n	8008128 <MX_USB_DEVICE_Init+0x3c>
 8008124:	f7f8 fc30 	bl	8000988 <Error_Handler>
 8008128:	4805      	ldr	r0, [pc, #20]	; (8008140 <MX_USB_DEVICE_Init+0x54>)
 800812a:	f7fe fecc 	bl	8006ec6 <USBD_Start>
 800812e:	4603      	mov	r3, r0
 8008130:	2b00      	cmp	r3, #0
 8008132:	d001      	beq.n	8008138 <MX_USB_DEVICE_Init+0x4c>
 8008134:	f7f8 fc28 	bl	8000988 <Error_Handler>
 8008138:	bf00      	nop
 800813a:	bd80      	pop	{r7, pc}
 800813c:	20000130 	.word	0x20000130
 8008140:	20000890 	.word	0x20000890
 8008144:	20000018 	.word	0x20000018
 8008148:	2000011c 	.word	0x2000011c

0800814c <CDC_Init_FS>:
 800814c:	b580      	push	{r7, lr}
 800814e:	af00      	add	r7, sp, #0
 8008150:	2200      	movs	r2, #0
 8008152:	4905      	ldr	r1, [pc, #20]	; (8008168 <CDC_Init_FS+0x1c>)
 8008154:	4805      	ldr	r0, [pc, #20]	; (800816c <CDC_Init_FS+0x20>)
 8008156:	f7fe fdce 	bl	8006cf6 <USBD_CDC_SetTxBuffer>
 800815a:	4905      	ldr	r1, [pc, #20]	; (8008170 <CDC_Init_FS+0x24>)
 800815c:	4803      	ldr	r0, [pc, #12]	; (800816c <CDC_Init_FS+0x20>)
 800815e:	f7fe fde8 	bl	8006d32 <USBD_CDC_SetRxBuffer>
 8008162:	2300      	movs	r3, #0
 8008164:	4618      	mov	r0, r3
 8008166:	bd80      	pop	{r7, pc}
 8008168:	20001360 	.word	0x20001360
 800816c:	20000890 	.word	0x20000890
 8008170:	20000b60 	.word	0x20000b60

08008174 <CDC_DeInit_FS>:
 8008174:	b480      	push	{r7}
 8008176:	af00      	add	r7, sp, #0
 8008178:	2300      	movs	r3, #0
 800817a:	4618      	mov	r0, r3
 800817c:	46bd      	mov	sp, r7
 800817e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008182:	4770      	bx	lr

08008184 <CDC_Control_FS>:
 8008184:	b480      	push	{r7}
 8008186:	b083      	sub	sp, #12
 8008188:	af00      	add	r7, sp, #0
 800818a:	4603      	mov	r3, r0
 800818c:	6039      	str	r1, [r7, #0]
 800818e:	71fb      	strb	r3, [r7, #7]
 8008190:	4613      	mov	r3, r2
 8008192:	80bb      	strh	r3, [r7, #4]
 8008194:	79fb      	ldrb	r3, [r7, #7]
 8008196:	2b23      	cmp	r3, #35	; 0x23
 8008198:	d84a      	bhi.n	8008230 <CDC_Control_FS+0xac>
 800819a:	a201      	add	r2, pc, #4	; (adr r2, 80081a0 <CDC_Control_FS+0x1c>)
 800819c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80081a0:	08008231 	.word	0x08008231
 80081a4:	08008231 	.word	0x08008231
 80081a8:	08008231 	.word	0x08008231
 80081ac:	08008231 	.word	0x08008231
 80081b0:	08008231 	.word	0x08008231
 80081b4:	08008231 	.word	0x08008231
 80081b8:	08008231 	.word	0x08008231
 80081bc:	08008231 	.word	0x08008231
 80081c0:	08008231 	.word	0x08008231
 80081c4:	08008231 	.word	0x08008231
 80081c8:	08008231 	.word	0x08008231
 80081cc:	08008231 	.word	0x08008231
 80081d0:	08008231 	.word	0x08008231
 80081d4:	08008231 	.word	0x08008231
 80081d8:	08008231 	.word	0x08008231
 80081dc:	08008231 	.word	0x08008231
 80081e0:	08008231 	.word	0x08008231
 80081e4:	08008231 	.word	0x08008231
 80081e8:	08008231 	.word	0x08008231
 80081ec:	08008231 	.word	0x08008231
 80081f0:	08008231 	.word	0x08008231
 80081f4:	08008231 	.word	0x08008231
 80081f8:	08008231 	.word	0x08008231
 80081fc:	08008231 	.word	0x08008231
 8008200:	08008231 	.word	0x08008231
 8008204:	08008231 	.word	0x08008231
 8008208:	08008231 	.word	0x08008231
 800820c:	08008231 	.word	0x08008231
 8008210:	08008231 	.word	0x08008231
 8008214:	08008231 	.word	0x08008231
 8008218:	08008231 	.word	0x08008231
 800821c:	08008231 	.word	0x08008231
 8008220:	08008231 	.word	0x08008231
 8008224:	08008231 	.word	0x08008231
 8008228:	08008231 	.word	0x08008231
 800822c:	08008231 	.word	0x08008231
 8008230:	bf00      	nop
 8008232:	2300      	movs	r3, #0
 8008234:	4618      	mov	r0, r3
 8008236:	370c      	adds	r7, #12
 8008238:	46bd      	mov	sp, r7
 800823a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800823e:	4770      	bx	lr

08008240 <CDC_Receive_FS>:
 8008240:	b580      	push	{r7, lr}
 8008242:	b082      	sub	sp, #8
 8008244:	af00      	add	r7, sp, #0
 8008246:	6078      	str	r0, [r7, #4]
 8008248:	6039      	str	r1, [r7, #0]
 800824a:	6879      	ldr	r1, [r7, #4]
 800824c:	4805      	ldr	r0, [pc, #20]	; (8008264 <CDC_Receive_FS+0x24>)
 800824e:	f7fe fd70 	bl	8006d32 <USBD_CDC_SetRxBuffer>
 8008252:	4804      	ldr	r0, [pc, #16]	; (8008264 <CDC_Receive_FS+0x24>)
 8008254:	f7fe fdb6 	bl	8006dc4 <USBD_CDC_ReceivePacket>
 8008258:	2300      	movs	r3, #0
 800825a:	4618      	mov	r0, r3
 800825c:	3708      	adds	r7, #8
 800825e:	46bd      	mov	sp, r7
 8008260:	bd80      	pop	{r7, pc}
 8008262:	bf00      	nop
 8008264:	20000890 	.word	0x20000890

08008268 <CDC_Transmit_FS>:
 8008268:	b580      	push	{r7, lr}
 800826a:	b084      	sub	sp, #16
 800826c:	af00      	add	r7, sp, #0
 800826e:	6078      	str	r0, [r7, #4]
 8008270:	460b      	mov	r3, r1
 8008272:	807b      	strh	r3, [r7, #2]
 8008274:	2300      	movs	r3, #0
 8008276:	73fb      	strb	r3, [r7, #15]
 8008278:	4b0d      	ldr	r3, [pc, #52]	; (80082b0 <CDC_Transmit_FS+0x48>)
 800827a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 800827e:	60bb      	str	r3, [r7, #8]
 8008280:	68bb      	ldr	r3, [r7, #8]
 8008282:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 8008286:	2b00      	cmp	r3, #0
 8008288:	d001      	beq.n	800828e <CDC_Transmit_FS+0x26>
 800828a:	2301      	movs	r3, #1
 800828c:	e00b      	b.n	80082a6 <CDC_Transmit_FS+0x3e>
 800828e:	887b      	ldrh	r3, [r7, #2]
 8008290:	461a      	mov	r2, r3
 8008292:	6879      	ldr	r1, [r7, #4]
 8008294:	4806      	ldr	r0, [pc, #24]	; (80082b0 <CDC_Transmit_FS+0x48>)
 8008296:	f7fe fd2e 	bl	8006cf6 <USBD_CDC_SetTxBuffer>
 800829a:	4805      	ldr	r0, [pc, #20]	; (80082b0 <CDC_Transmit_FS+0x48>)
 800829c:	f7fe fd62 	bl	8006d64 <USBD_CDC_TransmitPacket>
 80082a0:	4603      	mov	r3, r0
 80082a2:	73fb      	strb	r3, [r7, #15]
 80082a4:	7bfb      	ldrb	r3, [r7, #15]
 80082a6:	4618      	mov	r0, r3
 80082a8:	3710      	adds	r7, #16
 80082aa:	46bd      	mov	sp, r7
 80082ac:	bd80      	pop	{r7, pc}
 80082ae:	bf00      	nop
 80082b0:	20000890 	.word	0x20000890

080082b4 <CDC_TransmitCplt_FS>:
 80082b4:	b480      	push	{r7}
 80082b6:	b087      	sub	sp, #28
 80082b8:	af00      	add	r7, sp, #0
 80082ba:	60f8      	str	r0, [r7, #12]
 80082bc:	60b9      	str	r1, [r7, #8]
 80082be:	4613      	mov	r3, r2
 80082c0:	71fb      	strb	r3, [r7, #7]
 80082c2:	2300      	movs	r3, #0
 80082c4:	75fb      	strb	r3, [r7, #23]
 80082c6:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80082ca:	4618      	mov	r0, r3
 80082cc:	371c      	adds	r7, #28
 80082ce:	46bd      	mov	sp, r7
 80082d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082d4:	4770      	bx	lr
	...

080082d8 <USBD_FS_DeviceDescriptor>:
 80082d8:	b480      	push	{r7}
 80082da:	b083      	sub	sp, #12
 80082dc:	af00      	add	r7, sp, #0
 80082de:	4603      	mov	r3, r0
 80082e0:	6039      	str	r1, [r7, #0]
 80082e2:	71fb      	strb	r3, [r7, #7]
 80082e4:	683b      	ldr	r3, [r7, #0]
 80082e6:	2212      	movs	r2, #18
 80082e8:	801a      	strh	r2, [r3, #0]
 80082ea:	4b03      	ldr	r3, [pc, #12]	; (80082f8 <USBD_FS_DeviceDescriptor+0x20>)
 80082ec:	4618      	mov	r0, r3
 80082ee:	370c      	adds	r7, #12
 80082f0:	46bd      	mov	sp, r7
 80082f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082f6:	4770      	bx	lr
 80082f8:	2000014c 	.word	0x2000014c

080082fc <USBD_FS_LangIDStrDescriptor>:
 80082fc:	b480      	push	{r7}
 80082fe:	b083      	sub	sp, #12
 8008300:	af00      	add	r7, sp, #0
 8008302:	4603      	mov	r3, r0
 8008304:	6039      	str	r1, [r7, #0]
 8008306:	71fb      	strb	r3, [r7, #7]
 8008308:	683b      	ldr	r3, [r7, #0]
 800830a:	2204      	movs	r2, #4
 800830c:	801a      	strh	r2, [r3, #0]
 800830e:	4b03      	ldr	r3, [pc, #12]	; (800831c <USBD_FS_LangIDStrDescriptor+0x20>)
 8008310:	4618      	mov	r0, r3
 8008312:	370c      	adds	r7, #12
 8008314:	46bd      	mov	sp, r7
 8008316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800831a:	4770      	bx	lr
 800831c:	20000160 	.word	0x20000160

08008320 <USBD_FS_ProductStrDescriptor>:
 8008320:	b580      	push	{r7, lr}
 8008322:	b082      	sub	sp, #8
 8008324:	af00      	add	r7, sp, #0
 8008326:	4603      	mov	r3, r0
 8008328:	6039      	str	r1, [r7, #0]
 800832a:	71fb      	strb	r3, [r7, #7]
 800832c:	79fb      	ldrb	r3, [r7, #7]
 800832e:	2b00      	cmp	r3, #0
 8008330:	d105      	bne.n	800833e <USBD_FS_ProductStrDescriptor+0x1e>
 8008332:	683a      	ldr	r2, [r7, #0]
 8008334:	4907      	ldr	r1, [pc, #28]	; (8008354 <USBD_FS_ProductStrDescriptor+0x34>)
 8008336:	4808      	ldr	r0, [pc, #32]	; (8008358 <USBD_FS_ProductStrDescriptor+0x38>)
 8008338:	f7ff fdf7 	bl	8007f2a <USBD_GetString>
 800833c:	e004      	b.n	8008348 <USBD_FS_ProductStrDescriptor+0x28>
 800833e:	683a      	ldr	r2, [r7, #0]
 8008340:	4904      	ldr	r1, [pc, #16]	; (8008354 <USBD_FS_ProductStrDescriptor+0x34>)
 8008342:	4805      	ldr	r0, [pc, #20]	; (8008358 <USBD_FS_ProductStrDescriptor+0x38>)
 8008344:	f7ff fdf1 	bl	8007f2a <USBD_GetString>
 8008348:	4b02      	ldr	r3, [pc, #8]	; (8008354 <USBD_FS_ProductStrDescriptor+0x34>)
 800834a:	4618      	mov	r0, r3
 800834c:	3708      	adds	r7, #8
 800834e:	46bd      	mov	sp, r7
 8008350:	bd80      	pop	{r7, pc}
 8008352:	bf00      	nop
 8008354:	20001b60 	.word	0x20001b60
 8008358:	08008ca0 	.word	0x08008ca0

0800835c <USBD_FS_ManufacturerStrDescriptor>:
 800835c:	b580      	push	{r7, lr}
 800835e:	b082      	sub	sp, #8
 8008360:	af00      	add	r7, sp, #0
 8008362:	4603      	mov	r3, r0
 8008364:	6039      	str	r1, [r7, #0]
 8008366:	71fb      	strb	r3, [r7, #7]
 8008368:	683a      	ldr	r2, [r7, #0]
 800836a:	4904      	ldr	r1, [pc, #16]	; (800837c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800836c:	4804      	ldr	r0, [pc, #16]	; (8008380 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800836e:	f7ff fddc 	bl	8007f2a <USBD_GetString>
 8008372:	4b02      	ldr	r3, [pc, #8]	; (800837c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8008374:	4618      	mov	r0, r3
 8008376:	3708      	adds	r7, #8
 8008378:	46bd      	mov	sp, r7
 800837a:	bd80      	pop	{r7, pc}
 800837c:	20001b60 	.word	0x20001b60
 8008380:	08008cb8 	.word	0x08008cb8

08008384 <USBD_FS_SerialStrDescriptor>:
 8008384:	b580      	push	{r7, lr}
 8008386:	b082      	sub	sp, #8
 8008388:	af00      	add	r7, sp, #0
 800838a:	4603      	mov	r3, r0
 800838c:	6039      	str	r1, [r7, #0]
 800838e:	71fb      	strb	r3, [r7, #7]
 8008390:	683b      	ldr	r3, [r7, #0]
 8008392:	221a      	movs	r2, #26
 8008394:	801a      	strh	r2, [r3, #0]
 8008396:	f000 f843 	bl	8008420 <Get_SerialNum>
 800839a:	4b02      	ldr	r3, [pc, #8]	; (80083a4 <USBD_FS_SerialStrDescriptor+0x20>)
 800839c:	4618      	mov	r0, r3
 800839e:	3708      	adds	r7, #8
 80083a0:	46bd      	mov	sp, r7
 80083a2:	bd80      	pop	{r7, pc}
 80083a4:	20000164 	.word	0x20000164

080083a8 <USBD_FS_ConfigStrDescriptor>:
 80083a8:	b580      	push	{r7, lr}
 80083aa:	b082      	sub	sp, #8
 80083ac:	af00      	add	r7, sp, #0
 80083ae:	4603      	mov	r3, r0
 80083b0:	6039      	str	r1, [r7, #0]
 80083b2:	71fb      	strb	r3, [r7, #7]
 80083b4:	79fb      	ldrb	r3, [r7, #7]
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	d105      	bne.n	80083c6 <USBD_FS_ConfigStrDescriptor+0x1e>
 80083ba:	683a      	ldr	r2, [r7, #0]
 80083bc:	4907      	ldr	r1, [pc, #28]	; (80083dc <USBD_FS_ConfigStrDescriptor+0x34>)
 80083be:	4808      	ldr	r0, [pc, #32]	; (80083e0 <USBD_FS_ConfigStrDescriptor+0x38>)
 80083c0:	f7ff fdb3 	bl	8007f2a <USBD_GetString>
 80083c4:	e004      	b.n	80083d0 <USBD_FS_ConfigStrDescriptor+0x28>
 80083c6:	683a      	ldr	r2, [r7, #0]
 80083c8:	4904      	ldr	r1, [pc, #16]	; (80083dc <USBD_FS_ConfigStrDescriptor+0x34>)
 80083ca:	4805      	ldr	r0, [pc, #20]	; (80083e0 <USBD_FS_ConfigStrDescriptor+0x38>)
 80083cc:	f7ff fdad 	bl	8007f2a <USBD_GetString>
 80083d0:	4b02      	ldr	r3, [pc, #8]	; (80083dc <USBD_FS_ConfigStrDescriptor+0x34>)
 80083d2:	4618      	mov	r0, r3
 80083d4:	3708      	adds	r7, #8
 80083d6:	46bd      	mov	sp, r7
 80083d8:	bd80      	pop	{r7, pc}
 80083da:	bf00      	nop
 80083dc:	20001b60 	.word	0x20001b60
 80083e0:	08008ccc 	.word	0x08008ccc

080083e4 <USBD_FS_InterfaceStrDescriptor>:
 80083e4:	b580      	push	{r7, lr}
 80083e6:	b082      	sub	sp, #8
 80083e8:	af00      	add	r7, sp, #0
 80083ea:	4603      	mov	r3, r0
 80083ec:	6039      	str	r1, [r7, #0]
 80083ee:	71fb      	strb	r3, [r7, #7]
 80083f0:	79fb      	ldrb	r3, [r7, #7]
 80083f2:	2b00      	cmp	r3, #0
 80083f4:	d105      	bne.n	8008402 <USBD_FS_InterfaceStrDescriptor+0x1e>
 80083f6:	683a      	ldr	r2, [r7, #0]
 80083f8:	4907      	ldr	r1, [pc, #28]	; (8008418 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80083fa:	4808      	ldr	r0, [pc, #32]	; (800841c <USBD_FS_InterfaceStrDescriptor+0x38>)
 80083fc:	f7ff fd95 	bl	8007f2a <USBD_GetString>
 8008400:	e004      	b.n	800840c <USBD_FS_InterfaceStrDescriptor+0x28>
 8008402:	683a      	ldr	r2, [r7, #0]
 8008404:	4904      	ldr	r1, [pc, #16]	; (8008418 <USBD_FS_InterfaceStrDescriptor+0x34>)
 8008406:	4805      	ldr	r0, [pc, #20]	; (800841c <USBD_FS_InterfaceStrDescriptor+0x38>)
 8008408:	f7ff fd8f 	bl	8007f2a <USBD_GetString>
 800840c:	4b02      	ldr	r3, [pc, #8]	; (8008418 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800840e:	4618      	mov	r0, r3
 8008410:	3708      	adds	r7, #8
 8008412:	46bd      	mov	sp, r7
 8008414:	bd80      	pop	{r7, pc}
 8008416:	bf00      	nop
 8008418:	20001b60 	.word	0x20001b60
 800841c:	08008cd8 	.word	0x08008cd8

08008420 <Get_SerialNum>:
 8008420:	b580      	push	{r7, lr}
 8008422:	b084      	sub	sp, #16
 8008424:	af00      	add	r7, sp, #0
 8008426:	4b0f      	ldr	r3, [pc, #60]	; (8008464 <Get_SerialNum+0x44>)
 8008428:	681b      	ldr	r3, [r3, #0]
 800842a:	60fb      	str	r3, [r7, #12]
 800842c:	4b0e      	ldr	r3, [pc, #56]	; (8008468 <Get_SerialNum+0x48>)
 800842e:	681b      	ldr	r3, [r3, #0]
 8008430:	60bb      	str	r3, [r7, #8]
 8008432:	4b0e      	ldr	r3, [pc, #56]	; (800846c <Get_SerialNum+0x4c>)
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	607b      	str	r3, [r7, #4]
 8008438:	68fa      	ldr	r2, [r7, #12]
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	4413      	add	r3, r2
 800843e:	60fb      	str	r3, [r7, #12]
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	2b00      	cmp	r3, #0
 8008444:	d009      	beq.n	800845a <Get_SerialNum+0x3a>
 8008446:	2208      	movs	r2, #8
 8008448:	4909      	ldr	r1, [pc, #36]	; (8008470 <Get_SerialNum+0x50>)
 800844a:	68f8      	ldr	r0, [r7, #12]
 800844c:	f000 f814 	bl	8008478 <IntToUnicode>
 8008450:	2204      	movs	r2, #4
 8008452:	4908      	ldr	r1, [pc, #32]	; (8008474 <Get_SerialNum+0x54>)
 8008454:	68b8      	ldr	r0, [r7, #8]
 8008456:	f000 f80f 	bl	8008478 <IntToUnicode>
 800845a:	bf00      	nop
 800845c:	3710      	adds	r7, #16
 800845e:	46bd      	mov	sp, r7
 8008460:	bd80      	pop	{r7, pc}
 8008462:	bf00      	nop
 8008464:	1fff7a10 	.word	0x1fff7a10
 8008468:	1fff7a14 	.word	0x1fff7a14
 800846c:	1fff7a18 	.word	0x1fff7a18
 8008470:	20000166 	.word	0x20000166
 8008474:	20000176 	.word	0x20000176

08008478 <IntToUnicode>:
 8008478:	b480      	push	{r7}
 800847a:	b087      	sub	sp, #28
 800847c:	af00      	add	r7, sp, #0
 800847e:	60f8      	str	r0, [r7, #12]
 8008480:	60b9      	str	r1, [r7, #8]
 8008482:	4613      	mov	r3, r2
 8008484:	71fb      	strb	r3, [r7, #7]
 8008486:	2300      	movs	r3, #0
 8008488:	75fb      	strb	r3, [r7, #23]
 800848a:	2300      	movs	r3, #0
 800848c:	75fb      	strb	r3, [r7, #23]
 800848e:	e027      	b.n	80084e0 <IntToUnicode+0x68>
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	0f1b      	lsrs	r3, r3, #28
 8008494:	2b09      	cmp	r3, #9
 8008496:	d80b      	bhi.n	80084b0 <IntToUnicode+0x38>
 8008498:	68fb      	ldr	r3, [r7, #12]
 800849a:	0f1b      	lsrs	r3, r3, #28
 800849c:	b2da      	uxtb	r2, r3
 800849e:	7dfb      	ldrb	r3, [r7, #23]
 80084a0:	005b      	lsls	r3, r3, #1
 80084a2:	4619      	mov	r1, r3
 80084a4:	68bb      	ldr	r3, [r7, #8]
 80084a6:	440b      	add	r3, r1
 80084a8:	3230      	adds	r2, #48	; 0x30
 80084aa:	b2d2      	uxtb	r2, r2
 80084ac:	701a      	strb	r2, [r3, #0]
 80084ae:	e00a      	b.n	80084c6 <IntToUnicode+0x4e>
 80084b0:	68fb      	ldr	r3, [r7, #12]
 80084b2:	0f1b      	lsrs	r3, r3, #28
 80084b4:	b2da      	uxtb	r2, r3
 80084b6:	7dfb      	ldrb	r3, [r7, #23]
 80084b8:	005b      	lsls	r3, r3, #1
 80084ba:	4619      	mov	r1, r3
 80084bc:	68bb      	ldr	r3, [r7, #8]
 80084be:	440b      	add	r3, r1
 80084c0:	3237      	adds	r2, #55	; 0x37
 80084c2:	b2d2      	uxtb	r2, r2
 80084c4:	701a      	strb	r2, [r3, #0]
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	011b      	lsls	r3, r3, #4
 80084ca:	60fb      	str	r3, [r7, #12]
 80084cc:	7dfb      	ldrb	r3, [r7, #23]
 80084ce:	005b      	lsls	r3, r3, #1
 80084d0:	3301      	adds	r3, #1
 80084d2:	68ba      	ldr	r2, [r7, #8]
 80084d4:	4413      	add	r3, r2
 80084d6:	2200      	movs	r2, #0
 80084d8:	701a      	strb	r2, [r3, #0]
 80084da:	7dfb      	ldrb	r3, [r7, #23]
 80084dc:	3301      	adds	r3, #1
 80084de:	75fb      	strb	r3, [r7, #23]
 80084e0:	7dfa      	ldrb	r2, [r7, #23]
 80084e2:	79fb      	ldrb	r3, [r7, #7]
 80084e4:	429a      	cmp	r2, r3
 80084e6:	d3d3      	bcc.n	8008490 <IntToUnicode+0x18>
 80084e8:	bf00      	nop
 80084ea:	bf00      	nop
 80084ec:	371c      	adds	r7, #28
 80084ee:	46bd      	mov	sp, r7
 80084f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084f4:	4770      	bx	lr
	...

080084f8 <HAL_PCD_MspInit>:
 80084f8:	b580      	push	{r7, lr}
 80084fa:	b08a      	sub	sp, #40	; 0x28
 80084fc:	af00      	add	r7, sp, #0
 80084fe:	6078      	str	r0, [r7, #4]
 8008500:	f107 0314 	add.w	r3, r7, #20
 8008504:	2200      	movs	r2, #0
 8008506:	601a      	str	r2, [r3, #0]
 8008508:	605a      	str	r2, [r3, #4]
 800850a:	609a      	str	r2, [r3, #8]
 800850c:	60da      	str	r2, [r3, #12]
 800850e:	611a      	str	r2, [r3, #16]
 8008510:	687b      	ldr	r3, [r7, #4]
 8008512:	681b      	ldr	r3, [r3, #0]
 8008514:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008518:	d147      	bne.n	80085aa <HAL_PCD_MspInit+0xb2>
 800851a:	2300      	movs	r3, #0
 800851c:	613b      	str	r3, [r7, #16]
 800851e:	4b25      	ldr	r3, [pc, #148]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008520:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008522:	4a24      	ldr	r2, [pc, #144]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008524:	f043 0301 	orr.w	r3, r3, #1
 8008528:	6313      	str	r3, [r2, #48]	; 0x30
 800852a:	4b22      	ldr	r3, [pc, #136]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 800852c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800852e:	f003 0301 	and.w	r3, r3, #1
 8008532:	613b      	str	r3, [r7, #16]
 8008534:	693b      	ldr	r3, [r7, #16]
 8008536:	f44f 7300 	mov.w	r3, #512	; 0x200
 800853a:	617b      	str	r3, [r7, #20]
 800853c:	2300      	movs	r3, #0
 800853e:	61bb      	str	r3, [r7, #24]
 8008540:	2300      	movs	r3, #0
 8008542:	61fb      	str	r3, [r7, #28]
 8008544:	f107 0314 	add.w	r3, r7, #20
 8008548:	4619      	mov	r1, r3
 800854a:	481b      	ldr	r0, [pc, #108]	; (80085b8 <HAL_PCD_MspInit+0xc0>)
 800854c:	f7f9 fcfa 	bl	8001f44 <HAL_GPIO_Init>
 8008550:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8008554:	617b      	str	r3, [r7, #20]
 8008556:	2302      	movs	r3, #2
 8008558:	61bb      	str	r3, [r7, #24]
 800855a:	2300      	movs	r3, #0
 800855c:	61fb      	str	r3, [r7, #28]
 800855e:	2300      	movs	r3, #0
 8008560:	623b      	str	r3, [r7, #32]
 8008562:	230a      	movs	r3, #10
 8008564:	627b      	str	r3, [r7, #36]	; 0x24
 8008566:	f107 0314 	add.w	r3, r7, #20
 800856a:	4619      	mov	r1, r3
 800856c:	4812      	ldr	r0, [pc, #72]	; (80085b8 <HAL_PCD_MspInit+0xc0>)
 800856e:	f7f9 fce9 	bl	8001f44 <HAL_GPIO_Init>
 8008572:	4b10      	ldr	r3, [pc, #64]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008574:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008576:	4a0f      	ldr	r2, [pc, #60]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008578:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800857c:	6353      	str	r3, [r2, #52]	; 0x34
 800857e:	2300      	movs	r3, #0
 8008580:	60fb      	str	r3, [r7, #12]
 8008582:	4b0c      	ldr	r3, [pc, #48]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008584:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008586:	4a0b      	ldr	r2, [pc, #44]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008588:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800858c:	6453      	str	r3, [r2, #68]	; 0x44
 800858e:	4b09      	ldr	r3, [pc, #36]	; (80085b4 <HAL_PCD_MspInit+0xbc>)
 8008590:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008592:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008596:	60fb      	str	r3, [r7, #12]
 8008598:	68fb      	ldr	r3, [r7, #12]
 800859a:	2200      	movs	r2, #0
 800859c:	2100      	movs	r1, #0
 800859e:	2043      	movs	r0, #67	; 0x43
 80085a0:	f7f9 fc99 	bl	8001ed6 <HAL_NVIC_SetPriority>
 80085a4:	2043      	movs	r0, #67	; 0x43
 80085a6:	f7f9 fcb2 	bl	8001f0e <HAL_NVIC_EnableIRQ>
 80085aa:	bf00      	nop
 80085ac:	3728      	adds	r7, #40	; 0x28
 80085ae:	46bd      	mov	sp, r7
 80085b0:	bd80      	pop	{r7, pc}
 80085b2:	bf00      	nop
 80085b4:	40023800 	.word	0x40023800
 80085b8:	40020000 	.word	0x40020000

080085bc <HAL_PCD_SetupStageCallback>:
 80085bc:	b580      	push	{r7, lr}
 80085be:	b082      	sub	sp, #8
 80085c0:	af00      	add	r7, sp, #0
 80085c2:	6078      	str	r0, [r7, #4]
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 80085d0:	4619      	mov	r1, r3
 80085d2:	4610      	mov	r0, r2
 80085d4:	f7fe fcc2 	bl	8006f5c <USBD_LL_SetupStage>
 80085d8:	bf00      	nop
 80085da:	3708      	adds	r7, #8
 80085dc:	46bd      	mov	sp, r7
 80085de:	bd80      	pop	{r7, pc}

080085e0 <HAL_PCD_DataOutStageCallback>:
 80085e0:	b580      	push	{r7, lr}
 80085e2:	b082      	sub	sp, #8
 80085e4:	af00      	add	r7, sp, #0
 80085e6:	6078      	str	r0, [r7, #4]
 80085e8:	460b      	mov	r3, r1
 80085ea:	70fb      	strb	r3, [r7, #3]
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	f8d3 0404 	ldr.w	r0, [r3, #1028]	; 0x404
 80085f2:	78fa      	ldrb	r2, [r7, #3]
 80085f4:	6879      	ldr	r1, [r7, #4]
 80085f6:	4613      	mov	r3, r2
 80085f8:	00db      	lsls	r3, r3, #3
 80085fa:	1a9b      	subs	r3, r3, r2
 80085fc:	009b      	lsls	r3, r3, #2
 80085fe:	440b      	add	r3, r1
 8008600:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8008604:	681a      	ldr	r2, [r3, #0]
 8008606:	78fb      	ldrb	r3, [r7, #3]
 8008608:	4619      	mov	r1, r3
 800860a:	f7fe fcfc 	bl	8007006 <USBD_LL_DataOutStage>
 800860e:	bf00      	nop
 8008610:	3708      	adds	r7, #8
 8008612:	46bd      	mov	sp, r7
 8008614:	bd80      	pop	{r7, pc}

08008616 <HAL_PCD_DataInStageCallback>:
 8008616:	b580      	push	{r7, lr}
 8008618:	b082      	sub	sp, #8
 800861a:	af00      	add	r7, sp, #0
 800861c:	6078      	str	r0, [r7, #4]
 800861e:	460b      	mov	r3, r1
 8008620:	70fb      	strb	r3, [r7, #3]
 8008622:	687b      	ldr	r3, [r7, #4]
 8008624:	f8d3 0404 	ldr.w	r0, [r3, #1028]	; 0x404
 8008628:	78fa      	ldrb	r2, [r7, #3]
 800862a:	6879      	ldr	r1, [r7, #4]
 800862c:	4613      	mov	r3, r2
 800862e:	00db      	lsls	r3, r3, #3
 8008630:	1a9b      	subs	r3, r3, r2
 8008632:	009b      	lsls	r3, r3, #2
 8008634:	440b      	add	r3, r1
 8008636:	3348      	adds	r3, #72	; 0x48
 8008638:	681a      	ldr	r2, [r3, #0]
 800863a:	78fb      	ldrb	r3, [r7, #3]
 800863c:	4619      	mov	r1, r3
 800863e:	f7fe fd45 	bl	80070cc <USBD_LL_DataInStage>
 8008642:	bf00      	nop
 8008644:	3708      	adds	r7, #8
 8008646:	46bd      	mov	sp, r7
 8008648:	bd80      	pop	{r7, pc}

0800864a <HAL_PCD_SOFCallback>:
 800864a:	b580      	push	{r7, lr}
 800864c:	b082      	sub	sp, #8
 800864e:	af00      	add	r7, sp, #0
 8008650:	6078      	str	r0, [r7, #4]
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008658:	4618      	mov	r0, r3
 800865a:	f7fe fe59 	bl	8007310 <USBD_LL_SOF>
 800865e:	bf00      	nop
 8008660:	3708      	adds	r7, #8
 8008662:	46bd      	mov	sp, r7
 8008664:	bd80      	pop	{r7, pc}

08008666 <HAL_PCD_ResetCallback>:
 8008666:	b580      	push	{r7, lr}
 8008668:	b084      	sub	sp, #16
 800866a:	af00      	add	r7, sp, #0
 800866c:	6078      	str	r0, [r7, #4]
 800866e:	2301      	movs	r3, #1
 8008670:	73fb      	strb	r3, [r7, #15]
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	68db      	ldr	r3, [r3, #12]
 8008676:	2b00      	cmp	r3, #0
 8008678:	d102      	bne.n	8008680 <HAL_PCD_ResetCallback+0x1a>
 800867a:	2300      	movs	r3, #0
 800867c:	73fb      	strb	r3, [r7, #15]
 800867e:	e008      	b.n	8008692 <HAL_PCD_ResetCallback+0x2c>
 8008680:	687b      	ldr	r3, [r7, #4]
 8008682:	68db      	ldr	r3, [r3, #12]
 8008684:	2b02      	cmp	r3, #2
 8008686:	d102      	bne.n	800868e <HAL_PCD_ResetCallback+0x28>
 8008688:	2301      	movs	r3, #1
 800868a:	73fb      	strb	r3, [r7, #15]
 800868c:	e001      	b.n	8008692 <HAL_PCD_ResetCallback+0x2c>
 800868e:	f7f8 f97b 	bl	8000988 <Error_Handler>
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008698:	7bfa      	ldrb	r2, [r7, #15]
 800869a:	4611      	mov	r1, r2
 800869c:	4618      	mov	r0, r3
 800869e:	f7fe fdf9 	bl	8007294 <USBD_LL_SetSpeed>
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 80086a8:	4618      	mov	r0, r3
 80086aa:	f7fe fda5 	bl	80071f8 <USBD_LL_Reset>
 80086ae:	bf00      	nop
 80086b0:	3710      	adds	r7, #16
 80086b2:	46bd      	mov	sp, r7
 80086b4:	bd80      	pop	{r7, pc}
	...

080086b8 <HAL_PCD_SuspendCallback>:
 80086b8:	b580      	push	{r7, lr}
 80086ba:	b082      	sub	sp, #8
 80086bc:	af00      	add	r7, sp, #0
 80086be:	6078      	str	r0, [r7, #4]
 80086c0:	687b      	ldr	r3, [r7, #4]
 80086c2:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 80086c6:	4618      	mov	r0, r3
 80086c8:	f7fe fdf4 	bl	80072b4 <USBD_LL_Suspend>
 80086cc:	687b      	ldr	r3, [r7, #4]
 80086ce:	681b      	ldr	r3, [r3, #0]
 80086d0:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80086d4:	681b      	ldr	r3, [r3, #0]
 80086d6:	687a      	ldr	r2, [r7, #4]
 80086d8:	6812      	ldr	r2, [r2, #0]
 80086da:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 80086de:	f043 0301 	orr.w	r3, r3, #1
 80086e2:	6013      	str	r3, [r2, #0]
 80086e4:	687b      	ldr	r3, [r7, #4]
 80086e6:	6a1b      	ldr	r3, [r3, #32]
 80086e8:	2b00      	cmp	r3, #0
 80086ea:	d005      	beq.n	80086f8 <HAL_PCD_SuspendCallback+0x40>
 80086ec:	4b04      	ldr	r3, [pc, #16]	; (8008700 <HAL_PCD_SuspendCallback+0x48>)
 80086ee:	691b      	ldr	r3, [r3, #16]
 80086f0:	4a03      	ldr	r2, [pc, #12]	; (8008700 <HAL_PCD_SuspendCallback+0x48>)
 80086f2:	f043 0306 	orr.w	r3, r3, #6
 80086f6:	6113      	str	r3, [r2, #16]
 80086f8:	bf00      	nop
 80086fa:	3708      	adds	r7, #8
 80086fc:	46bd      	mov	sp, r7
 80086fe:	bd80      	pop	{r7, pc}
 8008700:	e000ed00 	.word	0xe000ed00

08008704 <HAL_PCD_ResumeCallback>:
 8008704:	b580      	push	{r7, lr}
 8008706:	b082      	sub	sp, #8
 8008708:	af00      	add	r7, sp, #0
 800870a:	6078      	str	r0, [r7, #4]
 800870c:	687b      	ldr	r3, [r7, #4]
 800870e:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008712:	4618      	mov	r0, r3
 8008714:	f7fe fde4 	bl	80072e0 <USBD_LL_Resume>
 8008718:	bf00      	nop
 800871a:	3708      	adds	r7, #8
 800871c:	46bd      	mov	sp, r7
 800871e:	bd80      	pop	{r7, pc}

08008720 <HAL_PCD_ISOOUTIncompleteCallback>:
 8008720:	b580      	push	{r7, lr}
 8008722:	b082      	sub	sp, #8
 8008724:	af00      	add	r7, sp, #0
 8008726:	6078      	str	r0, [r7, #4]
 8008728:	460b      	mov	r3, r1
 800872a:	70fb      	strb	r3, [r7, #3]
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008732:	78fa      	ldrb	r2, [r7, #3]
 8008734:	4611      	mov	r1, r2
 8008736:	4618      	mov	r0, r3
 8008738:	f7fe fe32 	bl	80073a0 <USBD_LL_IsoOUTIncomplete>
 800873c:	bf00      	nop
 800873e:	3708      	adds	r7, #8
 8008740:	46bd      	mov	sp, r7
 8008742:	bd80      	pop	{r7, pc}

08008744 <HAL_PCD_ISOINIncompleteCallback>:
 8008744:	b580      	push	{r7, lr}
 8008746:	b082      	sub	sp, #8
 8008748:	af00      	add	r7, sp, #0
 800874a:	6078      	str	r0, [r7, #4]
 800874c:	460b      	mov	r3, r1
 800874e:	70fb      	strb	r3, [r7, #3]
 8008750:	687b      	ldr	r3, [r7, #4]
 8008752:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008756:	78fa      	ldrb	r2, [r7, #3]
 8008758:	4611      	mov	r1, r2
 800875a:	4618      	mov	r0, r3
 800875c:	f7fe fdfa 	bl	8007354 <USBD_LL_IsoINIncomplete>
 8008760:	bf00      	nop
 8008762:	3708      	adds	r7, #8
 8008764:	46bd      	mov	sp, r7
 8008766:	bd80      	pop	{r7, pc}

08008768 <HAL_PCD_ConnectCallback>:
 8008768:	b580      	push	{r7, lr}
 800876a:	b082      	sub	sp, #8
 800876c:	af00      	add	r7, sp, #0
 800876e:	6078      	str	r0, [r7, #4]
 8008770:	687b      	ldr	r3, [r7, #4]
 8008772:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008776:	4618      	mov	r0, r3
 8008778:	f7fe fe38 	bl	80073ec <USBD_LL_DevConnected>
 800877c:	bf00      	nop
 800877e:	3708      	adds	r7, #8
 8008780:	46bd      	mov	sp, r7
 8008782:	bd80      	pop	{r7, pc}

08008784 <HAL_PCD_DisconnectCallback>:
 8008784:	b580      	push	{r7, lr}
 8008786:	b082      	sub	sp, #8
 8008788:	af00      	add	r7, sp, #0
 800878a:	6078      	str	r0, [r7, #4]
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8008792:	4618      	mov	r0, r3
 8008794:	f7fe fe35 	bl	8007402 <USBD_LL_DevDisconnected>
 8008798:	bf00      	nop
 800879a:	3708      	adds	r7, #8
 800879c:	46bd      	mov	sp, r7
 800879e:	bd80      	pop	{r7, pc}

080087a0 <USBD_LL_Init>:
 80087a0:	b580      	push	{r7, lr}
 80087a2:	b082      	sub	sp, #8
 80087a4:	af00      	add	r7, sp, #0
 80087a6:	6078      	str	r0, [r7, #4]
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	781b      	ldrb	r3, [r3, #0]
 80087ac:	2b00      	cmp	r3, #0
 80087ae:	d13c      	bne.n	800882a <USBD_LL_Init+0x8a>
 80087b0:	4a20      	ldr	r2, [pc, #128]	; (8008834 <USBD_LL_Init+0x94>)
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	4a1e      	ldr	r2, [pc, #120]	; (8008834 <USBD_LL_Init+0x94>)
 80087bc:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
 80087c0:	4b1c      	ldr	r3, [pc, #112]	; (8008834 <USBD_LL_Init+0x94>)
 80087c2:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80087c6:	601a      	str	r2, [r3, #0]
 80087c8:	4b1a      	ldr	r3, [pc, #104]	; (8008834 <USBD_LL_Init+0x94>)
 80087ca:	2204      	movs	r2, #4
 80087cc:	605a      	str	r2, [r3, #4]
 80087ce:	4b19      	ldr	r3, [pc, #100]	; (8008834 <USBD_LL_Init+0x94>)
 80087d0:	2202      	movs	r2, #2
 80087d2:	60da      	str	r2, [r3, #12]
 80087d4:	4b17      	ldr	r3, [pc, #92]	; (8008834 <USBD_LL_Init+0x94>)
 80087d6:	2200      	movs	r2, #0
 80087d8:	611a      	str	r2, [r3, #16]
 80087da:	4b16      	ldr	r3, [pc, #88]	; (8008834 <USBD_LL_Init+0x94>)
 80087dc:	2202      	movs	r2, #2
 80087de:	619a      	str	r2, [r3, #24]
 80087e0:	4b14      	ldr	r3, [pc, #80]	; (8008834 <USBD_LL_Init+0x94>)
 80087e2:	2200      	movs	r2, #0
 80087e4:	61da      	str	r2, [r3, #28]
 80087e6:	4b13      	ldr	r3, [pc, #76]	; (8008834 <USBD_LL_Init+0x94>)
 80087e8:	2200      	movs	r2, #0
 80087ea:	621a      	str	r2, [r3, #32]
 80087ec:	4b11      	ldr	r3, [pc, #68]	; (8008834 <USBD_LL_Init+0x94>)
 80087ee:	2200      	movs	r2, #0
 80087f0:	625a      	str	r2, [r3, #36]	; 0x24
 80087f2:	4b10      	ldr	r3, [pc, #64]	; (8008834 <USBD_LL_Init+0x94>)
 80087f4:	2201      	movs	r2, #1
 80087f6:	62da      	str	r2, [r3, #44]	; 0x2c
 80087f8:	4b0e      	ldr	r3, [pc, #56]	; (8008834 <USBD_LL_Init+0x94>)
 80087fa:	2200      	movs	r2, #0
 80087fc:	631a      	str	r2, [r3, #48]	; 0x30
 80087fe:	480d      	ldr	r0, [pc, #52]	; (8008834 <USBD_LL_Init+0x94>)
 8008800:	f7fa fb3a 	bl	8002e78 <HAL_PCD_Init>
 8008804:	4603      	mov	r3, r0
 8008806:	2b00      	cmp	r3, #0
 8008808:	d001      	beq.n	800880e <USBD_LL_Init+0x6e>
 800880a:	f7f8 f8bd 	bl	8000988 <Error_Handler>
 800880e:	2180      	movs	r1, #128	; 0x80
 8008810:	4808      	ldr	r0, [pc, #32]	; (8008834 <USBD_LL_Init+0x94>)
 8008812:	f7fb fc98 	bl	8004146 <HAL_PCDEx_SetRxFiFo>
 8008816:	2240      	movs	r2, #64	; 0x40
 8008818:	2100      	movs	r1, #0
 800881a:	4806      	ldr	r0, [pc, #24]	; (8008834 <USBD_LL_Init+0x94>)
 800881c:	f7fb fc4c 	bl	80040b8 <HAL_PCDEx_SetTxFiFo>
 8008820:	2280      	movs	r2, #128	; 0x80
 8008822:	2101      	movs	r1, #1
 8008824:	4803      	ldr	r0, [pc, #12]	; (8008834 <USBD_LL_Init+0x94>)
 8008826:	f7fb fc47 	bl	80040b8 <HAL_PCDEx_SetTxFiFo>
 800882a:	2300      	movs	r3, #0
 800882c:	4618      	mov	r0, r3
 800882e:	3708      	adds	r7, #8
 8008830:	46bd      	mov	sp, r7
 8008832:	bd80      	pop	{r7, pc}
 8008834:	20001d60 	.word	0x20001d60

08008838 <USBD_LL_Start>:
 8008838:	b580      	push	{r7, lr}
 800883a:	b084      	sub	sp, #16
 800883c:	af00      	add	r7, sp, #0
 800883e:	6078      	str	r0, [r7, #4]
 8008840:	2300      	movs	r3, #0
 8008842:	73fb      	strb	r3, [r7, #15]
 8008844:	2300      	movs	r3, #0
 8008846:	73bb      	strb	r3, [r7, #14]
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 800884e:	4618      	mov	r0, r3
 8008850:	f7fa fc2f 	bl	80030b2 <HAL_PCD_Start>
 8008854:	4603      	mov	r3, r0
 8008856:	73fb      	strb	r3, [r7, #15]
 8008858:	7bfb      	ldrb	r3, [r7, #15]
 800885a:	4618      	mov	r0, r3
 800885c:	f000 f942 	bl	8008ae4 <USBD_Get_USB_Status>
 8008860:	4603      	mov	r3, r0
 8008862:	73bb      	strb	r3, [r7, #14]
 8008864:	7bbb      	ldrb	r3, [r7, #14]
 8008866:	4618      	mov	r0, r3
 8008868:	3710      	adds	r7, #16
 800886a:	46bd      	mov	sp, r7
 800886c:	bd80      	pop	{r7, pc}

0800886e <USBD_LL_OpenEP>:
 800886e:	b580      	push	{r7, lr}
 8008870:	b084      	sub	sp, #16
 8008872:	af00      	add	r7, sp, #0
 8008874:	6078      	str	r0, [r7, #4]
 8008876:	4608      	mov	r0, r1
 8008878:	4611      	mov	r1, r2
 800887a:	461a      	mov	r2, r3
 800887c:	4603      	mov	r3, r0
 800887e:	70fb      	strb	r3, [r7, #3]
 8008880:	460b      	mov	r3, r1
 8008882:	70bb      	strb	r3, [r7, #2]
 8008884:	4613      	mov	r3, r2
 8008886:	803b      	strh	r3, [r7, #0]
 8008888:	2300      	movs	r3, #0
 800888a:	73fb      	strb	r3, [r7, #15]
 800888c:	2300      	movs	r3, #0
 800888e:	73bb      	strb	r3, [r7, #14]
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	f8d3 02c4 	ldr.w	r0, [r3, #708]	; 0x2c4
 8008896:	78bb      	ldrb	r3, [r7, #2]
 8008898:	883a      	ldrh	r2, [r7, #0]
 800889a:	78f9      	ldrb	r1, [r7, #3]
 800889c:	f7fb f813 	bl	80038c6 <HAL_PCD_EP_Open>
 80088a0:	4603      	mov	r3, r0
 80088a2:	73fb      	strb	r3, [r7, #15]
 80088a4:	7bfb      	ldrb	r3, [r7, #15]
 80088a6:	4618      	mov	r0, r3
 80088a8:	f000 f91c 	bl	8008ae4 <USBD_Get_USB_Status>
 80088ac:	4603      	mov	r3, r0
 80088ae:	73bb      	strb	r3, [r7, #14]
 80088b0:	7bbb      	ldrb	r3, [r7, #14]
 80088b2:	4618      	mov	r0, r3
 80088b4:	3710      	adds	r7, #16
 80088b6:	46bd      	mov	sp, r7
 80088b8:	bd80      	pop	{r7, pc}

080088ba <USBD_LL_CloseEP>:
 80088ba:	b580      	push	{r7, lr}
 80088bc:	b084      	sub	sp, #16
 80088be:	af00      	add	r7, sp, #0
 80088c0:	6078      	str	r0, [r7, #4]
 80088c2:	460b      	mov	r3, r1
 80088c4:	70fb      	strb	r3, [r7, #3]
 80088c6:	2300      	movs	r3, #0
 80088c8:	73fb      	strb	r3, [r7, #15]
 80088ca:	2300      	movs	r3, #0
 80088cc:	73bb      	strb	r3, [r7, #14]
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 80088d4:	78fa      	ldrb	r2, [r7, #3]
 80088d6:	4611      	mov	r1, r2
 80088d8:	4618      	mov	r0, r3
 80088da:	f7fb f85c 	bl	8003996 <HAL_PCD_EP_Close>
 80088de:	4603      	mov	r3, r0
 80088e0:	73fb      	strb	r3, [r7, #15]
 80088e2:	7bfb      	ldrb	r3, [r7, #15]
 80088e4:	4618      	mov	r0, r3
 80088e6:	f000 f8fd 	bl	8008ae4 <USBD_Get_USB_Status>
 80088ea:	4603      	mov	r3, r0
 80088ec:	73bb      	strb	r3, [r7, #14]
 80088ee:	7bbb      	ldrb	r3, [r7, #14]
 80088f0:	4618      	mov	r0, r3
 80088f2:	3710      	adds	r7, #16
 80088f4:	46bd      	mov	sp, r7
 80088f6:	bd80      	pop	{r7, pc}

080088f8 <USBD_LL_StallEP>:
 80088f8:	b580      	push	{r7, lr}
 80088fa:	b084      	sub	sp, #16
 80088fc:	af00      	add	r7, sp, #0
 80088fe:	6078      	str	r0, [r7, #4]
 8008900:	460b      	mov	r3, r1
 8008902:	70fb      	strb	r3, [r7, #3]
 8008904:	2300      	movs	r3, #0
 8008906:	73fb      	strb	r3, [r7, #15]
 8008908:	2300      	movs	r3, #0
 800890a:	73bb      	strb	r3, [r7, #14]
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8008912:	78fa      	ldrb	r2, [r7, #3]
 8008914:	4611      	mov	r1, r2
 8008916:	4618      	mov	r0, r3
 8008918:	f7fb f934 	bl	8003b84 <HAL_PCD_EP_SetStall>
 800891c:	4603      	mov	r3, r0
 800891e:	73fb      	strb	r3, [r7, #15]
 8008920:	7bfb      	ldrb	r3, [r7, #15]
 8008922:	4618      	mov	r0, r3
 8008924:	f000 f8de 	bl	8008ae4 <USBD_Get_USB_Status>
 8008928:	4603      	mov	r3, r0
 800892a:	73bb      	strb	r3, [r7, #14]
 800892c:	7bbb      	ldrb	r3, [r7, #14]
 800892e:	4618      	mov	r0, r3
 8008930:	3710      	adds	r7, #16
 8008932:	46bd      	mov	sp, r7
 8008934:	bd80      	pop	{r7, pc}

08008936 <USBD_LL_ClearStallEP>:
 8008936:	b580      	push	{r7, lr}
 8008938:	b084      	sub	sp, #16
 800893a:	af00      	add	r7, sp, #0
 800893c:	6078      	str	r0, [r7, #4]
 800893e:	460b      	mov	r3, r1
 8008940:	70fb      	strb	r3, [r7, #3]
 8008942:	2300      	movs	r3, #0
 8008944:	73fb      	strb	r3, [r7, #15]
 8008946:	2300      	movs	r3, #0
 8008948:	73bb      	strb	r3, [r7, #14]
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8008950:	78fa      	ldrb	r2, [r7, #3]
 8008952:	4611      	mov	r1, r2
 8008954:	4618      	mov	r0, r3
 8008956:	f7fb f979 	bl	8003c4c <HAL_PCD_EP_ClrStall>
 800895a:	4603      	mov	r3, r0
 800895c:	73fb      	strb	r3, [r7, #15]
 800895e:	7bfb      	ldrb	r3, [r7, #15]
 8008960:	4618      	mov	r0, r3
 8008962:	f000 f8bf 	bl	8008ae4 <USBD_Get_USB_Status>
 8008966:	4603      	mov	r3, r0
 8008968:	73bb      	strb	r3, [r7, #14]
 800896a:	7bbb      	ldrb	r3, [r7, #14]
 800896c:	4618      	mov	r0, r3
 800896e:	3710      	adds	r7, #16
 8008970:	46bd      	mov	sp, r7
 8008972:	bd80      	pop	{r7, pc}

08008974 <USBD_LL_IsStallEP>:
 8008974:	b480      	push	{r7}
 8008976:	b085      	sub	sp, #20
 8008978:	af00      	add	r7, sp, #0
 800897a:	6078      	str	r0, [r7, #4]
 800897c:	460b      	mov	r3, r1
 800897e:	70fb      	strb	r3, [r7, #3]
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8008986:	60fb      	str	r3, [r7, #12]
 8008988:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800898c:	2b00      	cmp	r3, #0
 800898e:	da0b      	bge.n	80089a8 <USBD_LL_IsStallEP+0x34>
 8008990:	78fb      	ldrb	r3, [r7, #3]
 8008992:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8008996:	68f9      	ldr	r1, [r7, #12]
 8008998:	4613      	mov	r3, r2
 800899a:	00db      	lsls	r3, r3, #3
 800899c:	1a9b      	subs	r3, r3, r2
 800899e:	009b      	lsls	r3, r3, #2
 80089a0:	440b      	add	r3, r1
 80089a2:	333e      	adds	r3, #62	; 0x3e
 80089a4:	781b      	ldrb	r3, [r3, #0]
 80089a6:	e00b      	b.n	80089c0 <USBD_LL_IsStallEP+0x4c>
 80089a8:	78fb      	ldrb	r3, [r7, #3]
 80089aa:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80089ae:	68f9      	ldr	r1, [r7, #12]
 80089b0:	4613      	mov	r3, r2
 80089b2:	00db      	lsls	r3, r3, #3
 80089b4:	1a9b      	subs	r3, r3, r2
 80089b6:	009b      	lsls	r3, r3, #2
 80089b8:	440b      	add	r3, r1
 80089ba:	f503 73ff 	add.w	r3, r3, #510	; 0x1fe
 80089be:	781b      	ldrb	r3, [r3, #0]
 80089c0:	4618      	mov	r0, r3
 80089c2:	3714      	adds	r7, #20
 80089c4:	46bd      	mov	sp, r7
 80089c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ca:	4770      	bx	lr

080089cc <USBD_LL_SetUSBAddress>:
 80089cc:	b580      	push	{r7, lr}
 80089ce:	b084      	sub	sp, #16
 80089d0:	af00      	add	r7, sp, #0
 80089d2:	6078      	str	r0, [r7, #4]
 80089d4:	460b      	mov	r3, r1
 80089d6:	70fb      	strb	r3, [r7, #3]
 80089d8:	2300      	movs	r3, #0
 80089da:	73fb      	strb	r3, [r7, #15]
 80089dc:	2300      	movs	r3, #0
 80089de:	73bb      	strb	r3, [r7, #14]
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 80089e6:	78fa      	ldrb	r2, [r7, #3]
 80089e8:	4611      	mov	r1, r2
 80089ea:	4618      	mov	r0, r3
 80089ec:	f7fa ff46 	bl	800387c <HAL_PCD_SetAddress>
 80089f0:	4603      	mov	r3, r0
 80089f2:	73fb      	strb	r3, [r7, #15]
 80089f4:	7bfb      	ldrb	r3, [r7, #15]
 80089f6:	4618      	mov	r0, r3
 80089f8:	f000 f874 	bl	8008ae4 <USBD_Get_USB_Status>
 80089fc:	4603      	mov	r3, r0
 80089fe:	73bb      	strb	r3, [r7, #14]
 8008a00:	7bbb      	ldrb	r3, [r7, #14]
 8008a02:	4618      	mov	r0, r3
 8008a04:	3710      	adds	r7, #16
 8008a06:	46bd      	mov	sp, r7
 8008a08:	bd80      	pop	{r7, pc}

08008a0a <USBD_LL_Transmit>:
 8008a0a:	b580      	push	{r7, lr}
 8008a0c:	b086      	sub	sp, #24
 8008a0e:	af00      	add	r7, sp, #0
 8008a10:	60f8      	str	r0, [r7, #12]
 8008a12:	607a      	str	r2, [r7, #4]
 8008a14:	603b      	str	r3, [r7, #0]
 8008a16:	460b      	mov	r3, r1
 8008a18:	72fb      	strb	r3, [r7, #11]
 8008a1a:	2300      	movs	r3, #0
 8008a1c:	75fb      	strb	r3, [r7, #23]
 8008a1e:	2300      	movs	r3, #0
 8008a20:	75bb      	strb	r3, [r7, #22]
 8008a22:	68fb      	ldr	r3, [r7, #12]
 8008a24:	f8d3 02c4 	ldr.w	r0, [r3, #708]	; 0x2c4
 8008a28:	7af9      	ldrb	r1, [r7, #11]
 8008a2a:	683b      	ldr	r3, [r7, #0]
 8008a2c:	687a      	ldr	r2, [r7, #4]
 8008a2e:	f7fb f85f 	bl	8003af0 <HAL_PCD_EP_Transmit>
 8008a32:	4603      	mov	r3, r0
 8008a34:	75fb      	strb	r3, [r7, #23]
 8008a36:	7dfb      	ldrb	r3, [r7, #23]
 8008a38:	4618      	mov	r0, r3
 8008a3a:	f000 f853 	bl	8008ae4 <USBD_Get_USB_Status>
 8008a3e:	4603      	mov	r3, r0
 8008a40:	75bb      	strb	r3, [r7, #22]
 8008a42:	7dbb      	ldrb	r3, [r7, #22]
 8008a44:	4618      	mov	r0, r3
 8008a46:	3718      	adds	r7, #24
 8008a48:	46bd      	mov	sp, r7
 8008a4a:	bd80      	pop	{r7, pc}

08008a4c <USBD_LL_PrepareReceive>:
 8008a4c:	b580      	push	{r7, lr}
 8008a4e:	b086      	sub	sp, #24
 8008a50:	af00      	add	r7, sp, #0
 8008a52:	60f8      	str	r0, [r7, #12]
 8008a54:	607a      	str	r2, [r7, #4]
 8008a56:	603b      	str	r3, [r7, #0]
 8008a58:	460b      	mov	r3, r1
 8008a5a:	72fb      	strb	r3, [r7, #11]
 8008a5c:	2300      	movs	r3, #0
 8008a5e:	75fb      	strb	r3, [r7, #23]
 8008a60:	2300      	movs	r3, #0
 8008a62:	75bb      	strb	r3, [r7, #22]
 8008a64:	68fb      	ldr	r3, [r7, #12]
 8008a66:	f8d3 02c4 	ldr.w	r0, [r3, #708]	; 0x2c4
 8008a6a:	7af9      	ldrb	r1, [r7, #11]
 8008a6c:	683b      	ldr	r3, [r7, #0]
 8008a6e:	687a      	ldr	r2, [r7, #4]
 8008a70:	f7fa ffdb 	bl	8003a2a <HAL_PCD_EP_Receive>
 8008a74:	4603      	mov	r3, r0
 8008a76:	75fb      	strb	r3, [r7, #23]
 8008a78:	7dfb      	ldrb	r3, [r7, #23]
 8008a7a:	4618      	mov	r0, r3
 8008a7c:	f000 f832 	bl	8008ae4 <USBD_Get_USB_Status>
 8008a80:	4603      	mov	r3, r0
 8008a82:	75bb      	strb	r3, [r7, #22]
 8008a84:	7dbb      	ldrb	r3, [r7, #22]
 8008a86:	4618      	mov	r0, r3
 8008a88:	3718      	adds	r7, #24
 8008a8a:	46bd      	mov	sp, r7
 8008a8c:	bd80      	pop	{r7, pc}

08008a8e <USBD_LL_GetRxDataSize>:
 8008a8e:	b580      	push	{r7, lr}
 8008a90:	b082      	sub	sp, #8
 8008a92:	af00      	add	r7, sp, #0
 8008a94:	6078      	str	r0, [r7, #4]
 8008a96:	460b      	mov	r3, r1
 8008a98:	70fb      	strb	r3, [r7, #3]
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8008aa0:	78fa      	ldrb	r2, [r7, #3]
 8008aa2:	4611      	mov	r1, r2
 8008aa4:	4618      	mov	r0, r3
 8008aa6:	f7fb f80b 	bl	8003ac0 <HAL_PCD_EP_GetRxCount>
 8008aaa:	4603      	mov	r3, r0
 8008aac:	4618      	mov	r0, r3
 8008aae:	3708      	adds	r7, #8
 8008ab0:	46bd      	mov	sp, r7
 8008ab2:	bd80      	pop	{r7, pc}

08008ab4 <USBD_static_malloc>:
 8008ab4:	b480      	push	{r7}
 8008ab6:	b083      	sub	sp, #12
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	6078      	str	r0, [r7, #4]
 8008abc:	4b03      	ldr	r3, [pc, #12]	; (8008acc <USBD_static_malloc+0x18>)
 8008abe:	4618      	mov	r0, r3
 8008ac0:	370c      	adds	r7, #12
 8008ac2:	46bd      	mov	sp, r7
 8008ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ac8:	4770      	bx	lr
 8008aca:	bf00      	nop
 8008acc:	2000066c 	.word	0x2000066c

08008ad0 <USBD_static_free>:
 8008ad0:	b480      	push	{r7}
 8008ad2:	b083      	sub	sp, #12
 8008ad4:	af00      	add	r7, sp, #0
 8008ad6:	6078      	str	r0, [r7, #4]
 8008ad8:	bf00      	nop
 8008ada:	370c      	adds	r7, #12
 8008adc:	46bd      	mov	sp, r7
 8008ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ae2:	4770      	bx	lr

08008ae4 <USBD_Get_USB_Status>:
 8008ae4:	b480      	push	{r7}
 8008ae6:	b085      	sub	sp, #20
 8008ae8:	af00      	add	r7, sp, #0
 8008aea:	4603      	mov	r3, r0
 8008aec:	71fb      	strb	r3, [r7, #7]
 8008aee:	2300      	movs	r3, #0
 8008af0:	73fb      	strb	r3, [r7, #15]
 8008af2:	79fb      	ldrb	r3, [r7, #7]
 8008af4:	2b03      	cmp	r3, #3
 8008af6:	d817      	bhi.n	8008b28 <USBD_Get_USB_Status+0x44>
 8008af8:	a201      	add	r2, pc, #4	; (adr r2, 8008b00 <USBD_Get_USB_Status+0x1c>)
 8008afa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008afe:	bf00      	nop
 8008b00:	08008b11 	.word	0x08008b11
 8008b04:	08008b17 	.word	0x08008b17
 8008b08:	08008b1d 	.word	0x08008b1d
 8008b0c:	08008b23 	.word	0x08008b23
 8008b10:	2300      	movs	r3, #0
 8008b12:	73fb      	strb	r3, [r7, #15]
 8008b14:	e00b      	b.n	8008b2e <USBD_Get_USB_Status+0x4a>
 8008b16:	2303      	movs	r3, #3
 8008b18:	73fb      	strb	r3, [r7, #15]
 8008b1a:	e008      	b.n	8008b2e <USBD_Get_USB_Status+0x4a>
 8008b1c:	2301      	movs	r3, #1
 8008b1e:	73fb      	strb	r3, [r7, #15]
 8008b20:	e005      	b.n	8008b2e <USBD_Get_USB_Status+0x4a>
 8008b22:	2303      	movs	r3, #3
 8008b24:	73fb      	strb	r3, [r7, #15]
 8008b26:	e002      	b.n	8008b2e <USBD_Get_USB_Status+0x4a>
 8008b28:	2303      	movs	r3, #3
 8008b2a:	73fb      	strb	r3, [r7, #15]
 8008b2c:	bf00      	nop
 8008b2e:	7bfb      	ldrb	r3, [r7, #15]
 8008b30:	4618      	mov	r0, r3
 8008b32:	3714      	adds	r7, #20
 8008b34:	46bd      	mov	sp, r7
 8008b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b3a:	4770      	bx	lr

08008b3c <__cxa_pure_virtual>:
 8008b3c:	b508      	push	{r3, lr}
 8008b3e:	f000 f80d 	bl	8008b5c <_ZSt9terminatev>

08008b42 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8008b42:	b508      	push	{r3, lr}
 8008b44:	4780      	blx	r0
 8008b46:	f000 f80e 	bl	8008b66 <abort>
	...

08008b4c <_ZSt13get_terminatev>:
 8008b4c:	4b02      	ldr	r3, [pc, #8]	; (8008b58 <_ZSt13get_terminatev+0xc>)
 8008b4e:	6818      	ldr	r0, [r3, #0]
 8008b50:	f3bf 8f5b 	dmb	ish
 8008b54:	4770      	bx	lr
 8008b56:	bf00      	nop
 8008b58:	20000180 	.word	0x20000180

08008b5c <_ZSt9terminatev>:
 8008b5c:	b508      	push	{r3, lr}
 8008b5e:	f7ff fff5 	bl	8008b4c <_ZSt13get_terminatev>
 8008b62:	f7ff ffee 	bl	8008b42 <_ZN10__cxxabiv111__terminateEPFvvE>

08008b66 <abort>:
 8008b66:	b508      	push	{r3, lr}
 8008b68:	2006      	movs	r0, #6
 8008b6a:	f000 f86b 	bl	8008c44 <raise>
 8008b6e:	2001      	movs	r0, #1
 8008b70:	f7f8 fffa 	bl	8001b68 <_exit>

08008b74 <__errno>:
 8008b74:	4b01      	ldr	r3, [pc, #4]	; (8008b7c <__errno+0x8>)
 8008b76:	6818      	ldr	r0, [r3, #0]
 8008b78:	4770      	bx	lr
 8008b7a:	bf00      	nop
 8008b7c:	20000184 	.word	0x20000184

08008b80 <__libc_init_array>:
 8008b80:	b570      	push	{r4, r5, r6, lr}
 8008b82:	4d0d      	ldr	r5, [pc, #52]	; (8008bb8 <__libc_init_array+0x38>)
 8008b84:	4c0d      	ldr	r4, [pc, #52]	; (8008bbc <__libc_init_array+0x3c>)
 8008b86:	1b64      	subs	r4, r4, r5
 8008b88:	10a4      	asrs	r4, r4, #2
 8008b8a:	2600      	movs	r6, #0
 8008b8c:	42a6      	cmp	r6, r4
 8008b8e:	d109      	bne.n	8008ba4 <__libc_init_array+0x24>
 8008b90:	4d0b      	ldr	r5, [pc, #44]	; (8008bc0 <__libc_init_array+0x40>)
 8008b92:	4c0c      	ldr	r4, [pc, #48]	; (8008bc4 <__libc_init_array+0x44>)
 8008b94:	f000 f872 	bl	8008c7c <_init>
 8008b98:	1b64      	subs	r4, r4, r5
 8008b9a:	10a4      	asrs	r4, r4, #2
 8008b9c:	2600      	movs	r6, #0
 8008b9e:	42a6      	cmp	r6, r4
 8008ba0:	d105      	bne.n	8008bae <__libc_init_array+0x2e>
 8008ba2:	bd70      	pop	{r4, r5, r6, pc}
 8008ba4:	f855 3b04 	ldr.w	r3, [r5], #4
 8008ba8:	4798      	blx	r3
 8008baa:	3601      	adds	r6, #1
 8008bac:	e7ee      	b.n	8008b8c <__libc_init_array+0xc>
 8008bae:	f855 3b04 	ldr.w	r3, [r5], #4
 8008bb2:	4798      	blx	r3
 8008bb4:	3601      	adds	r6, #1
 8008bb6:	e7f2      	b.n	8008b9e <__libc_init_array+0x1e>
 8008bb8:	08008d40 	.word	0x08008d40
 8008bbc:	08008d40 	.word	0x08008d40
 8008bc0:	08008d40 	.word	0x08008d40
 8008bc4:	08008d48 	.word	0x08008d48

08008bc8 <memcpy>:
 8008bc8:	440a      	add	r2, r1
 8008bca:	4291      	cmp	r1, r2
 8008bcc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008bd0:	d100      	bne.n	8008bd4 <memcpy+0xc>
 8008bd2:	4770      	bx	lr
 8008bd4:	b510      	push	{r4, lr}
 8008bd6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008bda:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008bde:	4291      	cmp	r1, r2
 8008be0:	d1f9      	bne.n	8008bd6 <memcpy+0xe>
 8008be2:	bd10      	pop	{r4, pc}

08008be4 <memset>:
 8008be4:	4402      	add	r2, r0
 8008be6:	4603      	mov	r3, r0
 8008be8:	4293      	cmp	r3, r2
 8008bea:	d100      	bne.n	8008bee <memset+0xa>
 8008bec:	4770      	bx	lr
 8008bee:	f803 1b01 	strb.w	r1, [r3], #1
 8008bf2:	e7f9      	b.n	8008be8 <memset+0x4>

08008bf4 <_raise_r>:
 8008bf4:	291f      	cmp	r1, #31
 8008bf6:	b538      	push	{r3, r4, r5, lr}
 8008bf8:	4604      	mov	r4, r0
 8008bfa:	460d      	mov	r5, r1
 8008bfc:	d904      	bls.n	8008c08 <_raise_r+0x14>
 8008bfe:	2316      	movs	r3, #22
 8008c00:	6003      	str	r3, [r0, #0]
 8008c02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008c06:	bd38      	pop	{r3, r4, r5, pc}
 8008c08:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8008c0a:	b112      	cbz	r2, 8008c12 <_raise_r+0x1e>
 8008c0c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008c10:	b94b      	cbnz	r3, 8008c26 <_raise_r+0x32>
 8008c12:	4620      	mov	r0, r4
 8008c14:	f000 f830 	bl	8008c78 <_getpid_r>
 8008c18:	462a      	mov	r2, r5
 8008c1a:	4601      	mov	r1, r0
 8008c1c:	4620      	mov	r0, r4
 8008c1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008c22:	f000 b817 	b.w	8008c54 <_kill_r>
 8008c26:	2b01      	cmp	r3, #1
 8008c28:	d00a      	beq.n	8008c40 <_raise_r+0x4c>
 8008c2a:	1c59      	adds	r1, r3, #1
 8008c2c:	d103      	bne.n	8008c36 <_raise_r+0x42>
 8008c2e:	2316      	movs	r3, #22
 8008c30:	6003      	str	r3, [r0, #0]
 8008c32:	2001      	movs	r0, #1
 8008c34:	e7e7      	b.n	8008c06 <_raise_r+0x12>
 8008c36:	2400      	movs	r4, #0
 8008c38:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008c3c:	4628      	mov	r0, r5
 8008c3e:	4798      	blx	r3
 8008c40:	2000      	movs	r0, #0
 8008c42:	e7e0      	b.n	8008c06 <_raise_r+0x12>

08008c44 <raise>:
 8008c44:	4b02      	ldr	r3, [pc, #8]	; (8008c50 <raise+0xc>)
 8008c46:	4601      	mov	r1, r0
 8008c48:	6818      	ldr	r0, [r3, #0]
 8008c4a:	f7ff bfd3 	b.w	8008bf4 <_raise_r>
 8008c4e:	bf00      	nop
 8008c50:	20000184 	.word	0x20000184

08008c54 <_kill_r>:
 8008c54:	b538      	push	{r3, r4, r5, lr}
 8008c56:	4d07      	ldr	r5, [pc, #28]	; (8008c74 <_kill_r+0x20>)
 8008c58:	2300      	movs	r3, #0
 8008c5a:	4604      	mov	r4, r0
 8008c5c:	4608      	mov	r0, r1
 8008c5e:	4611      	mov	r1, r2
 8008c60:	602b      	str	r3, [r5, #0]
 8008c62:	f7f8 ff71 	bl	8001b48 <_kill>
 8008c66:	1c43      	adds	r3, r0, #1
 8008c68:	d102      	bne.n	8008c70 <_kill_r+0x1c>
 8008c6a:	682b      	ldr	r3, [r5, #0]
 8008c6c:	b103      	cbz	r3, 8008c70 <_kill_r+0x1c>
 8008c6e:	6023      	str	r3, [r4, #0]
 8008c70:	bd38      	pop	{r3, r4, r5, pc}
 8008c72:	bf00      	nop
 8008c74:	20002168 	.word	0x20002168

08008c78 <_getpid_r>:
 8008c78:	f7f8 bf5e 	b.w	8001b38 <_getpid>

08008c7c <_init>:
 8008c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c7e:	bf00      	nop
 8008c80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008c82:	bc08      	pop	{r3}
 8008c84:	469e      	mov	lr, r3
 8008c86:	4770      	bx	lr

08008c88 <_fini>:
 8008c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c8a:	bf00      	nop
 8008c8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008c8e:	bc08      	pop	{r3}
 8008c90:	469e      	mov	lr, r3
 8008c92:	4770      	bx	lr
